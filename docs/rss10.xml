<?xml version="1.0"?>
<rdf:RDF
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:foaf="http://xmlns.com/foaf/0.1/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns="http://purl.org/rss/1.0/"
>
<channel rdf:about="http://planet.du.zoomquiet.us/">
	<title>Planet DebugUself</title>
	<link>http://planet.du.zoomquiet.us/</link>
	<description>Planet DebugUself - http://planet.du.zoomquiet.us/</description>

	<items>
		<rdf:Seq>
			<rdf:li rdf:resource="https://zhuzi.dev/2021/06/05/douban-backup-sync-notion/" />
			<rdf:li rdf:resource="tag:weekly.pychina.org,2021-05-28:/python-weekly/pyw-501.html" />
			<rdf:li rdf:resource="tag:weekly.pychina.org,2021-06-02:/issue/issue-475.html" />
			<rdf:li rdf:resource="https://ericazhan.github.io/210531weekly.html" />
		</rdf:Seq>
	</items>
</channel>

<item rdf:about="https://zhuzi.dev/2021/06/05/douban-backup-sync-notion/">
	<title>bambooooooom: 豆瓣标记导出到 Notion 并同步</title>
	<link>https://zhuzi.dev/2021/06/05/douban-backup-sync-notion/</link>
	<content:encoded>&lt;p&gt;我个人的豆瓣标记条目导出到 Notion 并同步的一套操作和工具，并不适用于所有人。并且可能还有问题没有发现。&lt;/p&gt;

&lt;h2 id=&quot;1-使用油猴脚本一键导出看过读过听过的电影书音乐条目&quot;&gt;1. 使用油猴脚本一键导出&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;看过/读过/听过&lt;/code&gt;的电影、书、音乐条目&lt;/h2&gt;

&lt;p&gt;脚本 -&amp;gt; &lt;a href=&quot;https://greasyfork.org/en/scripts/420999-%E8%B1%86%E7%93%A3%E8%AF%BB%E4%B9%A6-%E7%94%B5%E5%BD%B1-%E9%9F%B3%E4%B9%90%E5%AF%BC%E5%87%BA%E5%B7%A5%E5%85%B7&quot;&gt;豆瓣读书+电影+音乐导出工具&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;是我从另外一个友邻的脚本完善修改的，安装后会在自己的豆瓣页面上看到多出三个链接：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://zhuzi.dev/assets/images/douban-backup-monkey-script.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;分别点击这三个链接就会分别从 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://movie.douban.com/mine?status=collect&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://music.douban.com/mine?status=collect&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://book.douban.com/mine?status=collect&lt;/code&gt; 这三个地方自动翻页去获取个人标记数据（包括评分、评分时间以及短评）并最终导出 csv 文件。每次都可能需要一点时间给脚本去翻页获取数据，中途不要关掉浏览器，也不要在这个页面上去操作什么。&lt;/p&gt;

&lt;p&gt;因为这三个地方不是具体条目页面，所以页面访问 limit request 并不严格，所以这样跑脚本完全不会被当做机器人而遭到封禁 IP 或要求重新登录之类的处理。
但局限也就是这里无法准确获取更多有关条目本身的信息，比如电影条目的 IMDb 链接、制片国家，也无法精准把导演和演员之类的人名区分开。&lt;/p&gt;

&lt;h2 id=&quot;2-在-notion-创建-database-并导入-csv&quot;&gt;2. 在 Notion 创建 database 并导入 csv&lt;/h2&gt;

&lt;p&gt;在 Notion 中新建一个 database，也就是表格。然后给表格设置每一列的 Property 名字和类型，名字需要对应前面导出的 csv 的表头的名字和顺序。&lt;/p&gt;

&lt;p&gt;例如我的油猴脚本导出的 csv 是这样的:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;标题&lt;/th&gt;
      &lt;th&gt;个人评分&lt;/th&gt;
      &lt;th&gt;打分日期&lt;/th&gt;
      &lt;th&gt;我的短评&lt;/th&gt;
      &lt;th&gt;上映日期&lt;/th&gt;
      &lt;th&gt;制片国家&lt;/th&gt;
      &lt;th&gt;条目链接&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;音乐 / 音楽&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;2021/05/22&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;2019/09/26&lt;/td&gt;
      &lt;td&gt;加拿大&lt;/td&gt;
      &lt;td&gt;https://movie.douban.com/subject/34429100/&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;王者天下 / キングダム&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2021/05/19&lt;/td&gt;
      &lt;td&gt;太难看了，真是适合飞机上打发时间，只有麻酱太美太帅了！！！&lt;/td&gt;
      &lt;td&gt;2019/04/19&lt;/td&gt;
      &lt;td&gt;日本&lt;/td&gt;
      &lt;td&gt;https://movie.douban.com/subject/27611498/&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;如果不喜欢这个顺序，可以自己用 excel 或 wps 之类的工具打开调整顺序后再重新导出 csv 文件。&lt;/p&gt;

&lt;p&gt;然后在 Notion 页面都右上角菜单打开后选择 Merge with CSV 并选择这个 csv 文件后稍等片刻即可完成导入。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://zhuzi.dev/assets/images/douban-backup-notion-merge-csv.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;导入后大致效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://zhuzi.dev/assets/images/douban-backup-notion-db.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-使用-github-actions-定时从-rss-信息将豆瓣标记更新同步到-notion&quot;&gt;3. 使用 GitHub Actions 定时从 RSS 信息将豆瓣标记更新同步到 Notion&lt;/h2&gt;

&lt;p&gt;虽然尽量把豆瓣标记条目备份导出了，但并没有打算完全不用豆瓣了，毕竟的确没有完美的替代，这里的友邻也都依然是我喜欢和期望看到的。
所以上面两步其实我 4 个月前就做好了的，但对我来说最大的困扰是如何在上面的操作之后继续同步标记呢？
每个条目都手动输入的话可太麻烦了，那每次都从豆瓣重新导出 csv 再将新的条目合并进 Notion 操作起来似乎也很麻烦。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;前两步还是比较傻瓜式操作的，基本上大多数人都可以轻易完成，但这个第三步就比较麻烦了。一定需要的是 GitHub 账号，如果不会折腾，也可以如我上面说的，隔一段时间重新跑一下导出脚本，缺点是得自己手动操作把已导入的部分去掉，然后将包含剩余部分的 csv 文件再次导入到 Notion 中即可。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;后来我想到的一个方法是通过 RSS，所幸这么多年过去了，google reader 都死掉了，豆瓣的 RSS 依然还保留着。
在个人页面的右下角一直安静地存在着：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://zhuzi.dev/assets/images/douban-rss.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;以&lt;a href=&quot;https://www.douban.com/feed/people/MoNoMilky/interests&quot;&gt;我的账号的 RSS 信息&lt;/a&gt;为例，
这个 feed 里只有书影音的标记信息，并且想看、在看、看过三类状态的信息也都包括。缺点是仅有保留最新的 10 条信息。&lt;/p&gt;

&lt;p&gt;所以我个人的方法是定时读取这个 RSS feed，然后从中将新的标记信息自动更新到 Notion 里去，就很方便了。
这个想法在 4 个月前就基本成型了，但等到 Notion 提供 Public API 之后才终于能够实现了。&lt;/p&gt;

&lt;p&gt;完成的脚本 -&amp;gt; &lt;a href=&quot;https://github.com/bambooom/douban-backup/blob/main/sync-rss.js&quot;&gt;sync-rss.js&lt;/a&gt; 就是做了上述事项，其中也顺便针对每个新的条目去条目页面截取了更多我想要保留的信息，因为数量很少所以也不会引发被封锁 IP。（代码写的很 ugly，凑合能用吧😂 ）&lt;/p&gt;

&lt;p&gt;想要成功使用这个脚本，需要做几件事：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;注册一个 GitHub 账号&lt;/li&gt;
  &lt;li&gt;fork 我的代码仓库 https://github.com/bambooom/douban-backup （懂的人也可以不 fork）&lt;/li&gt;
  &lt;li&gt;按照 &lt;a href=&quot;https://developers.notion.com/docs/getting-started&quot;&gt;Notion 文档&lt;/a&gt; 注册一个 Integration，叫什么名字随意，获取 Token&lt;/li&gt;
  &lt;li&gt;在你前面创建的 database 页面邀请 Integration（把它想成一个 bot），这样你就可以使用 Notion API Token 来访问或者更新 Notion 了。要注意的是每个 database 都需要单独邀请 Integration&lt;/li&gt;
  &lt;li&gt;在自己 fork 或创建的代码仓库里设置 secrets，key 的名字如图，NOTION_TOKEN 即第三步获取的 Token，NOTION_BOOK/MOVIE/MUSIC_DATABASE_ID 是你自己的数据库的 ID，在 Notion 网站的 URL 上即可复制 （前面的 Notion 文档中也有提到什么是 database ID）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://zhuzi.dev/assets/images/douban-backup-secrets.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://www.notion.so/myworkspace/a8aec43384f447ed84390e8e42c2e089?v=...
                                  |--------- Database ID --------|
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;如果是懂自己在干什么的人，想要在自己电脑上跑脚本的话，需要在仓库目录下创建一个叫 `.env` 的文件配置齐下面的 secrets 即可
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最后这个脚本需要定时跑，也就是一个 cron job 而已，又穷又懒的我，发现了 GitHub 近来在推的自家的 Actions 功能是可以做定时任务的，&lt;a href=&quot;https://docs.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events&quot;&gt;参考文档&lt;/a&gt;。
免费用户的公开仓库似乎也完全不限制 Actions 的使用（Private repo 是有限制使用分钟数的），所以我在仓库里添加了这个 &lt;a href=&quot;https://github.com/bambooom/douban-backup/blob/main/.github/workflows/sync-rss.js.yml&quot;&gt;workflow 设置文件&lt;/a&gt;。
我设置的是每 6 个小时跑一次，因为我的标记也没有那么频繁，应该是够用了的。&lt;/p&gt;

&lt;p&gt;最终 -&amp;gt; &lt;a href=&quot;https://www.notion.so/f6ff9481e3c044b09d9a46645e92d5b8&quot;&gt;我的 Notion 书影音 database&lt;/a&gt;&lt;/p&gt;</content:encoded>
	<dc:date>2021-06-05T00:00:00+00:00</dc:date>
</item>
<item rdf:about="https://weekly.pychina.org/python-weekly/pyw-501.html">
	<title>蠎周刊: pythonista-weekly : Pyw 501</title>
	<link>https://weekly.pychina.org/python-weekly/pyw-501.html</link>
	<content:encoded>&lt;h3&gt;欢迎阅读《pythonista周刊》第501期。Let us start!&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://mailchi.mp/pythonweekly/python-weekly-issue-501&quot;&gt;https://mailchi.mp/pythonweekly/python-weekly-issue-501&lt;/a&gt;&lt;br /&gt;
翻译：Dustyposa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;来自赞助商（PS：原文的赞助商）:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zdnet.com/article/microsoft-adds-enterprise-support-for-pytorch-ai-on-azure/&quot;&gt;Microsoft adds enterprise support for PyTorch AI on Azure&lt;/a&gt;
Microsoft makes Facebook's AI Python library more friendly for enterprises with patches and hotfixes for Windows 10.&lt;/p&gt;
&lt;h3&gt;文章、教程与话题&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://notes.eatonphil.com/writing-a-template-library-in-python.html&quot;&gt;在Python中编写一个受Jinja启发的模板库&lt;/a&gt;
在这篇文章中，我们将在 &lt;code&gt;Python&lt;/code&gt; 中建立一个最小的文本模板库，其灵感来自 &lt;code&gt;Jinja&lt;/code&gt;。它将能够显示变量并对数组进行迭代。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pythonspeed.com/articles/smaller-docker-images/&quot;&gt;Shrinking your Python application’s Docker image: an overview&lt;/a&gt;
在这篇文章中，你会发现你可以用来缩小图像的许多技术的概述，大约按逻辑顺序包装组织。重点是 &lt;code&gt;Python&lt;/code&gt;，尽管这些技术中有许多是比较通用的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=AwRBJa23Z-I&quot;&gt;Visual Studio Code ❤️ Pytorch&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://mcusercontent.com/e2e180baf855ac797ef407fc7/images/af76283a-6e65-436c-967a-900427cf6399.png&quot; /&gt;
学习 &lt;code&gt;Visual Studio Code&lt;/code&gt; 中的一些惊人的功能，可以提高你的 &lt;code&gt;PyTorch&lt;/code&gt; 水平。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lukasz.langa.pl/1d1a43c4-9c8a-4c5f-a366-7f22ce6a49fc/&quot;&gt;Why the sad face?&lt;/a&gt;
解释 &lt;code&gt;Black&lt;/code&gt; 风格的一个细节的文章。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nezhar.com/blog/increase-performance-via-range-fields-in-django-querysets-on-postgresql/&quot;&gt;在PostgreSQL上通过Django查询集的范围字段提高性能&lt;/a&gt;
来自一个使用 &lt;code&gt;PostgreSQL&lt;/code&gt; 的 &lt;code&gt;Django&lt;/code&gt; 应用程序的数据库优化的简短故事&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://retool.com/?utm_source=pythonweekly&amp;utm_medium=sponsorship&quot;&gt;Retool - Build Internal Tools, 10x faster. By developers for developers.&lt;/a&gt;
Retool gives you a powerful set of building blocks: tables, lists, charts and more. Integrate with any datasource, REST API, gRPC, or Firebase and customize your app with JS. Save hundreds of hours. SPONSOR&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mattlayman.com/understand-django/sessions/&quot;&gt;Per-visitor Data With Sessions&lt;/a&gt;
&lt;code&gt;Django&lt;/code&gt; 是如何知道用户是否登录的？框架可以在哪里为你的应用程序上的访问者存储数据？在这篇文章中，我们将回答这些问题，并看看 &lt;code&gt;Django&lt;/code&gt; 中一个叫做 &lt;code&gt;session&lt;/code&gt; 的存储概念。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tech-blog.sonos.com/posts/pyflac-real-time-lossless-audio-compression-in-python/&quot;&gt;pyFLAC: Real-time lossless audio compression in Python&lt;/a&gt;
&lt;code&gt;pyFLAC&lt;/code&gt; 软件包使 &lt;code&gt;Sonos&lt;/code&gt; 在内部研究项目中更有效地传输高质量的音频数据，将数据率降低了约40%。实时应用于原始音频流的能力意味着它可以支持大型数据集，而不需要从磁盘进行额外的后期处理。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aricodes.net/posts/python-package-from-scratch/&quot;&gt;Making a Modern Python Package with Poetry&lt;/a&gt;
制作一个完整的命令行应用程序，没有任何 &lt;code&gt;setup.py&lt;/code&gt; 的麻烦&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://apirobot.me/posts/what-is-wsgi-and-why-do-you-need-gunicorn-and-nginx-in-django&quot;&gt;What is WSGI and Why Do You Need Gunicorn and Nginx in Django&lt;/a&gt;
在这篇文章中，我们将讨论 &lt;code&gt;WSGI&lt;/code&gt;、&lt;code&gt;Gunicorn&lt;/code&gt; 和 &lt;code&gt;Nginx&lt;/code&gt;。我们将讨论为什么你需要这些东西，以及它们如何与 &lt;code&gt;Django&lt;/code&gt; 一起工作。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=jYeSWGqrXKI&quot;&gt;Making microrepos feel like monorepos with all-repos&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://mcusercontent.com/e2e180baf855ac797ef407fc7/images/af76283a-6e65-436c-967a-900427cf6399.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://machinelearningmastery.com/line-search-optimization-with-python/&quot;&gt;Line Search Optimization With Python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://stackabuse.com/an-introductory-guide-to-brython/&quot;&gt;Brython简介&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;有趣的项目、工具和库&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/msticpy&quot;&gt;msticpy&lt;/a&gt; 
&lt;code&gt;msticpy&lt;/code&gt; 是用于 &lt;code&gt;Jupyter&lt;/code&gt; 笔记本的 &lt;code&gt;CyberSecurity&lt;/code&gt; 工具包，帮助安全分析师在调查安全事件时可视化和分析数据。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jerikan-network/cmdb&quot;&gt;Jerikan&lt;/a&gt;
用于网络团队的配置管理系统。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/bee-san/pyWhat&quot;&gt;pyWhat&lt;/a&gt;
&lt;code&gt;pyWhat&lt;/code&gt; 可以轻松地让你识别电子邮件、IP地址等等。给它一个 &lt;code&gt;.pcap&lt;/code&gt; 文件或一些文本，它就会告诉你这是什么。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/synesthesiam/voice2json&quot;&gt;voice2json&lt;/a&gt;
用于 &lt;code&gt;Linux&lt;/code&gt; 上语音和意图识别的命令行工具。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/JoeyHendricks/QuickPotato&quot;&gt;QuickPotato&lt;/a&gt;
剖析和测试以深入了解你的 &lt;code&gt;Python&lt;/code&gt; 代码的性能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/paperboi/kindle2notion&quot;&gt;kindle2notion&lt;/a&gt;
Export all the clippings from your Kindle device to a database in Notion.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/radiantone/entangle&quot;&gt;entangle&lt;/a&gt;
一个基于简单装饰器和调用图的轻量级（无服务器）本地 &lt;code&gt;python&lt;/code&gt; 并行处理框架。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ParthJadhav/Tkinter-Designer&quot;&gt;Tkinter-Designer&lt;/a&gt;
通过拖放创建漂亮的 &lt;code&gt;Tkinter&lt;/code&gt; 图形界面。&lt;/p&gt;
&lt;h3&gt;活动&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/PyLadies-Vancouver/events/278265968/&quot;&gt;Virtual: PyLadies Vancouver Meetup June 2021&lt;/a&gt;
将会有以下话题:&lt;/p&gt;
&lt;p&gt;Starting your quantum journey with Python and Q#&lt;/p&gt;
&lt;p&gt;A Whirlwind Tour of Python Environment Managers&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/dfwpython/events/zjnlcsyccjbfb/&quot;&gt;Virtual: DFW Pythoneers Meetup June 2021&lt;/a&gt; 
将有一个讲座，使用 &lt;code&gt;AI&lt;/code&gt; 调试代码。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/BrisbanePyLadies/events/278107618/&quot;&gt;Brisbane PyLadies Meetup June 2021 - Brisbane City&lt;/a&gt;
There will be a talk, AI against Modern Slavery, How you can use your AI skills for Good.&lt;/p&gt;
&lt;p&gt;Posa：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(Posa私人无责任播报)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;----- 分割线 -----&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你发现哪里翻译有误的话，请务与我联系！感谢！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/python-weekly/pyw-501.html&quot;&gt;pythonista-weekly~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;改进: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/python-weekly/issue%23501.md&quot;&gt;issue-501.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded>
	<dc:date>2021-06-02T02:51:53+00:00</dc:date>
</item>
<item rdf:about="https://weekly.pychina.org/issue/issue-475.html">
	<title>蠎周刊: Issue 475</title>
	<link>https://weekly.pychina.org/issue/issue-475.html</link>
	<content:encoded>&lt;blockquote&gt;
&lt;p&gt;&quot;硅谷&quot;剧情变真...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://pycoders.com/issues/475&quot;&gt;PyCoder's Weekly - Issue #475&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;pycoder&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-06-03-pycoder-s-weekly.png&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;210602 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 42 分钟 完成快译&lt;/li&gt;
&lt;li&gt;210602 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 37 分钟 完成格式转抄.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6439/web&quot;&gt;从卫星图像检测森林砍伐&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ANDRÉ FERREIRA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How would you go about detecting deforestation — a contributor to climate change — from satellite images? In this article, you’ll learn how one team built a machine learning (ML) solution to do just that, using FastAI for the modeling and Streamlit to create a dashboard. The article discusses methodology and results, and is a great read about building an ML solution. The project code is a available on GitHub.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;非常 Kaggle 式问题&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6451/web&quot;&gt;用 conda 管理 Python 虚拟环境指南&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;WHITEBOX&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn everything you need to know to get up and running with conda for Python in this in-depth guide. You’ll learn how conda compares to pip, how to install conda, how to install Python and other languages using conda, how to manage conda environments, and even how to package conda environments for distribution.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果网络是通畅的,
conda 的模块管理比 PiPy 是好不少,
不过,呵呵...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6466/web&quot;&gt;用 plt.scatter() 可视化数据&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial, you’ll learn how to create scatter plots in Python, which are a key part of many data visualization applications. You’ll get an introduction to plt.scatter(), a versatile function in the Matplotlib module for creating scatter plots.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;plt&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2021-06-02-ScreenShot%202021-06-02%2010.39.00.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;可视化模块早已足够丰富了,
现在主要问题是:
大家都能绘制出相同范式图表,
但是,
PPT 专家要的是越来越3D/抓睛 的图表效果,
就看谁的可定制性深度了...&lt;/p&gt;
&lt;p&gt;如果能通过142 个参数,
精细调节图表的所有细节是最好的,&lt;/p&gt;
&lt;p&gt;当然更加好的是每年根据财报要求的格式,
将默认风格调整到 世界500强 日常会议中就使用的样式...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6459/web&quot;&gt;EuroPython 2021 会议列表已发布&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EUROPYTHON.EU&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6446/web&quot;&gt;pipx 已是 PyPA 成员项目&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TWITTER.COM/PRADYUNSG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6440/web&quot;&gt;Python 3.10.0b2 可用&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPYTHON DEV BLOG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;探讨/吐糟&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Discussions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6476/web&quot;&gt;为毛老爹说 Python 4.0 可能永远不会到来&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REDDIT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Redditors discuss Guido van Rossum’s thoughts on why he and the core development team aren’t thrilled about a Python 4 release.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;老爹才是营销高手哪...&lt;/p&gt;
&lt;p&gt;其实, Python 又不是 Chrome 没有版本数 KPI,
就算是每半年升级一个版本,
用 Python 3.420 是很 COOL 的.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;文章/教程/嗯哼&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Articles, Tutorials and Talks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6467/web&quot;&gt;如何迭代 DataFrame 数据行/ 值得这样做吗?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MATT WRIGHT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How to iterate over pandas DataFrame rows is one of the top voted questions with the pandas tag on Stack Overflow. That question is also the most copied answer with a code block on the entire site. Clearly, lots of people want to iterate over the rows in a DataFrame. But should you do this, or are there better options?&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其实已经内部优化过了,
别自己折腾, 
用 Pandas 内置函式就好.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6481/web&quot;&gt;选择理想的数据结构并用 pass 和 with 展开&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON &lt;/li&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How do you know you’re using the correct data structure for your Python project? There are so many built into Python and even more that are importable from the collections module. This week on the show, David Amos is back, and he’s brought another batch of PyCoder’s Weekly articles and projects. We discuss a recent three-part video course on selecting the ideal data structure.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;podcast&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2021-06-02-ScreenShot%202021-06-02%2010.33.28.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6444/web&quot;&gt;用 Pandas 探索您的数据集&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON &lt;/li&gt;
&lt;li&gt;course&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this step-by-step course, you’ll learn how to start exploring a dataset with Pandas and Python. You’ll learn how to access specific rows and columns to answer questions about your data. You’ll also see how to handle missing values and prepare to visualize your dataset in a Jupyter Notebook.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Dataset&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2021-06-02-ScreenShot%202021-06-02%2010.32.37.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;前提是当前数据集能加载到内存中,
否则 Pandas 简直了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6470/web&quot;&gt;pyFLAC: Python 中的实时无损音频压缩&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;JOE TODD&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Free Lossless Audio Codec, or FLAC, is the go-to compression algorithm for lossless audio. Learn how FLAC is used at Sonos, a company that makes connected speakers, and their newly open-sourced project PyFLAC that you can use for real-time lossless audio compression in Python.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6471/web&quot;&gt;Python News: 新闻：2021 年 5 月有什么新变化?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;May 2021 was filled with important Python-related events. In this article, you’ll get a rundown of all the major happenings in the world of Python, including new versions of all six Pallets Projects core projects and, of course, PyCon US 2021.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;News&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2021-06-02-ScreenShot%202021-06-02%2010.30.49.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;真蟒 的月刊;-)&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;好物/妙品/...&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Interesting Projects, Tools and Libraries, Projects &amp;amp; Code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6478/web&quot;&gt;leafmap: 地理空间分析和交互式制图&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/GISWQS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6448/web&quot;&gt;pipx: 在隔离环境中安装和运行 Python 应用程序&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/PYPA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;叕一个 Python 模块隔离工具,
不过, 这个只是专注模块树管理, 
并不关心和当前项目环境的自动融合&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6464/web&quot;&gt;pyFLAC: Python 中的实时无损音频压缩&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/SONOS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;硅谷 的剧情变成真实项目了...
&lt;img alt=&quot;pyFLAC&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2021-06-02-ScreenShot%202021-06-02%2010.25.39.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6433/web&quot;&gt;pynguin: Python 的单元测试生成器工具&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/SE2P&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以自动生成合规的测试案例是刚需...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6468/web&quot;&gt;vaex: 用于 Python 的核外混合 Apache Arrow/NumPy DataFrame&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/VAEXIO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6488/web&quot;&gt;ray: 用于构建分布式应用程序的通用 API&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/RAY-PROJECT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;通用最吓人, 也最好用了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;📆🐍 活动/大会&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Events, MeetUp 真的是全球线下活动组织中心&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6484/web&quot;&gt;⋅ Real Python Office Hours (Virtual)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;June 2, 2020&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;即便是线上的, 一样收费.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/5680/web&quot;&gt;⋅ DjangoCon Europe 2021&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;June 2 – 6, 2021&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6184/web&quot;&gt;⋅ EuroPython 2021 (Virtual)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;July 26 – August 1, 2021&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6052/web&quot;&gt;⋅ PyCon India 2021&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;September 17 – 20, 2021&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;DAMA&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gruns/icecream&quot;&gt;gruns/icecream: 🍦 Never use print() to debug again.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;github&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;独创 logging + debug 模块&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://space.bilibili.com/272001170/&quot;&gt;沈崴的个人空间 -  ( ゜- ゜)つロ 乾杯~ Bilibili&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;哔哩哔哩&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;老司机开新坑, 时隔10年,
沈游侠再次开声, 值得关注:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Bilibili&quot; src=&quot;httpstp://ydlj.zoomquiet.top/ipic/2021-01-06-ScreenShot%202021-01-06%2010.14.10.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.101.camp/ts/190130-jump-into-ssl/&quot;&gt;如何持证 (SSL) 开车 — 蟒营™ 怂怼录&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;UPYUN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;私人初体验,
现在 http/https 资源混用浏览器越来越傲娇了,
最好有工具可以统一迁移...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;PS:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/issue/issue-475.html&quot;&gt;Issue 475 ~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;修订: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/Issue/issue-475.md&quot;&gt;issue-475.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;好文笔,感叹号年度配额: &lt;strong&gt;2/3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;投稿/反馈邮箱:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;askdama@googlegroups.com&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(邮件列表地址, 
当成正常邮件发送邮件就好, 不用注册, 不用翻越...)&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;ZoomQuiet/&lt;strong&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/N5TuRRbF485D4Q90XdDA7g&quot;&gt;大妈&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;就是四处 &lt;code&gt;是也乎,(￣▽￣)&lt;/code&gt; 的那个&lt;a href=&quot;https://mp.weixin.qq.com/s/N5TuRRbF485D4Q90XdDA7g&quot;&gt;大妈&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;私自嗯哼&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZoomQuiet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZoomQuiet42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;公开课程&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;蟒营&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mainium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;历史吐糟&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Chaos42&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PythoniCamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;创始组织者&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PyChina&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyChinaOrg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;本地社区&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;GDG珠海&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GDG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ZhuHai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TFUG珠海&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZH_TFUG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;NN 4390&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt=&quot;RPP&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-05-13-real-python-logo-square.28475fda9228.png?imageView2/2/w/475&quot; /&gt;&lt;/p&gt;</content:encoded>
	<dc:date>2021-06-02T02:51:36+00:00</dc:date>
</item>
<item rdf:about="https://ericazhan.github.io/210531weekly.html">
	<title>erica: 周记210531</title>
	<link>https://ericazhan.github.io/210531weekly.html</link>
	<content:encoded>&lt;p&gt;第十九篇“月”记。这一个多月发生了不少事情哇~ 人生小转折开始的前夜。&lt;/p&gt;</content:encoded>
	<dc:date>2021-05-31T00:00:00+00:00</dc:date>
</item>

</rdf:RDF>
