<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">

	<title>Planet DebugUself</title>
	<link rel="self" href="http://planet.du.zoomquiet.us/atom.xml"/>
	<link href="http://planet.du.zoomquiet.us/"/>
	<id>http://planet.du.zoomquiet.us/atom.xml</id>
	<updated>2020-04-29T08:47:53+00:00</updated>
	<generator uri="http://www.planetplanet.org/">Planet/2.0 +http://www.planetplanet.org</generator>

	<entry>
		<title type="html">pythonista-weekly : Pyw 446</title>
		<link href="http://weekly.pychina.org/python-weekly/pyw-446.html"/>
		<id>tag:weekly.pychina.org,2020-04-25:/python-weekly/pyw-446.html</id>
		<updated>2020-04-25T06:22:00+00:00</updated>
		<content type="html">&lt;h3&gt;欢迎阅读《pythonista周刊》第446期。Let us start!&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://mailchi.mp/pythonweekly/python-weekly-issue-446&quot;&gt;https://mailchi.mp/pythonweekly/python-weekly-issue-446&lt;/a&gt;&lt;br /&gt;
翻译：Dustyposa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;来自赞助商（PS：原文的赞助商）:&lt;/strong&gt;
使用 &lt;code&gt;Datadog&lt;/code&gt; 监控你的python指标，日志，集群分析。使用&lt;code&gt;Datadog&lt;/code&gt;的应用分析，可以深入任何纬度并且能找到你所需要的信息，来进行动态诊断和快速故障排除。&lt;a href=&quot;https://www.datadoghq.com/dg/apm/python-troubleshooting/?utm_source=Advertisement&amp;utm_medium=Advertisement&amp;utm_campaign=PythonWeekly-Troubleshooting&quot;&gt;来免费试用 14 天吧！&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;文章、教程与话题&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=vtN4tkvcBMA&quot;&gt;我是如何做出一个怎么投篮都能进的篮框的？&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;(22min)
想象一下，投了一个球，如果球撞到了篮板，就会莫名其妙的直接进到篮筐里。由于物理原因，尽管你可以使球更多地进入篮筐，但是不可能使所有可能的投篮都能进。这个视频向你展示了如何编写一个程序来计算光学背板然后进行加工制作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;百发百中不是梦。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.m-ou.se/writing-python-inside-rust-1/&quot;&gt;在 Rust 代码中编写 Python 代码 — 第一部分&lt;/a&gt;
大约一年前，我发布了一个叫 &lt;code&gt;inline-python&lt;/code&gt; 的 &lt;code&gt;Rust create&lt;/code&gt;，允许你使用 &lt;code&gt;python!{ .. }&lt;/code&gt; 宏很轻松的在你的 &lt;code&gt;Rust&lt;/code&gt; 代码中混入一些 &lt;code&gt;Python&lt;/code&gt; 代码。在这个章节中，我将从零开始讲述这个 &lt;code&gt;create&lt;/code&gt; 的开发过程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.m-ou.se/writing-python-inside-rust-1a/&quot;&gt;Part 1A&lt;/a&gt; - 在第二部分继续扩展我们的 &lt;code&gt;python!{}&lt;/code&gt; 宏之前，我们先详细探讨一些事情。&lt;blockquote&gt;
&lt;p&gt;混入代码，想敲什么敲什么。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://rednafi.github.io/digressions/python/2020/03/26/python-contextmanager.html&quot;&gt;Python的上下文管理器的新奇案例&lt;/a&gt;
发现Python的上下文管理器的新奇之处。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=r-uOLxNrNk8&quot;&gt;用 Python 做数据分析 - 初学者的全套课程(Numpy, Pandas, Matplotlib, Seaborn)&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;(4h22min)
在这篇针对初学者的综合教程中学习 &lt;code&gt;Python&lt;/code&gt; 的数据分析，并包含了练习题! 在这篇教程中，你将学习到数据分析的整个过程：从各种数据源（CSVs、SQL、Excel等等）中读取数据，用 &lt;code&gt;NumPy and Pandas&lt;/code&gt; 处理它们，使用 &lt;code&gt;Matplotlib and Seaborn&lt;/code&gt; 对它们进行可视化，并进行清理处理来创建报告。此外，我们还包含了一个 &lt;code&gt;Jupyter Notebook&lt;/code&gt; 的教程，以及一个快速的 &lt;code&gt;Python&lt;/code&gt; 参考来刷新你的编程能力。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://arpitbhayani.me/blogs/fsm&quot;&gt;使用Python协程构建有限状态机&lt;/a&gt;
构建和实现有限状态机最直观的方式便是使用 &lt;code&gt;Python&lt;/code&gt; 协程，在本文中，我们会了解如何做，以及为什么。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.assemblyai.com/blog/end-to-end-speech-recognition-pytorch&quot;&gt;在 PyTorch 中建立端到端语音识别模型&lt;/a&gt;
让我们来看看如何在 &lt;code&gt;PyTorch&lt;/code&gt; 中构建自己的端到端语音识别模型。我们要建立的模型是受 &lt;code&gt;Deep Speech 2&lt;/code&gt; 的启发（百度对他们现在著名的模型进行了二次改版），在架构上做了一些个人的改进。模型的输出将是一个字符的概率矩阵，我们会使用概率矩阵来解码音频中最有可能说出的字符。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=VJj-H4we71g&quot;&gt;浏览器中的 Python | Brython 速成教程&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;(35min)
在这个视频中，我们将用浏览器中的 &lt;code&gt;Python&lt;/code&gt; 和 &lt;code&gt;Brython&lt;/code&gt; 来操作 &lt;code&gt;DOM、使用本地存储、创建 Ajax 调用等等&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;用 Python 完成 js 的功能，不想写 js？ 来这里看看吧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://deepsource.io/blog/demystifying-python-descriptor-protocol/&quot;&gt;解密 Python 的描述符协议&lt;/a&gt;
描述符协议攻略，用于理解 &lt;code&gt;properpy、classmethod、statocmethod&lt;/code&gt; 的工作原理。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.co/EuqMd3i29N&quot;&gt;safer: a safer file writer&lt;/a&gt;
本文不仅描述了一个仅执行一项基本任务的小型库，还描述了它如何从某个项目中的谦虚实用程序转变为稍微不那么谦虚的生产库的一些背景故事。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=vLEA8dCfusQ&quot;&gt;使用 Python 动态地图 COVID-19 的发展过程&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;(49min)
在这篇教程中，你将学习如何使用 &lt;code&gt;GeoPandas and Pandas Python&lt;/code&gt; 库，利用世界各地的 &lt;code&gt;Coronavirus&lt;/code&gt; 感染时间序列数据创建一个动态地图。时间序列数据来自 &lt;code&gt;Johns Hopkins CSSE&lt;/code&gt; 的 &lt;code&gt;2019&lt;/code&gt; 年新型冠状病毒 &lt;code&gt;COVID-19（2019-nCoV）&lt;/code&gt; 数据存储库。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pascalw.me/blog/2020/04/19/webpack-django.html&quot;&gt;在 Django 中使用 Webpack&lt;/a&gt;
如何在 &lt;code&gt;Django&lt;/code&gt; 中设置 &lt;code&gt;Webpack&lt;/code&gt;，使用 &lt;code&gt;Django static and Webpack&lt;/code&gt; 不用插件就能将它们连在一起，&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://michael-fuchs-python.netlify.app/2020/03/07/ensemble-modeling-bagging/&quot;&gt;Ensemble Modeling - Bagging&lt;/a&gt;
集成学习是一种机器学习范式，在这个范式中，多个模型（也被称为”弱学习者“）被训练来解决同一个问题并结合在一起来取得更好的结果。这里有三种最常见的组合方式：&lt;code&gt;+ Bagging + Boosting + Stacking&lt;/code&gt;。在这篇文章中，我们将从 &lt;code&gt;bagging&lt;/code&gt; 开始，转而再到独立的 &lt;code&gt;publications&lt;/code&gt; 中进行 &lt;code&gt;boosting and stacking&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Vkqz2hK4fKg&quot;&gt;用 Docker 连接  Flask and Nginx&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;(13min)
这个视频将介绍用 &lt;code&gt;docker-compose&lt;/code&gt; 来连接 &lt;code&gt;nginx&lt;/code&gt; 容器和 &lt;code&gt;flask应用&lt;/code&gt; 容器。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;遵循容器单进程模型～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://florian-dahlitz.de/blog/scrape-github-orgs-using-python&quot;&gt;如何使用 Python 抓取你贡献过的 GitHub Organizaitons&lt;/a&gt;
带有真实世界案例的抓取教程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;实战操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://ploomber.io/posts/nb-static-analysis/&quot;&gt;使用静态分析生成 Robust Jupyter 报告&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pgjones.dev/blog/packaging-without-setup-py-2020/&quot;&gt;不用 setup.py 进行打包&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dragan.rocks/articles/20/Clojure-Numpy-Cupy-CPU-GPU-2&quot;&gt;More fun with NumPy, CuPy, Clojure and GPU acceleration. Hold my Cider 2!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pythonspeed.com/articles/reproducible-docker-builds-python/&quot;&gt;有坚固基础的构建：确保可重复的Docker构建适用于Python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://labs.quansight.org/blog/2020/04/introducing-ndindex-a-python-library-for-manipulating-indices-of-ndarrays/&quot;&gt; ndindex 简介, 用于操作 ndarray 索引的 Python 库&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;有趣的项目、工具和库&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Project-MONAI/MONAI&quot;&gt;MONAI&lt;/a&gt; 
&lt;code&gt;MONAI&lt;/code&gt; 是一个免费提供的、由社区支持的、基于 &lt;code&gt;PyTorch&lt;/code&gt; 的深度学习框架，用于医疗成像领域的深度学习。它为在原生 &lt;code&gt;PyTorch&lt;/code&gt; 范式中开发医疗影像培训工作流程提供了领域优化的基础能力。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Baekalfen/PyBoy&quot;&gt;PyBoy&lt;/a&gt;
用 &lt;code&gt;Python&lt;/code&gt; 编写的 &lt;code&gt;Game Boy&lt;/code&gt; 模拟器。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/mithi/hexapod-robot-simulator&quot;&gt;hexapod-robot-simulator&lt;/a&gt;
一个简单的基于浏览器的六足机器人模拟器，是基于第一原理构建的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;真 六足机器人 还会自己摇摆！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/naftaliharris/tauthon&quot;&gt;tauthon&lt;/a&gt;
&lt;code&gt;Python 2.7&lt;/code&gt; 的 &lt;code&gt;Fork&lt;/code&gt;，带有新的语法、内建库和从 &lt;code&gt;Python 3&lt;/code&gt; 中移植过来的库。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.djangotemplatetagsandfilters.com/&quot;&gt;Django Template Tags and Filters&lt;/a&gt;
一个网站，提供了关于 &lt;code&gt;Django&lt;/code&gt; 的 &lt;code&gt;57&lt;/code&gt; 个内置模板过滤器和 &lt;code&gt;27&lt;/code&gt; 个内置模板标签的有用文档。虽然官方的文档非常好，但我们试图以更有意义的方式组织这些标签和过滤器，并让用户更好地了解如何使用、是否使用和何时使用每一个标签。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以作为模版的快速学习教程了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ialhashim/DenseDepth&quot;&gt;DenseDepth&lt;/a&gt;
通过转移学习进行高质量的单眼深度估计。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/JanB0/Downloads-organizer&quot;&gt;Downloads-organizer&lt;/a&gt;
一个 &lt;code&gt;Python&lt;/code&gt; 脚本，根据文件扩展名来组织一个像 &lt;code&gt;Download&lt;/code&gt; 这样的文件夹。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/richstokes/cheekymonkey&quot;&gt;cheekymonkey&lt;/a&gt;
Literally a Chaos Monkey for your Kubernetes clusters.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/kitplummer/clikan&quot;&gt;clikan&lt;/a&gt;
clikan 是一个运行在 &lt;code&gt;CLI&lt;/code&gt; 中的超级简单的个人看板仪表。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/trustedsec/quicksql&quot;&gt;QuickSQL&lt;/a&gt;
&lt;code&gt;QuickSQL&lt;/code&gt; 是一个简单的 &lt;code&gt;MSSQL&lt;/code&gt; 查询工具，允许你连接到 &lt;code&gt;MSSQL&lt;/code&gt; 数据库，不需要管理级别的权限就能使用。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/natewong1313/bird-bot&quot;&gt;bird-bot&lt;/a&gt;
一个任天堂 &lt;code&gt;Switch&lt;/code&gt; 的结账机器人。目前支持沃尔玛和百思买&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nintendo 也要霸榜了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/bannyvishwas2020/MyhandWriting&quot;&gt;MyHandWriting&lt;/a&gt;
将文本转换为你自己的手写字。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/asrp/flpc&quot;&gt;Flpc&lt;/a&gt;
&lt;code&gt;Forth Lisp Python Continuum&lt;/code&gt;: 一种小型的高度动态的自引导语言。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Unicorndy/covid19_dashboard&quot;&gt;covid19_dashboard&lt;/a&gt;
Covid19 Dashboard Web App using Python (Plotly Dash).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/pytorch/serve&quot;&gt;TorchServe&lt;/a&gt;
&lt;code&gt;TorchServe&lt;/code&gt; 是一个灵活且易于使用的工具，用于为 &lt;code&gt;PyTorch&lt;/code&gt; 模型提供服务。&lt;/p&gt;
&lt;h3&gt;最近更新&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://discuss.python.org/t/announcement-pip-20-1b1-beta-release/3960&quot;&gt;pip 20.1b1 beta release&lt;/a&gt;
此次发布的要点是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在构建本地目录时，通过改变行为来执行就地构建，而不是复制到临时目录，显著提高了速度。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip&lt;/code&gt; 列表中的显著加速——通过并行网络访问过时了。这是 &lt;code&gt;pip&lt;/code&gt; 代码库中的第一个并行代码实例。&lt;/li&gt;
&lt;li&gt;新的 &lt;code&gt;pip&lt;/code&gt; 缓存命令，可以对 &lt;code&gt;pip&lt;/code&gt; 的缓存目录进行内省和管理。&lt;/li&gt;
&lt;li&gt;通过 &lt;code&gt;PEP 610&lt;/code&gt; 的实现，更好地冻结了从直接 &lt;code&gt;URL&lt;/code&gt; 安装的包的 &lt;code&gt;pip&lt;/code&gt; 冻结。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://t.co/0DlxDEQQsP&quot;&gt;PyTorch 1.5&lt;/a&gt;
该版本有几个主要的新 &lt;code&gt;API&lt;/code&gt; 添加和改进，包括对 &lt;code&gt;C++&lt;/code&gt; 前端的重大更新，计算机视觉模型的 &lt;code&gt;Channel Last&lt;/code&gt; 内存格式，以及用于模型并行训练的分布式 &lt;code&gt;RPC&lt;/code&gt; 框架的稳定发布。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/python/python-in-visual-studio-code-april-2020-release/&quot;&gt;Python in Visual Studio Code – April 2020 Release&lt;/a&gt;
这是一个简短的版本，我们解决了 &lt;code&gt;43&lt;/code&gt; 个问题，包括 &lt;code&gt;Jypyter Notebooks&lt;/code&gt; 中的 &lt;code&gt;ipywidgets&lt;/code&gt; 支持和 &lt;code&gt;Django&lt;/code&gt; 和 &lt;code&gt;Flask&lt;/code&gt; 自动加载的调试器支持。你可以在我们的更新日志中查看完整的改进列表。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.python.org/2020/04/python-2718-last-release-of-python-2.html&quot;&gt;Python 2.7.18, the last release of Python 2&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;那些活动&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://hackthevirus.splashthat.com/&quot;&gt;Virtual: Hack the Virus&lt;/a&gt;
一个由开发者和设计师与医学界专家以及其他在抗击冠状病毒前线的专家组成的黑客马拉松。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.scipy2020.scipy.org/&quot;&gt;Virtual: SciPy 2020&lt;/a&gt; 
&lt;code&gt;SciPy 2020&lt;/code&gt; 是第19届科学计算与Python年会，将于 &lt;code&gt;2020年7月6日&lt;/code&gt; 至 &lt;code&gt;12日&lt;/code&gt; 举行的虚拟会议。一年一度的 &lt;code&gt;SciPy&lt;/code&gt; 会议允许来自各类组织的与会者展示他们的最新项目，向熟练的用户和开发者学习，并在代码开发方面进行合作。 &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2020.pythonwebconf.com/&quot;&gt;Virtual: Python Web Conference 2020&lt;/a&gt;
第二届 &lt;code&gt;Python Web&lt;/code&gt; 大会是一个虚拟的活动，国际技术专家将就微服务、身份管理、机器学习和CI/CD等40个主题进行演讲。讲座分为3个精彩的轨道。每个频道都可以通过 &lt;code&gt;Zoom&lt;/code&gt; 进行直播，与会者可以通过 &lt;code&gt;Slack&lt;/code&gt; 渠道进行聊天。演讲和会后录音将只提供给注册参会者。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/PyData-Lancaster/events/270006544/&quot;&gt;Virtual: PyData Lancaster Meetup April 2020&lt;/a&gt; 
There will be a talk, Changepoints to Improve Forecasts (Estimation Window Selection for A&amp;amp;E Arrivals Forecasts)&lt;/p&gt;
&lt;h4&gt;Posa：&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(Posa私人无责任播报)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;----- 分割线 -----&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你发现哪里翻译有误的话，请务与我联系！感谢！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/python-weekly/pyw-446.html&quot;&gt;pythonista-weekly~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;改进: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/python-weekly/issue%23446.md&quot;&gt;issue-446.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2020-04-29T08:46:59+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Issue 417</title>
		<link href="http://weekly.pychina.org/issue/issue-417.html"/>
		<id>tag:weekly.pychina.org,2020-04-22:/issue/issue-417.html</id>
		<updated>2020-04-22T03:42:00+00:00</updated>
		<content type="html">&lt;blockquote&gt;
&lt;p&gt;可以在 Zoom/Skype 中使用的替身&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://pycoders.com/issues/417&quot;&gt;PyCoder's Weekly - Issue #417&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;PyCoder&quot; src=&quot;https://cdn.pycoders.com/37bdf31dc645f968ffb90196e5d38ff5&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;200422 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 42 分钟 完成快译&lt;/li&gt;
&lt;li&gt;200422 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 37 分钟 完成格式转抄.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3972/web&quot;&gt;pip 20.1b1 发布, 包含新依赖性解析器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/PYPA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The beta release of pip version 20.1 has dropped and included the next-generation dependency resolver! The resolver is currently turned off by default because it’s unstable and not ready for everyday use. The pip mainainters do encourage users to try it out, however, and feedback on the new resolver can be submitted by filling out a survey.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不过默认关闭着...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3979/web&quot;&gt;Python 软件基金会新闻: 谢谢捐赠/赞助者&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PSF BLOG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“Thanks to [the] generosity of individual and corporate donors and decreasing PyCon 2020 expenses, we estimate that the PSF will now only need $141,713 from its financial reserve to get through 2020.”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼? 老爹在任时, 从没见这种嗯哼?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4003/web&quot;&gt;Python 内建 Pathlib 其实很棒&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REDOWAN DELOWAR &lt;/li&gt;
&lt;li&gt;• Shared by Redowan Delowar&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 3’s pathlib module has taken some time to gain traction since it was introduced in Python 3.4. After all, the os.path module had been the de facto tool for working with paths in Python. Why change code that works? Learn why pathlib is a better choice for working with file paths in Python in this thorough tutorial.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3971/web&quot;&gt;Pytest 实效 Python 测试&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial, you’ll learn how to take your testing to the next level with pytest. You’ll cover intermediate and advanced pytest features such as fixtures, marks, parameters, and plugins. With pytest, you can make your test suites fast, effective, and less painful to maintain.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Pytest&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-22-ScreenShot%202020-04-22%2012.04.06.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;不过, 传统场景还是 unittest 为先吧?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3998/web&quot;&gt;Python 2.7.18, 一个时代的终结&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;BENJAMIN PETERSON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“Python 2.7.18 is a special release. I refer, of course, to the fact that ‘2.7.18’ is the closest any Python version number will ever approximate e, Euler’s number. Simply exquisite!”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;放心, 俺一定会忠诚再用 42 年的...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3996/web&quot;&gt;Python 编码面试: 提示和最佳做法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON &lt;/li&gt;
&lt;li&gt;course&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn how to take your Python coding interview skills to the next level and use Python’s built-in functions and modules to solve problems faster and more easily.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Interviews&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-22-ScreenShot%202020-04-22%2012.03.30.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;关键还是用Python的内置函数和模块哪...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2&gt;讨论&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Discussions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3975/web&quot;&gt;故事: 为了10岁儿子和他的数学作业,所以上Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REDDIT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When his son gets assigned a menial and repetitive task for his math homework, his Dad does the only reasonable thing and introduces him to Python.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;真的是家传手艺了&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3986/web&quot;&gt;新参者: Guilty 是值得拿来构建新项目的&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REDDIT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“So here’s the thing. I’m building some cool web apps and have a pretty good understanding of what I’m doing. However, I always feel kinda guilty because I didn’t build 100% of it from scratch. I used various libraries to achieve certain functionality. It’s like I cheated my way to completion by using these libraries. Is this normal or am I overthinking?”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4002/web&quot;&gt;x += 1 vs x = x + 1&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REDDIT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Are there certain situations where one is more useful than the other?&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其实并无差别, 但是, 程序猿为了少打字, 真的是, 什么事儿都敢干的...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3976/web&quot;&gt;实际上在 Python 中执行任何处理的速度都非常慢&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;JOHN CARMACK ON TWITTER&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼, 隔壁也分析了, 其实运行速度只比 C++ 原创的慢一点儿...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2&gt;文章,教程和嗯哼&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Articles, Tutorials and Talks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4005/web&quot;&gt;面向初学者的 Python 装饰器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;SAM IRELAND&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you’ve used a web framework in Python, you’ve probably used a decorator before. But do you know how they work? Do you know how to make your own? Sam Ireland introduces decorators in this beginner-friendly article by first exploring a typical problem in which decorators arise, then gently walking you through a solution.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3993/web&quot;&gt;在Rust代码中编写Python - 第1部分&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MARA BOS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this series, Mara Bos — creator of the inline-python Rust crate — walks you through developing a Rust crate for mixing Python into your Rust code from scratch. Part 1 teaches you how to work with Python from Rust, create macros, and handle white space.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;开始了, Python 从设计之初就非常重视 C 扩展,
以便可以嵌入到未来任何生态中,&lt;/p&gt;
&lt;p&gt;果然, Rust 也逃不了的...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3983/web&quot;&gt;用 Python 协程构建有限状态机&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ARPIT BHAYANI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finite state machines are a mathematical model of computation with numerous applications in both hardware and software. In this tutorial, you’ll learn what a finite state machine is and how to create one in Python using coroutines.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3978/web&quot;&gt;更好的 Notebooks Through CI: 自动测试图形机器学习的文档&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;HUON WILSON &lt;/li&gt;
&lt;li&gt;• Shared by Tim Pitman&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Building a data science library is walking between two worlds: data science is dominated by Python notebooks, a fast and convenient way to experiment and demonstrate code in the browser, while software engineering focuses on making software reliable and repeatable. Learn how StellarGraph, a graph machine learning library built on Tensorflow and Keras, uses continuous integration to keep the benefits of both.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3977/web&quot;&gt;HPy: 种面向未来的扩展 Python 方法?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ANTONIO CUNI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“HPy is a joint project which is being developed by PyPy, CPython and Cython developers. It aims to design a better C API for writing Python extensions which is more friendly to alternative implementations and which would allow CPython itself more freedom to experiment (e.g. by using a real GC instead of refcounting).”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;大家无论多喜欢 Python ,生产中, 还是得和 C 系统交流, 所以...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3989/web&quot;&gt;Git Worktrees 和 Pyenv: 更快地开发 Python 库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;HUON WILSON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Workin on a large project means lots of context switches. During a single day, you may need to do review others’ pull requests, respond to code reviews on your own pull requests, work on features, apply small patches. Huon Wilson shares his workflow for minimizing the pain of these context switches using git worktrees and pyenv.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Worktrees&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-22-ScreenShot%202020-04-22%2010.58.45.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;嗯哼? 这脑洞可以哪...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3985/web&quot;&gt;引入 ndindex 一个用于操作 ndarray 索引的 Python 库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;AARON MEURER&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“ndindex is a new library that provides high level objects representing the various objects that can index NumPy arrays. These objects automatically canonicalize under the assumption of NumPy indexing semantics, and can be manipulated with a uniform API.”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3970/web&quot;&gt;Python 中的排序算法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial, you’ll learn all about five different sorting algorithms in Python from both a theoretical and a practical standpoint. You’ll also learn several related and important concepts, including Big O notation and recursion.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Sorting&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-22-ScreenShot%202020-04-22%2010.53.37.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;日常行为中包含大智慧.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4004/web&quot;&gt;如何窜改 GitHub Organizations 将你的贡献变为 Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;FLORIAN DAHLITZ &lt;/li&gt;
&lt;li&gt;• Shared by Florian Dahlitz&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn how to use the GitHub API to scrape GitHub organizations that you contribute to and create styled components that you can embed on your website.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当 github 变成实际意义上的 程序猿 身份证.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3994/web&quot;&gt;用 Celery 和 Docker 处理 Django 中的定期任务&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;J-O ERIKSSON &lt;/li&gt;
&lt;li&gt;• Shared by J-O Eriksson&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3973/web&quot;&gt;如何用 Python 创建 Windows 服务&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DAVIDE MASTROMATTEO &lt;/li&gt;
&lt;li&gt;• Shared by Davide Mastromatteo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不是不可以, 只是没必要.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2&gt;好物&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Interesting Projects, Tools and Libraries, Projects &amp;amp; Code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3984/web&quot;&gt;LayoutX: 具有反应性数据绑定的 Python Tk 声明式 UI 框架&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/BOMBERUS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tk 永远不死.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3999/web&quot;&gt;avatarify: Zoom 和 Skype 的 Avatars&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/ALIEVK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;avatarify&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-22-ScreenShot%202020-04-22%2010.44.57.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;这样我们就可以用任何一位历史名人作自己的实时直播了...&lt;/p&gt;
&lt;p&gt;不过要求的算力也非常...&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;GeForce&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GTX&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1080&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ti&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;33&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fps&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;GeForce&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GTX&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1070&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fps&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Mac&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OSX&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MacBook&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pro&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;very&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fps&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3974/web&quot;&gt;PyBoy: 用 Python 编写的 Game Boy 模拟器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/BAEKALFEN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;PyBoy&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-22-ScreenShot%202020-04-22%2010.42.25.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;嚓...没毛病&lt;/p&gt;
&lt;p&gt;可以在 RPi 上运行都...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3995/web&quot;&gt;pysindy: 从数据中识别稀疏非线性动力系统&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/DYNAMICSLAB&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/4001/web&quot;&gt;libpython-clj: Clojure 的 Python 绑定&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/CLJ-PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;clj 是在 JVM 上运行的 Lisp,
能自由调用 JAVA 的一切模块;
但是, Lisp 语法还是很囧的,
所以, 就将 py 嵌入到 clj 中来融合到 JAVA 世界...&lt;/p&gt;
&lt;p&gt;等等, 不是有 Jython 嘛?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3987/web&quot;&gt;Terminator: 在一个窗口中加载多个GNOME终端&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/GNOME-TERMINATOR&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3988/web&quot;&gt;ndindex: 用于处理ndarray索引的Python库&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/QUANSIGHT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ndarrays 太老了, 应该升级了...于是...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3981/web&quot;&gt;opencv-proto: 适用于 OpenCV 的 Python 快速原型制作&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/IDLESIGN &lt;/li&gt;
&lt;li&gt;• Shared by pythonz&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;机械视觉太火了, 以往都是 C++ 的 OpenCV 为基础,
Py 看不下去了, 然后...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2&gt;📆🐍 活动/大会&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Events, MeetUp 真的是全球线下活动组织中心&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/8PDnbR0XOCDcg2xURxnDYg&quot;&gt;PyCon US 2020 来了：人生苦短，不如线上学 Python&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4 月 15 日至 23 日&lt;/li&gt;
&lt;li&gt;线上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/4008/web&quot;&gt;⋅ Remote Meetup Python Madrid&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;April 24, 2020&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/4007/web&quot;&gt;⋅ PythonCamp 2020 (Virtual)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;April 25 to April 27, 2020&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/4009/web&quot;&gt;⋅ Remote Python Pizza&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;April 25 to April 26, 2020&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;DAMA&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;101camp8py 即将(4.27)开始报名(能开发票 ;-)&lt;/p&gt;
&lt;p&gt;参考: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tiny4voice 的推荐 &lt;a href=&quot;https://mp.weixin.qq.com/s/GiCLU-bdxY3t0jqdVQ8NIQ&quot;&gt;为什么初学编程我建议从Python开始&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;余晟以为 的推荐 &lt;a href=&quot;https://mp.weixin.qq.com/s/6EgDuXXT3MfR5shHxmE0KQ&quot;&gt;我为什么相信周琦？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;PS:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/issue/issue-417.html&quot;&gt;Issue 417 ~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;修订: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/Issue/issue-417.md&quot;&gt;issue-417.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;NN 3991&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;好文笔,感叹号年度配额: &lt;strong&gt;1/3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;投稿/反馈邮箱:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;askdama&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;googlegroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(邮件列表地址, 
当成正常邮件发送邮件就好, 不用注册, 不用翻越...)&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;ZoomQuiet/&lt;strong&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/N5TuRRbF485D4Q90XdDA7g&quot;&gt;大妈&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;就是四处 &lt;code&gt;是也乎,(￣▽￣)&lt;/code&gt; 的那个&lt;a href=&quot;https://mp.weixin.qq.com/s/N5TuRRbF485D4Q90XdDA7g&quot;&gt;大妈&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;err&quot;&gt;私自嗯哼&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZoomQuiet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZoomQuiet42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;公开课程&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;蟒营&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mainium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;历史吐糟&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Chaos42&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PythoniCamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;核心组织者&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PyChina&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyChinaOrg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;本地社区&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;GDG&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;珠海&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GDG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ZhuHai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TFUG&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;珠海&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZH_TFUG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2020-04-29T08:46:59+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Issue 418</title>
		<link href="http://weekly.pychina.org/issue/issue-418.html"/>
		<id>tag:weekly.pychina.org,2020-04-19:/issue/issue-418.html</id>
		<updated>2020-04-19T03:42:00+00:00</updated>
		<content type="html">&lt;blockquote&gt;
&lt;p&gt;Pandas DataFrame: 使处理数据令人愉快&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://pycoders.com/issues/418&quot;&gt;PyCoder's Weekly - Issue #418&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;PyCoder&quot; src=&quot;https://cdn.pycoders.com/37bdf31dc645f968ffb90196e5d38ff5&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;200429 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 42 分钟 完成快译&lt;/li&gt;
&lt;li&gt;200429 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 37 分钟 完成格式转抄.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4044/web&quot;&gt;Python 2 最后的发布标志叕一个时代的终结&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;RYAN DONOVAN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The final version of Python 2 has been released. As the Python community looks forward to the new era, Ryan Donovan from the Stack Overflow Blog takes some time to reflect on the transition and points out that, while support for Python 2 from official channels may be gone, the language isn’t dead. In fact, there’s reason to believe it will live on for decades to come.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;再次: 不会的, Python 2.x 足以用到下个10年...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4045/web&quot;&gt;你应该了解的 Python 3.9 新特性&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MARTIN HEINZ &lt;/li&gt;
&lt;li&gt;• Shared by Martin Heinz&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 3.9 is scheduled for release on May 10, 2020, and it’s packed full of new goodies. Explore these new features in this overview by Martin Heinz, including new dict operators, updates to the math module, new string methods, a functools.ToplogicalSorter class, and more!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;实话, 并不想知道...&lt;/p&gt;
&lt;p&gt;一个语言不是靠追加越来越多特性存活的...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4032/web&quot;&gt;Python pickle 模块: 如何在 Python 中保存对象&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial, you’ll learn how you can use the Python pickle module to convert your objects into a stream of bytes that can be saved to a disk or sent over a network. You’ll also learn the security implications of using this process on objects from an untrusted source.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;pickle&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-29-ScreenShot%202020-04-29%2010.36.55.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;pickle 绝对是 Python 内建模块中最迷人的一个, 
谁都忍不住溢用她...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4035/web&quot;&gt;收集指导委员会问答的问题&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PYTHON.ORG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As part of PyCon US 2020, the Python Steering Council will record a Q&amp;amp;A. They are soliciting questions from the community, so here’s your chance to get your burning questions answered!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;很认真, 也很无奈...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4034/web&quot;&gt;构造 Python 应用 (通用布局)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON &lt;/li&gt;
&lt;li&gt;course&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This course is a reference guide to common Python application layouts and project structures for command-line applications, web applications, and more.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Structuring&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-29-ScreenShot%202020-04-29%2010.33.59.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;的确, Python 程序其实,非常 八股文的...&lt;/p&gt;
&lt;p&gt;输入-&amp;gt;处理-&amp;gt;输出, 
没了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2&gt;讨论&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Discussions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4049/web&quot;&gt;处理失败&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REDDIT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s not that professional programmers never fail. They’ve just learned how to deal with failure and recover from it—most of the time, anyway. What coping mechanisms have you come up with?&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这不就是调试嘛?&lt;/p&gt;
&lt;p&gt;制造失败来检验正确.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4048/web&quot;&gt;俺想用一整专注 Python, 应该设定哪些目标?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REDDIT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lots of great advice for new Python programmers in this thread!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;哭述...无尽的...&lt;/p&gt;
&lt;p&gt;其实, 最基础的, 一年以内可以用 Python 赚到钱, 那么一切目标都达到了.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2&gt;文章,教程和嗯哼&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Articles, Tutorials and Talks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4024/web&quot;&gt;Python 中的数字&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MOSHE ZADKA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Quick quiz: how many numeric data types are there in Python? If you answered “two, duh” then you might be surprised to learn that there are actually four! In addition to int and float, the fractions and decimal standard library modules implement data types used to represent fraction and decimal numbers exactly. Learn about all of Python’s numeric data types, their strengths and weakness, and how to choose the right one in this short-but-informative article from Moshe Zadka.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4014/web&quot;&gt;在坚实的基础上构建: 确保可复用的Docker构建Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ITAMAR TURNER-TRAURING&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Docker is a popular tool for distributing applications bundled with their environments. It’s often sold as a cure to the “it worked on my machine” conundrum, but you’re not alone if you’ve found this to be a bit oversold. The issue isn’t with Docker, though. Chances are your images aren’t completely reproducible. In this tutorial, you’ll learn some best practices for creating reproducible Docker builds.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4017/web&quot;&gt;在 Python 中使用警告(或:什么时候例外/不是例外?)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;RUEVEN LERNER&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Imagine you’re maintaining an open-source Python package and you’re going to release a new version with breaking changes. You warn users about those changes in documentation and even blast the info on social media channels. But wouldn’t it be great if you could warn users right in their terminal as their using your tool? Well, with Python’s warnings module, you can! How are warnings different from Python exceptions? Learn how to send and filter warnings, and why you would want to do so.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4023/web&quot;&gt;Python 应用中有关配置的最佳实践&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;TOBIAS PFEIFFER&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Users love being able to configure an application. But dealing with user configuration means parsing untrusted input, validating that input, and figuring out how to access it safely in all the layers of your applications. Python has a rich configuration ecosystem. Lots of articles focus on how to use various configuration formats in your Python programs but skip out on the finer details of how and when configuration should be validated. This tutorial fills in some of those gaps.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又来...配置的确是软件工程中比较纠结的一个方面,
不过, 用好 Python 本身就足以在配置上非常自在了;&lt;/p&gt;
&lt;p&gt;关键是克制. 嫑在配置文件中包含过多计算/判定/摄取/... 之类行为.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4033/web&quot;&gt;Python 的 Sets 简介&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MIKE DRISCOLL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have you heard about Python’s set data type? A set is an unordered collection of distinct objects that support fast membership tests and can be used to remove duplicates from a sequence. Learn all about this handy data type in this beginner-friendly article from Mike Driscoll.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4029/web&quot;&gt;Pandas DataFrame: 使处理数据令人愉快&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial, you’ll get started with Pandas DataFrames, which are powerful and widely used two-dimensional data structures. You’ll learn how to perform basic operations with data, handle missing values, work with time-series data, and visualize data from a Pandas DataFrame.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 Pandas 最大的技巧, 可能就是别怕浪费内存,
能复制时, 一定要复制, 以免纠缠&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;DataFrame&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-29-ScreenShot%202020-04-29%2010.28.12.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4016/web&quot;&gt;用 Python 和 Redis 进行速率限制&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;ANDREA STAGI &lt;/li&gt;
&lt;li&gt;• Shared by Andrea Stagi&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This article explores rate limiting algorithms using Python and Redis, starting from a naive approach and culminate at an advanced one called Generic Cell Rate Algorithm (GCRA).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4041/web&quot;&gt;手动验证 DKIM签名&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/KMILLE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“We take an email and verify the the DKIM-Signature step by step using Python. We also take care about the signing itself (RSA). Source code included.”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;by hand 就是从头撸, 将 邮件的 DKIM 签名详细刷了一遍&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4018/web&quot;&gt;用 NumPy 和 Pandas 在 Python 中创建相关矩阵&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ERIK MARSJA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial, you’ll learn how to create a correlation matrix in Python with NumPy and Pandas. Plus upper &amp;amp; lower triangular (tables).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4038/web&quot;&gt;用 Docker 和 GitLab 将 Django 持续部署到 AWS EC2&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MICHAEL HERMAN &lt;/li&gt;
&lt;li&gt;• Shared by Michael Herman&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;gitlab 在长年陪跑情况下, 终于发现了自己最大的优势,
开始加强 CI/CD 方面的功能, 
所以, 大家都来了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4036/web&quot;&gt;在 Django 中 Roll 基于类的视图&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;JAMES TIMMINS &lt;/li&gt;
&lt;li&gt;• Shared by James Timmins&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼? 坚持了8年, 周刊终于有越来越多来自社区的自发推荐了...
不容易.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4019/web&quot;&gt;用 Python 的 difflib 自制文件比较工具&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;FLORIAN DAHLITZ &lt;/li&gt;
&lt;li&gt;• Shared by Florian Dahlitz&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嵌入在 CI/CD 过程中就很香了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4030/web&quot;&gt;Python Context Manager 奇特案例&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REDOWAN DELOWAR &lt;/li&gt;
&lt;li&gt;• Shared by Redowan Delowar&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;好物&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Interesting Projects, Tools and Libraries, Projects &amp;amp; Code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4031/web&quot;&gt;flpc: Forth Lisp Python 连续体&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/ASRP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;为了证明这一断言:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python is Lisp with syntactic sugar and Lisp is Forth with syntactic sugar.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;于是发现了叕一个新语言;
Forth 是比 Lisp 更加极端的一门小众开发语言.&lt;/p&gt;
&lt;p&gt;这样的代码:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;fib &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; fun&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt; i &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;也可以这么表达:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pick1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pushi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drop1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pick1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pick2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s21&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drop1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/4042/web&quot;&gt;astropy: 天文学的通用 Python 核心软件包&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/ASTROPY&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/4043/web&quot;&gt;twitter-ticker-tape: Raspberry Pi 通过收据打印机读取推文&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/HEALEYCODES&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;自动读取Twitter 并打印成发票以便晚上慢慢读...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/4027/web&quot;&gt;BentoML: 简化模型服务&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/BENTOML&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/4020/web&quot;&gt;taichi: 便携式/高性能/稀疏和可微计算的语言&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/TAICHI-DEV&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;太极&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-29-ScreenShot%202020-04-29%2010.14.10.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;全新语言, 专注高效完成物理引擎/粒子系统/...等等需要海量计算的动画自动生成....&lt;/p&gt;
&lt;p&gt;已经有丰富的案例, 是的国货.
基于 Python 深度定制.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4046/web&quot;&gt;LibreLingo: 社区驱动的语言学习平台&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/KANTORD&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;LibreLingo&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-29-ScreenShot%202020-04-29%2010.11.36.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;这个很牛了...GPLv3;
可以拿来作各种好玩儿的东西了.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4021/web&quot;&gt;3d-photo-inpainting: 使用上下文感知的分层深度修补进行3D摄影&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/VT-VL-LAB&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;inpainting&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-29-ScreenShot%202020-04-29%2010.09.09.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;从 3D 空间的理解上自动化处理照片,
华人主力团队成果, PyTorch 为核心.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2&gt;📆🐍 活动/大会&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Events, MeetUp 真的是全球线下活动组织中心&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/4025/web&quot;&gt;⋅ Montréal-Python Online Hackathon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;May 1st to May 3rd, 2020&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;(￣▽￣):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;COVID-19 威能之下, 
大会都线上了..连 Hackathon 也在线了...
可是没有一起熬夜的小伙伴在身边, 这种连续开发就没味道了哪...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2&gt;DAMA&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;101camp8py 已经开始报名(能开发票 ;-)&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;报名&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-21-camp8py-barnner-zip.jpg&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;err&quot;&gt;课程规划&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;报名截止&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2020.5.24&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;正式开课&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2020.5.31&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;课程结束&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2020.7.12&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;详情 =&amp;gt; &lt;a href=&quot;https://py.101.camp/&quot;&gt;蟒营™ Python 入门班第8期&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;PS:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/issue/issue-418.html&quot;&gt;Issue 418 ~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;修订: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/Issue/issue-418.md&quot;&gt;issue-418.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;NN 3998&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;好文笔,感叹号年度配额: &lt;strong&gt;1/3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;投稿/反馈邮箱:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;askdama&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;googlegroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(邮件列表地址, 
当成正常邮件发送邮件就好, 不用注册, 不用翻越...)&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;ZoomQuiet/&lt;strong&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/N5TuRRbF485D4Q90XdDA7g&quot;&gt;大妈&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;就是四处 &lt;code&gt;是也乎,(￣▽￣)&lt;/code&gt; 的那个&lt;a href=&quot;https://mp.weixin.qq.com/s/N5TuRRbF485D4Q90XdDA7g&quot;&gt;大妈&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;err&quot;&gt;私自嗯哼&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZoomQuiet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZoomQuiet42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;公开课程&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;蟒营&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mainium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;历史吐糟&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Chaos42&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PythoniCamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;核心组织者&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PyChina&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyChinaOrg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;本地社区&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;GDG&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;珠海&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GDG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ZhuHai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TFUG&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;珠海&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZH_TFUG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2020-04-29T08:46:59+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">My Struggle - 我的自怼周报 2020 14-15-16w</title>
		<link href="https://bemself.github.io/%E5%BF%83%E8%B7%AF,%E5%91%A8%E6%8A%A5/DM-Weekly-141516w.html"/>
		<id>https://bemself.github.io/%E5%BF%83%E8%B7%AF,%E5%91%A8%E6%8A%A5/DM-Weekly-141516w.html</id>
		<updated>2020-04-19T00:00:00+00:00</updated>
		<content type="html">周结第 14-15-16 周, 荒废了几周, 先凌乱的记一下</content>
		<author>
			<name>My Struggle</name>
			<email>doituself@outlook.com</email>
			<uri>https://bemself.github.io</uri>
		</author>
		<source>
			<title type="html">My Struggle</title>
			<subtitle type="html">This is RSS feed for my website</subtitle>
			<link rel="self" href="https://bemself.github.io/rss.xml"/>
			<id>https://bemself.github.io/rss.xml</id>
			<updated>2020-04-24T00:43:09+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">pythonista-weekly : Pyw 445</title>
		<link href="http://weekly.pychina.org/python-weekly/pyw-445.html"/>
		<id>tag:weekly.pychina.org,2020-04-18:/python-weekly/pyw-445.html</id>
		<updated>2020-04-18T06:22:00+00:00</updated>
		<content type="html">&lt;h3&gt;欢迎阅读《pythonista周刊》第445期。Let us start!&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://mailchi.mp/pythonweekly/python-weekly-issue-445&quot;&gt;https://mailchi.mp/pythonweekly/python-weekly-issue-445&lt;/a&gt;&lt;br /&gt;
翻译：Dustyposa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;来自赞助商（PS：原文的赞助商）:&lt;/strong&gt;
使用 &lt;code&gt;Datadog&lt;/code&gt; 监控你的python指标，日志，集群分析。使用&lt;code&gt;Datadog&lt;/code&gt;的应用分析，可以深入任何纬度并且能找到你所需要的信息，来进行动态诊断和快速故障排除。&lt;a href=&quot;https://www.datadoghq.com/dg/apm/ts-python-tracing/?utm_source=Advertisement&amp;utm_medium=Advertisement&amp;utm_campaign=PythonWeekly-Tshirt&quot;&gt;通过免费的Datadog APM试用版来提高应用程序性能。&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;新鲜事&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://us.pycon.org/2020/online/&quot;&gt;PyCon US 2020 Online&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PyCon US 2020&lt;/code&gt; 已经在线上进行了。未来 4 周，我们将在网上发布内容，供大家观看。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Bilibili 也有同步搬运哦
&lt;a href=&quot;https://space.bilibili.com/386835083/channel/detail?cid=120394&quot;&gt;我在这里&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;文章、教程与话题&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.pyimagesearch.com/2020/04/13/opencv-age-detection-with-deep-learning/&quot;&gt;使用深度学习的 OpenCV 年龄检测&lt;/a&gt;&lt;/strong&gt;
在这篇教程中，你将学习到如何使用 &lt;code&gt;OpenCV, 深度学习, 以及 Python&lt;/code&gt; 来实现自动检测/预测年龄。在教程的最后，你能够以相当高的准确度在静态图片文件以及实时视频流中自动预测年龄。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://eng.lyft.com/hashing-and-equality-in-python-2ea8c738fb9d&quot;&gt;Python 中的 Hashing 和 Equality&lt;/a&gt;&lt;/strong&gt;
不要重写 &lt;code&gt;__hash__ and __eq__&lt;/code&gt; 来强制让对象可哈希。使用不可变对象来代替。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://martinheinz.dev/blog/20&quot;&gt;部署任何 Python 项目到 Kubernetes&lt;/a&gt; &lt;/strong&gt;
随着你的项目成长，变得很难只用单个的 &lt;code&gt;VM&lt;/code&gt; 或者一些简单的 &lt;code&gt;SaaS&lt;/code&gt; 来解决方案来进行处理。你可以切换到更强的解决方案，例如 &lt;code&gt;Kubernetes&lt;/code&gt; 来解决这个问题。然而，如果你不熟悉它的概念或者之前也没使用过，那么对你来说可能就有点复杂。因此，为了帮助你——我们将介绍你开始需要的一切以及让你的 &lt;code&gt;Python&lt;/code&gt; 项目部署在集群上——包括集群设置，所有的 &lt;code&gt;Kubernetes&lt;/code&gt; 清单以及一些额外的自动化配置让你更轻松！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://tech.marksblogg.com/python-scraper-wireguard-vpn-ssh-proxy.html&quot;&gt;用 Virtual Private Networks 实现 Python Web Scraping &lt;/a&gt;&lt;/strong&gt;
使用 &lt;code&gt;VPNs&lt;/code&gt; 或者其他的隧道技术，可以很大程度上让爬虫不被发现，并尽可能地高效收集数据。这都可以在 &lt;code&gt;Cloud&lt;/code&gt; 或者私人环境中部署。这篇文章展示了两种方法，第一种是用了 &lt;code&gt;WireGuard&lt;/code&gt;，第二种是用了一个 &lt;code&gt;OpenSSH SOCKS5&lt;/code&gt; 代理。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://rednafi.github.io/digressions/python/2020/04/13/python-pathlib.html&quot;&gt;N真的, Python's Pathlib 很棒&lt;/a&gt;&lt;/strong&gt;
沉浸在 &lt;code&gt;Python&lt;/code&gt; 的面向对象的文件系统路径中。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我的代码已经全面使用 &lt;code&gt;pathlib&lt;/code&gt; 了。 写起来真的很顺畅！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://mungingdata.com/python/how-pyenv-works-shims/&quot;&gt;深入探讨 pyenv 是如何利用 Shim 设计模式实际工作的。&lt;/a&gt;&lt;/strong&gt;
这篇文章展示了 &lt;code&gt;pyenv&lt;/code&gt; 是如何在底层使用 &lt;code&gt;shim&lt;/code&gt; 设计模式、&lt;code&gt;.python-version&lt;/code&gt; 文件以及环境变量工作的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://t.co/jvh5JTyJaz&quot;&gt;用图论从新闻中构建社交网络&lt;/a&gt; &lt;/strong&gt;
理解报纸中的社交连接。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://ruivieira.dev/serving-models-with-seldon.html&quot;&gt;Serving Models with Seldon&lt;/a&gt;&lt;/strong&gt;
&lt;code&gt;Seldon&lt;/code&gt; 是一个旨在为机器学习模型提供一个生成工作流，允许构建暴露定义良好的 &lt;code&gt;APIs&lt;/code&gt; 的模型服务容器。在本文，我将展示如何创建一个简单的模型以及如何用 &lt;code&gt;Seldon&lt;/code&gt; 进行部署。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://t.co/CO87iqNx5A&quot;&gt;Pandas equivalent of 10 useful SQL queries&lt;/a&gt;&lt;/strong&gt;
本文向您展示了与一些最有用的 &lt;code&gt;SQL&lt;/code&gt; 查询等价的 &lt;code&gt;pandas&lt;/code&gt;。对于那些已经了解 &lt;code&gt;SQL&lt;/code&gt; 的人来说，这既可以作为对 &lt;code&gt;pandas&lt;/code&gt; 的介绍，也可以作为你可能需要的常见 &lt;code&gt;pandas&lt;/code&gt; 操作的备忘单。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://florian-dahlitz.de/blog/disassemble-your-python-code&quot;&gt;解构你的 Python 代码&lt;/a&gt;&lt;/strong&gt;
使用 &lt;code&gt;dis-module&lt;/code&gt; 来深入了解你的 &lt;code&gt;Python&lt;/code&gt; 代码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://eigenfoo.xyz/manipulating-python-asts/&quot;&gt;操纵 Python AST 的历险记&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我实验了通过操纵模型代码的 &lt;code&gt;Python&lt;/code&gt; 抽象语法树 &lt;code&gt;(AST)&lt;/code&gt; 来简化 &lt;code&gt;PyMC4&lt;/code&gt; 的模型规范 &lt;code&gt;API&lt;/code&gt; 的可能性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://tomassetti.me/quick-domain-specific-languages-in-python-with-textx/&quot;&gt;Quick Domain-Specific Languages in Python with textX&lt;/a&gt;&lt;/strong&gt;
这篇教程向你展示了如何编写一个小的 &lt;code&gt;domain-specific&lt;/code&gt; 语言和一个用于理解我们语言的 &lt;code&gt;Visual Studio Code&lt;/code&gt; 语法高亮的插件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://heartbeat.fritz.ai/introduction-to-xgboost-with-an-implementation-in-an-ios-application-cdfaa8f9930b&quot;&gt; XGBoost 简介以及 iOS 应用程序中的实现&lt;/a&gt;&lt;/strong&gt;
使用 &lt;code&gt;coremltools&lt;/code&gt; 训练并部署 &lt;code&gt;XGBoost&lt;/code&gt; 模型，以及用 &lt;code&gt;Swift and Core ML&lt;/code&gt; 构建一个体验设备&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://elder.dev/posts/open-source-virtual-background/&quot;&gt;开源虚拟背景&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.co/7h50TVhEA2&quot;&gt;PyCaret 发布: 一个开源，low-code 的 Python 机器学习库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://raju.guide/index.php/2020/04/05/how-to-get-automated-alerts-on-instacart-delivery-availability-using-postman-python-bot/&quot;&gt;如何使用 Postman &amp;amp; Python 机器人 获得 Instacart Delivery 的自动提醒&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dragan.rocks/articles/20/Clojure-Numpy-Cupy-CPU-GPU&quot;&gt;CuPy 加速 NumPy on the GPU? Hold my Cider, here's Clojure!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://huonw.github.io/blog/2020/04/worktrees-and-pyenv/&quot;&gt;Git worktrees and pyenv: 更快地开发 Python 库&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://adilmoujahid.com/posts/2020/04/stocks-analysis-covid19-coronavirus-python/&quot;&gt;Analyzing the Impact of Coronavirus on the Stock Market using Python, Google Sheets and Google Finance&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pythonspeed.com/articles/faster-pandas-dask/&quot;&gt;From chunking to parallelism: faster Pandas with Dask&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://davit.tech/django-queryset-examples/&quot;&gt;Django QuerySet Examples (with SQL code included)&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;有趣的项目、工具和库&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/alievk/avatarify&quot;&gt;avatarify&lt;/a&gt;&lt;/strong&gt;
Avatars for Zoom and Skype.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/minimaxir/imgmaker&quot;&gt;imgmaker&lt;/a&gt;&lt;/strong&gt;
用 &lt;code&gt;easily-hackable&lt;/code&gt; 模版以可编程的方式创建高质量图片。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/Mascobot/pandemic-ventilator-2.0&quot;&gt;pandemic-ventilator-2.0&lt;/a&gt;&lt;/strong&gt;
Open Source Pandemic Ventilator with Raspberry Pi and Arduino.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/BigchillRK/Zoom-Meeting-and-Recording&quot;&gt;Zoom-Meeting-and-Recording&lt;/a&gt;&lt;/strong&gt;
这个 &lt;code&gt;python&lt;/code&gt; 脚本让你自动加入和记录一个 &lt;code&gt;zoom&lt;/code&gt; 会议。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/grantmcconnaughey/cookiecutter-django-vue-graphql-aws&quot;&gt;cookiecutter-django-vue-graphql-aws&lt;/a&gt;&lt;/strong&gt;
一个非常有主见的 &lt;code&gt;Cookiecutter&lt;/code&gt; 模板，它将 &lt;code&gt;Django、Vue.js、GraphQL和AWS&lt;/code&gt; 融合到一个全栈的 &lt;code&gt;Web&lt;/code&gt; 应用程序中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/ReviewNB/jupyterlab-gitplus&quot;&gt;GitPlus&lt;/a&gt;&lt;/strong&gt;
&lt;code&gt;JupyterLab&lt;/code&gt; 扩展，用于创建 &lt;code&gt;GitHub commits &amp;amp; pull requests&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;自成开发生态不远了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/UsergeTeam/Userge&quot;&gt;Userge&lt;/a&gt;&lt;/strong&gt;
&lt;code&gt;Userge&lt;/code&gt; 是一个用 &lt;code&gt;Python&lt;/code&gt; 和 &lt;code&gt;Pyrogram&lt;/code&gt; 实现的 &lt;code&gt;Powerful , Pluggable Telegram UserBot&lt;/code&gt;。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/alshedivat/meta-blocks&quot;&gt;meta-blocks&lt;/a&gt;&lt;/strong&gt;
用于加速元学习研究的模块化工具箱。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/caoscott/SReC&quot;&gt;SReC&lt;/a&gt;&lt;/strong&gt;
&lt;code&gt;PyTorch&lt;/code&gt; 实现“通过超高分辨率实现无损图像压缩”&lt;/p&gt;
&lt;h3&gt;最近更新&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://morepypy.blogspot.com/2020/04/pypy-731-released.html&quot;&gt;PyPy 7.3.1&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;37 来了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;那些活动&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/PyDataChi/events/269946286/&quot;&gt;Virtual: PyData Chicago Meetup April 2020&lt;/a&gt;
There will be a talk, Cardinality estimation using HyperLogLog with intersection support and Dask parallel computation.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/pythonsd/events/gmxcqrybcgbfc/&quot;&gt;Virtual: San Diego Python Meetup April 2020&lt;/a&gt;
There will be a following talk, Snakes on a Car or Building a Self-Driving RC Car with Python.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/Miami-Machine-Learning-Meetup/events/269908832/&quot;&gt;Virtual: PyData Miami / Machine Learning Meetup April 2020&lt;/a&gt;
There will be a talk, Evaluation of Traditional and Novel Feature Selection Approaches.&lt;/p&gt;
&lt;h4&gt;Posa：&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(Posa私人无责任播报)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;----- 分割线 -----&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你发现哪里翻译有误的话，请务与我联系！感谢！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/python-weekly/pyw-445.html&quot;&gt;pythonista-weekly~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;改进: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/python-weekly/issue%23445.md&quot;&gt;issue-445.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2020-04-29T08:46:59+00:00</updated>
		</source>
	</entry>

</feed>
