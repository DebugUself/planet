<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">

	<title>Planet DebugUself</title>
	<link rel="self" href="http://planet.du.zoomquiet.us/atom.xml"/>
	<link href="http://planet.du.zoomquiet.us/"/>
	<id>http://planet.du.zoomquiet.us/atom.xml</id>
	<updated>2020-01-22T00:42:22+00:00</updated>
	<generator uri="http://www.planetplanet.org/">Planet/2.0 +http://www.planetplanet.org</generator>

	<entry>
		<title type="html"></title>
		<link href="http://liguanghe.github.io/2020/01/21/TimeReport2020/"/>
		<id>http://liguanghe.github.io/2020/01/21/TimeReport2020/</id>
		<updated>2020-01-21T06:48:07+00:00</updated>
		<content type="html">Bokeh Plot</content>
		<author>
			<name>li guang he</name>
			<uri>http://liguanghe.github.io/</uri>
		</author>
		<source>
			<title type="html">Li Guanghe's blog</title>
			<link rel="self" href="https://liguanghe.github.io/rss2.xml"/>
			<id>https://liguanghe.github.io/rss2.xml</id>
			<updated>2020-01-21T08:42:45+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">My Struggle - 我的自怼周报 2020 02w</title>
		<link href="https://bemself.github.io/%E5%BF%83%E8%B7%AF,%E5%91%A8%E6%8A%A5/DM-Weekly-02w.html"/>
		<id>https://bemself.github.io/%E5%BF%83%E8%B7%AF,%E5%91%A8%E6%8A%A5/DM-Weekly-02w.html</id>
		<updated>2020-01-19T00:00:00+00:00</updated>
		<content type="html">周结第三周</content>
		<author>
			<name>My Struggle</name>
			<email>doituself@outlook.com</email>
			<uri>https://bemself.github.io</uri>
		</author>
		<source>
			<title type="html">My Struggle</title>
			<subtitle type="html">This is RSS feed for my website</subtitle>
			<link rel="self" href="https://bemself.github.io/rss.xml"/>
			<id>https://bemself.github.io/rss.xml</id>
			<updated>2020-01-19T16:42:56+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Git - Git 操作问题罗列</title>
		<link href="https://bemself.github.io/git/GIT-Common-Issues.html"/>
		<id>https://bemself.github.io/git/GIT-Common-Issues.html</id>
		<updated>2020-01-17T00:00:00+00:00</updated>
		<content type="html">持续记录 Git 使用中遇到的各种问题，待后续重拾记忆~</content>
		<author>
			<name>My Struggle</name>
			<email>doituself@outlook.com</email>
			<uri>https://bemself.github.io</uri>
		</author>
		<source>
			<title type="html">My Struggle</title>
			<subtitle type="html">This is RSS feed for my website</subtitle>
			<link rel="self" href="https://bemself.github.io/rss.xml"/>
			<id>https://bemself.github.io/rss.xml</id>
			<updated>2020-01-19T16:42:56+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Issue 403</title>
		<link href="http://weekly.pychina.org/issue/issue-403.html"/>
		<id>tag:weekly.pychina.org,2020-01-15:/issue/issue-403.html</id>
		<updated>2020-01-15T08:42:00+00:00</updated>
		<content type="html">&lt;blockquote&gt;
&lt;p&gt;监狱中学 Python 改变人生&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://pycoders.com/issues/403&quot;&gt;PyCoder's Weekly - Issue #403&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;PyCoder&quot; src=&quot;https://cdn.pycoders.com/37bdf31dc645f968ffb90196e5d38ff5&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;200115 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 42 分钟 完成快译&lt;/li&gt;
&lt;li&gt;200115 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 17 分钟 完成格式转抄.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3302/web&quot;&gt;A coverage.py 调试求助&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;NED BATCHELDER&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ned was getting reports for a mysterious disk I/O bug in the latest coverage.py release and asked the community for help. Read the crowd-sourced diagnosis on Hacker News and Ned’s follow-up post next. What a journey…&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;最喜欢这种故事了...总是展现出软件工程的诗意来&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3303/web&quot;&gt;The “No Code” 妄想&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ALEX HUDSON &lt;/li&gt;
&lt;li&gt;观点&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“2020 is going to be the year of ‘no code’: the movement that say you can write business logic and even entire applications without having the training of a software developer. I empathise with people doing this, and I think some of the ‘no code’ tools are great. But I also thing it’s wrong at heart.”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;机械代码-&amp;gt;编译代码-&amp;gt;高级代码-&amp;gt;DSL-&amp;gt;低代码-&amp;gt;无码科技...&lt;/p&gt;
&lt;p&gt;嗯哼,突然 发现 fenng 的前瞻能力哪&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3273/web&quot;&gt;Python 如何实现超长整数?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ARPIT BHAYANI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“Python must be doing something beautiful internally to support super long integers and today we find out what’s under the hood. The article goes in-depth to explain design, storage, and operations on super long integers as implemented by Python.”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3285/web&quot;&gt;Python GUI 编程学习路径&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Does your Python program need a Graphical User Interface (GUI)? With this free learning path you’ll develop your Python GUI programming skills from scratch. Covers Tkinter, PyQt, wxPython, and Kivy.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;gui&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-01-15-ScreenShot%202020-01-15%2015.53.59.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;图形界面开发之路...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3275/web&quot;&gt;Mercurial’s 的 Python 3 之旅和思考&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GREGORY SZORC&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lessons learned from Mercurial’s Python 3 porting effort and a more opinionated commentary of the transition to Python 3 and the Python language ecosystem as a whole. A great read about the mechanics of porting a large Python project to Python 3.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;hg 真心命不好, 就是因为爹没 Linus 知名,所以, 这么好的 DVCS 工具,
一直被 git 压制.&lt;/p&gt;
&lt;p&gt;但是,真正好用, 俺一直在服务端配置 hg 内置 web 服务来配合 hooks, 
完成要很多其它工具配合才能完成的自动化并版本化配置同步.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3279/web&quot;&gt;用 super() 增强 Python OOP 代码&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON &lt;/li&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How to leverage single and multiple inheritance in your object-oriented Python code using the built-in super() function.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3296/web&quot;&gt;在监狱中俺从 Python 学到了什么&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;SHADEED WALLACE-STEPTER&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How open source programming can offer opportunities after incarceration.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;社区, 永远是社区的力量...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3272/web&quot;&gt;Pandas 1.0.0 新功能&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PANDAS.IO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;讨论&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Discussions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3281/web&quot;&gt;学习 Django: 哪些初学错误是可以避免咯...&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REDDIT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;文章,教程和嗯哼&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Articles, Tutorials and Talks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3299/web&quot;&gt;逻辑回归在 Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this step-by-step tutorial, you’ll get started with logistic regression in Python. Classification is one of the most important areas of machine learning, and logistic regression is one of its basic methods. You’ll learn how to create, evaluate, and apply a model to make predictions.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Logistic&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-01-15-ScreenShot%202020-01-15%2015.52.25.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;逻辑回归...真蟒 开始深入非通用知识点了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3287/web&quot;&gt;Redis服务器辅助的 Python客户端缓存&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ITAMAR HABER&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Server-assisted client-side caching is a new capability added in Redis version 6. It is intended to assist the management of a local cache by having the server send invalidation notifications. The server tracks the keys accessed by a client and notifies the client when these change.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3282/web&quot;&gt;用 Python 探索 HTTPS&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial, you’ll gain a working knowledge of the various factors that combine to keep communications over the Internet safe. You’ll see concrete examples of how to keep information secure and use cryptography to build your own Python HTTPS application.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;HTTPS&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-01-15-ScreenShot%202020-01-15%2015.46.06.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;这么解释加密:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;secret&quot; src=&quot;https://files.realpython.com/media/alpha.12689a36982a.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3276/web&quot;&gt;将 Bokeh 嵌入脚本中&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;JIM ANDERSON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“I really wanted to have a self-contained script that would launch Bokeh as part of its operation, rather than remembering which command line options I needed to specify.”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;等等, Bokeh 本身不就是 Py 的模块由脚本执行的?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3271/web&quot;&gt;用 FastAPI 和 Pytest 开发/测试异步API&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;TESTDRIVEN.IO &lt;/li&gt;
&lt;li&gt;• Shared by Michael Herman&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This tutorial looks at how to develop and test an asynchronous API with FastAPI, Postgres, Pytest, and Docker using Test-Driven Development (TDD).&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;FastAPI/Pytest 强强联手.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3267/web&quot;&gt;在 Linux 内核中运行 Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;YONATAN GOLDSCHMIDT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“This article will talk about a cool project I’ve worked on recently — a full Python interpreter running inside the Linux kernel”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;等等, 可是这有什么好处?&lt;/p&gt;
&lt;p&gt;让 shell 可以直接使用 Python 内置的所有模块?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3269/web&quot;&gt;用 MkDocs 和 Netlify 在一天之内发布静态网站&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;SEAN STEWART &lt;/li&gt;
&lt;li&gt;• Shared by Sean Stewart&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Pythonista’s (almost) no-code solution to building a website with the Python-based MkDocs static site generator.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;in a Day?&lt;/p&gt;
&lt;p&gt;10分钟就足够了:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.101.camp/&quot;&gt;Home — 蟒营™ 怂怼录&lt;/a&gt;
&lt;a href=&quot;https://py.101.camp/&quot;&gt;蟒营™ Python 入门班第5期&lt;/a&gt;
...&lt;/p&gt;
&lt;p&gt;这些都是用 MkDocs 通过 github-pages 发布的&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3266/web&quot;&gt;从 Browser 到 Django&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MATT LAYMAN &lt;/li&gt;
&lt;li&gt;• Shared by Matt Layman&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What happens from when a browser makes a request to how Django receives the request and sends back a response.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3301/web&quot;&gt;Python 在 Visual Studio Code – January 2020 发布&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MICROSOFT.COM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3293/web&quot;&gt;用 Python 构建并行图像下载器&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AMIT UPRETI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3270/web&quot;&gt;在 Dockerfile 中激活 Conda 环境&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ITAMAR TURNER-TRAURING&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3297/web&quot;&gt;在 Django 中创建透明加密的字段&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;KEVIN VERONEAU&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3298/web&quot;&gt;在 PyQt 中创建密码输入小部件&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;KUSHAL DAS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;好物&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Interesting Projects, Tools and Libraries, Projects &amp;amp; Code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3286/web&quot;&gt;codetiming: 灵活，可自定义的 Py 代码运行计时器&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/REALPYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3278/web&quot;&gt;nfstream: 灵活的网络数据分析框架&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/AOUINIZIED&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;nfstream&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-01-15-ScreenShot%202020-01-15%2015.38.22.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;很有诚意的项目...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3280/web&quot;&gt;scalene: 适用于 Python 的高性能，高精度 CPU 和内存分析器&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/EMERYBERGER&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3268/web&quot;&gt;HTTPX: N适用于Python的下一代HTTP客户端&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PYTHON-HTTPX.ORG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;每年都有下一个一代的作品出现, 
当然, 都是号称, 一切得看历史以及程序猿们的选择.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3288/web&quot;&gt;CleverCSV: 处理混乱CSV文件的Python包&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/ALAN-TURING-INSTITUTE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;CleverCSV&quot; src=&quot;https://raw.githubusercontent.com/alan-turing-institute/CleverCSV/eea72549195e37bd4347d87fd82bc98be2f1383d/.logo.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;这才是真正需要的东西, 特别是从 Excel 导出的 csv 们...&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;USAGE&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;clevercsv&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;-h&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;-v&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;-V&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;command&amp;gt;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arg1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;]&lt;/span&gt; ... &lt;span class=&quot;cp&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;argN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;]&lt;/span&gt;

ARGUMENTS
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;command&amp;gt;&lt;/span&gt;       The command to execute
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;arg&amp;gt;&lt;/span&gt;           The arguments of the command

GLOBAL OPTIONS
  -h (--help)     Display this help message.
  -v (--verbose)  Enable verbose mode.
  -V (--version)  Display the application version.

AVAILABLE COMMANDS
  code            Generate Python code for importing the CSV file.
  detect          Detect the dialect of a CSV file
  help            Display the manual of a command
  standardize     Convert a CSV file to one that conforms to RFC-4180.
  view            View the CSV file on the command line using TabView
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3283/web&quot;&gt;mp3splitter: 将有声读物MP3文件拆分为章节&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/JIMA80525&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3295/web&quot;&gt;用 pyproject.toml 作配置文件的 Python 项目&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/CARLOSPERATE &lt;/li&gt;
&lt;li&gt;• Shared by Carlos&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;叕一个 ML 的后代...
人们总是在寻求又灵魂又兼顾又规整又图灵完备的配置格式.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3291/web&quot;&gt;pytest-testmon: 可选择受更改文件影响的测试&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TESTMON.ORG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3274/web&quot;&gt;GoStyle: Go语法实现在 Python&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/LUOYUSANG2007&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;所以, 早就说过:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;err&quot;&gt;人生苦短&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Python&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;当歌&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;go 和 py 不分家咯:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gostyle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;# Start the thread &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Call&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3294/web&quot;&gt;rq: 适用于Python的简单作业队列&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/RQ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;没错, 基于 Redis 的, 很老牌了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2&gt;📆🐍 活动/大会&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Events, MeetUp 真的是全球线下活动组织中心&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3257/web&quot;&gt;⋅ PyData Bristol Meetup&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 16, 2020&lt;/li&gt;
&lt;li&gt;英国&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3255/web&quot;&gt;⋅ Python Northwest&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 16, 2020&lt;/li&gt;
&lt;li&gt;英国&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3254/web&quot;&gt;⋅ PyLadies Dublin&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 16, 2020&lt;/li&gt;
&lt;li&gt;爱尔兰&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3253/web&quot;&gt;⋅ MadPUG&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 16, 2020&lt;/li&gt;
&lt;li&gt;404&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3258/web&quot;&gt;⋅ Karlsruhe Python User Group (KaPy)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 17, 2020&lt;/li&gt;
&lt;li&gt;德国&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3256/web&quot;&gt;⋅ Chattanooga Python User Group&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 17, 2020&lt;/li&gt;
&lt;li&gt;USA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3262/web&quot;&gt;⋅ BangPypers&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 18, 2020&lt;/li&gt;
&lt;li&gt;印度&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3260/web&quot;&gt;⋅ PyDelhi User Group Meetup&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 18, 2020&lt;/li&gt;
&lt;li&gt;印度&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3265/web&quot;&gt;⋅ Dominican Republic Python User Group&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 21, 2020&lt;/li&gt;
&lt;li&gt;非洲&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;DAMA&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://py.101.camp/&quot;&gt;蟒营 Python 入门班&lt;/a&gt;&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;5py ;-)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;(￣▽￣)&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;第4期马上结业:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;mi&quot;&gt;200112&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;按时结束&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;年后第5期就来:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;mf&quot;&gt;20.2.3&lt;/span&gt;  &lt;span class=&quot;err&quot;&gt;可以上线&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;20.2.20&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;报名截止&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;20.3.1&lt;/span&gt;  &lt;span class=&quot;err&quot;&gt;正式开课&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3100/web&quot;&gt;从1965年到2019年，最受欢迎的编程语言 (动画)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;TWITTER.COM/MARCUSBORBA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;网红小视频也出现了...&lt;/p&gt;
&lt;p&gt;最后3秒, Python 疯狂反转一切.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h1&gt;是也乎&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;NN 3893&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/issue/issue-403.html&quot;&gt;Issue 403 ~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;修订: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/Issue/issue-403.md&quot;&gt;issue-403.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2020-01-15T08:43:12+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">TimeReport 从内容标签的角度分析</title>
		<link href="http://liguanghe.github.io/2020/01/14/TimeReport20200114/"/>
		<id>http://liguanghe.github.io/2020/01/14/TimeReport20200114/</id>
		<updated>2020-01-14T14:42:32+00:00</updated>
		<content type="html">&lt;p&gt;从2017年4月1日开始记录时间至今, 2年9个月14天间,共计24339小时.除了按照五大类别的分类外,也尝试用内容标签来做个分析.&lt;/p&gt;
&lt;p&gt;每个时间都会有类别,但不一定有内容. 有点意义的会标出来. 对我来讲,人和组织很重要,超过了项目, 是会在内容里标记出来的.&lt;/p&gt;</content>
		<author>
			<name>li guang he</name>
			<uri>http://liguanghe.github.io/</uri>
		</author>
		<source>
			<title type="html">Li Guanghe's blog</title>
			<link rel="self" href="https://liguanghe.github.io/rss2.xml"/>
			<id>https://liguanghe.github.io/rss2.xml</id>
			<updated>2020-01-21T08:42:45+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Python - 线性回归（Linear Regression) 的 Python 实现</title>
		<link href="https://bemself.github.io/python/Python-Linear-Regression-impl.html"/>
		<id>https://bemself.github.io/python/Python-Linear-Regression-impl.html</id>
		<updated>2020-01-14T00:00:00+00:00</updated>
		<content type="html">在 Python 中如何实现线性回归？很简单，有不错的包和函数~</content>
		<author>
			<name>My Struggle</name>
			<email>doituself@outlook.com</email>
			<uri>https://bemself.github.io</uri>
		</author>
		<source>
			<title type="html">My Struggle</title>
			<subtitle type="html">This is RSS feed for my website</subtitle>
			<link rel="self" href="https://bemself.github.io/rss.xml"/>
			<id>https://bemself.github.io/rss.xml</id>
			<updated>2020-01-19T16:42:56+00:00</updated>
		</source>
	</entry>

	<entry xml:lang="en-us">
		<title type="html">2019 而立的废渣</title>
		<link href="http://bambooom.github.io/2020/01/14/2019-summary/"/>
		<id>http://bambooom.github.io/2020/01/14/2019-summary/</id>
		<updated>2020-01-14T00:00:00+00:00</updated>
		<content type="html">&lt;p&gt;2019 过得平淡无奇，赶脚没啥可写的，但这个系列都年更了，还是不想断，所以还是来补完吧 😅&lt;/p&gt;

&lt;p&gt;well，2019 年三十岁惹，仍然一事无成。。。 ┓(´∀`)┏  没发大财没房没车。&lt;/p&gt;

&lt;h2 id=&quot;home-office-即将结束&quot;&gt;home office 即将结束&lt;/h2&gt;

&lt;p&gt;2019 还是 home office 了一整年的。
上周老板和同事们齐聚到深圳 annual meeting，不是那种去玩搞表演晚会啥的年会，穷苦小厂只是大家面对面沟通一下来年工作事项，集中干活几天而已。。。
然后老板迅速看定了一个 office，2 月开始租。于是年后开始我就要去公司正常通勤上班了，2 年多自由轻松的 home office 生活就要结束了，好不舍得啊！😿&lt;/p&gt;

&lt;p&gt;不过老板之前曾问过我喜欢怎样的工作模式，我说希望每周能 3 天去公司上班，该开会该讨论该交流的集中搞定，2 天能在家一个人工作。
老板表示赞同，说他以前在美国的公司上班时也有这种模式，虽然他个人不需要用。
等下一次老板从美国回来的时候打算问一下，“每周五可以自由选择是否 home office 吗？🥺🙏🏻”&lt;/p&gt;

&lt;p&gt;说到通勤，新租的 office 地点离我现在住的地方不算远，大概 5 公里多。
但非常不幸的是没有直接的交通工具可以到达。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;要不然需要步行 900m + 地铁 3 个站 + 步行 1.6 公里，&lt;/li&gt;
  &lt;li&gt;要不然步行 1.1 公里 + 公交 6 站 + 步行 600m，&lt;/li&gt;
  &lt;li&gt;要不然两程公交需要转一次，但总共步行只有 600 米，&lt;/li&gt;
  &lt;li&gt;要不然全程骑自行车 30 分钟。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;鉴于夏天的时候我骑摩拜单车骑到一辆刹车失灵的，导致我在路口撞上了一辆路虎，产生阴影，我可能之后除非逼不得已都不会选择使用这类共享单车。
全程骑车当然说的是自己买辆好的单车骑，但是停放是个需要提前考虑和了解的问题。以及夏天骑 30 分钟也的确有点长，会很热。&lt;/p&gt;

&lt;p&gt;所以前两天开始琢磨起能轻松带着走的代步工具，就还是可以去坐地铁的。
我想到的是滑板🛹 看上去很青春✨，滑板又比较轻，不会占空间，挤地铁也没压力，唯一的问题就是我需要淆习一下，上手起来大概并没有那么容易，作为一个平衡感并不好的人，也害怕摔跤😂&lt;/p&gt;

&lt;h2 id=&quot;日语&quot;&gt;日语&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://bambooom.github.io/assets/images/n1pass.jpg&quot; alt=&quot;这么菜的分数 percentile 还有 92.3%，来考试的人都是怎么肥似？&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2019 年唯一正经干成的事大概就是 N1 过了。当然这其实也不算什么，毕竟我心里清楚我的语法知识还是一坨 shit 😂😂
而且对比&lt;a href=&quot;https://www.douban.com/people/neverbutterfly/status/2373184972/&quot;&gt;一位某省高考状元学姐的满分&lt;/a&gt;，强烈感受到智商和语言天赋上望尘莫及的差距。。。心塞塞 😔&lt;/p&gt;

&lt;p&gt;上半年过年后的空闲时间都用来复习日语准备考试了，以致于追番和日剧都大面积搁置了，到现在都没能补完 （不，去年也大批没补完的东西 🤦🏻‍♀️
考完试下半年就清闲了很多，但基本上没干任何正经事，今年真的很废柴。。。&lt;/p&gt;

&lt;p&gt;虽然现在的破日语水平看本生肉小皇叔能懂 80% 以上，但是觉着就这么下去好像毫无提高。
语言这种东西不使用起来是铁定会忘的，比如我的粤语，离开 hk 后就很少讲了，说的能力直线下降，听的能力也是缓慢下降中，有点堪忧。。。寻思着好不容易考了 N1，不想就这么止步不前了，明年开始得想法子继续巩固加强啊少年！&lt;/p&gt;

&lt;p&gt;有关怎么加强，其实大概也只能尽量多去使用，比如看综艺的生肉。本来也想试着看书，但是总觉得中文书都经常看不下去，我还是别给自己太大压力，我还是继续找生肉漫画看吧。漫画的小问题就是，图片上的文字不太方便复制出来去检索意思或者读音。晚点再去想想办法吧~&lt;/p&gt;

&lt;p&gt;（另外豆瓣友邻提到还可以听抓锻炼，这个完全可以考虑~）&lt;/p&gt;

&lt;h2 id=&quot;工作技能&quot;&gt;工作技能&lt;/h2&gt;

&lt;p&gt;赶脚毫无长进。。。。。一直在原地踏步的样子。转行做前端也已经 3 年多快 4 年了都，但还是赶脚自己啥也不会，内心惶恐非常虚。
今天老板也跟我说下个月开始给我涨工资，又是一阵惶恐，自己这种菜🐔如果离开现在的公司大概没人会愿意出这个价钱了吧？？？（涨了工资其实也并不高，但只好抱紧大佬大腿了😳）
书架上有 N 多本应该看的专业书还没看，2019 了结了考过 N1 这个计划，是不是该重新好好正视自己的专业技能了呢？？？&lt;/p&gt;

&lt;h2 id=&quot;综艺&quot;&gt;综艺&lt;/h2&gt;

&lt;p&gt;去年年初的时候因为几个朋友都看起了《声入人心》，于是我也跟着去看了，然后怎么说呢，前两年还有点排斥看祖国综艺的，结果 2019 很开心地看了起来。
后来还追着看完了《声入人心 2》和一部分《歌手》，虽然和 声 2 和声1 比起来很难看。
然后还吃🍉式的看了一部分《中餐厅》第二季和第三季，然后因为自己兴趣看了一部分《这就是街舞 2》，然后花了很多时间补完了《明星大侦探》前面四季，正在追看第五季。&lt;/p&gt;

&lt;p&gt;于是又是一大波想追的新番和日剧没看或者忘记补完。。。。。&lt;/p&gt;

&lt;p&gt;综艺真是消耗时间最可怕的利器。。。&lt;/p&gt;

&lt;h2 id=&quot;舞台&quot;&gt;舞台&lt;/h2&gt;

&lt;p&gt;因为看了《声入人心》，于是又开始对舞台感兴趣，2019 年陆陆续续看了很多音乐剧、还有几个话剧和舞剧、音乐会。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://bambooom.github.io/assets/images/2019piao.jpg&quot; alt=&quot;晒票，还有一个 hkaf 的攀越冰峰，以及去霓虹看的西区故事&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最想推荐的是以下几个：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;陕西人艺出品的陕西话版话剧&lt;a href=&quot;https://www.douban.com/location/drama/10540051/&quot;&gt;《白鹿原》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;《白鹿原》小说本身就是以陕西为设定背景的，用原汁原味的陕西话来表演，真的是非常适合。
各种很有趣的陕西土话情话黄色笑话骂人脏话，很让人入戏，“就是那个味儿”~ 当然，因为小说情节太多太长，这出 3 个小时话剧已经大幅度缩减了，但还是可以对白鹿原的大概剧情走向有个大概了解的。
另外我个人非常喜欢配乐，秦腔唢呐本来就非常 bug，再搭配点电子迷幻，整个人头皮发麻w&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;上海歌舞团出品的舞剧&lt;a href=&quot;https://www.douban.com/location/drama/30360647/&quot;&gt;《永不消逝的电波》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这是个获奖的节目，看这个剧之前我也并不确定舞剧是指什么。
最开始听说的时候，对剧情简介有点介意，因为是非常红砖的。
但是评价的一致好评又让人抵挡不住好奇心去看了现场。然后就真香了🤣
剧情本身没啥特别的，而且其实剧情也不用那么介意，只看美轮美奂的舞台就非常满足了。&lt;/p&gt;

&lt;p&gt;作为一个也看过不少舞台剧的人，诚心诚意夸赞一下电波的舞台效果，真的就是&lt;strong&gt;赏 心 悦 目&lt;/strong&gt;。
我是第一次看到做出如此丰富层次感的舞台，光影效果简直可以媲美出色的电影。
这些光影效果也不是孤立的，是为了烘托整体气氛，是能够服务剧情本身的。
另外巧妙地利用多重景深的遮板 将整个舞台空间切割成不同层次，brilliant！
还有一些道具比如黑伞的运用，都让这个舞台很有美感。
最美的当属一众婀娜多姿的旗袍小姐姐跳舞的段落了，这部分个人觉得其实没啥特别剧情，单纯享受，旗袍小姐姐们太美了太美了太美了啊！
如果今年还有巡演，还想再看一次呢~&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;法语音乐剧&lt;a href=&quot;https://www.douban.com/location/drama/1765426/&quot;&gt;《巴黎圣母院》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上周六去看的，也算在 2019 年总结里算了。
今年也看了不少经典和出名的音乐剧，但很多也都不怎么喜欢。
想了下最喜欢的大概是《巴黎圣母院》，幸好赶上了 20 周年巡演。
也不知道为啥，最后一首卡西莫多唱的 Balla mia Esmeralda 让我抹泪了🥺😳 （可惜没有听到 Angelo 的卡西莫多，但 B 卡竟然也让我哭了，我真是容易被煽动 😑&lt;/p&gt;

&lt;p&gt;贴个 Angelo 版本的 Balla mia Esmeralda 感受一下 https://www.youtube.com/watch?v=XkJKuMzja7s&lt;/p&gt;

&lt;h2 id=&quot;最后&quot;&gt;最后&lt;/h2&gt;

&lt;p&gt;想起来今年又去了两次霓虹。一次是夏天的濑户内周边以及艺术节跳岛游，写了乱七八糟&lt;a href=&quot;https://www.douban.com/note/728217071/&quot;&gt;一堆流水账&lt;/a&gt;。
还有一次是 12 月的纯粹消耗假期很随意的&lt;a href=&quot;https://www.douban.com/note/745990626/&quot;&gt;东京3日游荡&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;另外，因为看起了明侦，于是最近也开始喜欢去玩密室。明年大概会去更多密室，或者实景搜证玩剧本杀。
然后我也许就可以做推荐深圳所有非恐怖系偏推理悬疑的密室评测了。。。23333
结果写完发现，新的一年其实脑里还是想的各种玩乐而已 🤦🏻‍♀️&lt;/p&gt;

&lt;p&gt;要说 2020 有啥计划的话，好像也没啥特定的计划了。不过先许下愿望，&lt;strong&gt;未来 2-3 年内买房&lt;/strong&gt;，然后就能过上愉快自由的独居生活！（当然是爸妈出钱，我真是废渣 🤦🏻‍♀️）&lt;/p&gt;

&lt;p&gt;附前几年总结: &lt;a href=&quot;https://www.douban.com/note/702384268/&quot;&gt;2018&lt;/a&gt; &lt;a href=&quot;https://www.douban.com/note/650747131/&quot;&gt;2017&lt;/a&gt; &lt;a href=&quot;https://www.douban.com/note/600437210/&quot;&gt;2016&lt;/a&gt; &lt;a href=&quot;https://www.douban.com/note/532445213/&quot;&gt;2015&lt;/a&gt; &lt;a href=&quot;https://www.douban.com/note/475347560/&quot;&gt;2014&lt;/a&gt; &lt;a href=&quot;https://www.douban.com/note/329611675/&quot;&gt;2013&lt;/a&gt; &lt;a href=&quot;https://www.douban.com/note/255202347/&quot;&gt;2012&lt;/a&gt; &lt;a href=&quot;https://www.douban.com/note/125442027/&quot;&gt;2010&lt;/a&gt;&lt;/p&gt;</content>
		<author>
			<name>bambooom</name>
			<email>zhuzi.mn@gmail.com</email>
			<uri>http://bambooom.github.io</uri>
		</author>
		<source>
			<title type="html">Bambooom</title>
			<subtitle type="html">Personal Blog of Bambooom</subtitle>
			<link rel="self" href="https://bambooom.github.io/feed.xml"/>
			<id>https://bambooom.github.io/feed.xml</id>
			<updated>2020-01-14T16:42:38+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">My Struggle - 我的自怼周报 2020 01w</title>
		<link href="https://bemself.github.io/%E5%BF%83%E8%B7%AF,%E5%91%A8%E6%8A%A5/DM-Weekly-01W.html"/>
		<id>https://bemself.github.io/%E5%BF%83%E8%B7%AF,%E5%91%A8%E6%8A%A5/DM-Weekly-01W.html</id>
		<updated>2020-01-12T00:00:00+00:00</updated>
		<content type="html">周结第二周，看看能坚持多久~</content>
		<author>
			<name>My Struggle</name>
			<email>doituself@outlook.com</email>
			<uri>https://bemself.github.io</uri>
		</author>
		<source>
			<title type="html">My Struggle</title>
			<subtitle type="html">This is RSS feed for my website</subtitle>
			<link rel="self" href="https://bemself.github.io/rss.xml"/>
			<id>https://bemself.github.io/rss.xml</id>
			<updated>2020-01-19T16:42:56+00:00</updated>
		</source>
	</entry>

</feed>
