<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">

	<title>Planet DebugUself</title>
	<link rel="self" href="http://planet.du.zoomquiet.us/atom.xml"/>
	<link href="http://planet.du.zoomquiet.us/"/>
	<id>http://planet.du.zoomquiet.us/atom.xml</id>
	<updated>2019-11-19T16:44:35+00:00</updated>
	<generator uri="http://www.planetplanet.org/">Planet/2.0 +http://www.planetplanet.org</generator>

	<entry>
		<title type="html">pythonista-weekly : Pyw 423</title>
		<link href="http://weekly.pychina.org/python-weekly/pyw-423.html"/>
		<id>tag:weekly.pychina.org,2019-11-19:/python-weekly/pyw-423.html</id>
		<updated>2019-11-19T07:16:00+00:00</updated>
		<content type="html">&lt;h3&gt;欢迎阅读《pythonista周刊》第423期。Let us start!&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://mailchi.mp/pythonweekly/python-weekly-issue-423&quot;&gt;https://mailchi.mp/pythonweekly/python-weekly-issue-423&lt;/a&gt;&lt;br /&gt;
翻译：Dustyposa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;来自赞助商:&lt;/h3&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.vettery.com/tech?utm_source=newsletter&amp;utm_medium=pythonweekly&amp;utm_term=tech&amp;utm_content=grouped&amp;utm_campaign=ad-77579&quot;&gt;python开发者都需要的Vettery&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Vettery是一个招聘网站，它改变了人们应聘或者雇佣的方式。准备好换工作地方了吗？免费制作简历，你的薪资你说了算，现在就和顶级雇主的HR联系吧！&lt;/p&gt;
&lt;h2&gt;新闻&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://octoverse.github.com/&quot;&gt;Python 超越 Java 成为 GitHub 上第二受欢迎的语言 (by repository contributors).&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;尽管&lt;code&gt;Github&lt;/code&gt;传统上是软件开发者的家，但是世界的代码正在演化。&lt;code&gt;Python&lt;/code&gt;发展的背后是一个高速发展的数据科学工作者和爱好者社区——以及他们每天使用的工具和框架。包括了很多&lt;code&gt;Python&lt;/code&gt;制作的核心数据科学包，它们既能降低数据科学工作的门槛也能为学术界和工业界项目提供基础。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;何以解忧，唯有&lt;strong&gt;Python&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://pyfound.blogspot.com/2019/11/seeking-developers-for-paid-contract.html&quot;&gt;寻找开发者有偿升级pip&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Pthon软件基金会 Packaging 工作组&lt;/code&gt;正在接受资助，用于设计、实现和推出&lt;code&gt;pip&lt;/code&gt;的下一代依赖解决方案。他们准备雇佣两个承包商，一名高级开发人员和一名中级开发人员进行开发、测试、构建测试基础、代码审查、bug分类以及协助推出必要的功能。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;心动不如心动！&lt;/p&gt;
&lt;p&gt;官方出手，最为致命。希望能解决这个令人头痛的问题！&lt;/p&gt;
&lt;p&gt;不过话说回来，现在&lt;code&gt;poetry、pyflow&lt;/code&gt;好像比较火。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://blog.jupyter.org/jupyter-community-workshops-call-for-proposals-for-jan-aug-2020-710f687e30f4&quot;&gt;Jupyter 社区研讨会: 2020年1-8月征集提案  2020年1-8月征集提案 &lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Jupyter 社区研讨会将会聚集一些Jupyter社区成员和核心贡献者小组，以进行有影响力的战略性工作，并就重点主题进行社区讨论。 我们希望这一轮有资助的活动将在2020年8月之前举行。 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为社区做贡献，也是一件很有自豪感的事。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;文章、教程与话题&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=P5nOGKVLIYo&quot;&gt;MicroPython  温暖我的家&lt;/a&gt;  &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;(42 min)&lt;/h4&gt;
&lt;p&gt;2018年，我从美国搬到了爱尔兰，尽管有配备联网功能的暖气控制器，但是我租的房子还是非常冷。在这个视频中，我想告诉你我是如何“debugged”这个问题并且我在之后是如何使用几个运行&lt;code&gt;MicroPython&lt;/code&gt;的微型控制器来改善供暖的，所有这些操作都无需对我不拥有的房屋进行任何修改。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;哪里不爽，动手用&lt;code&gt;Python&lt;/code&gt;改哪里！So,cool!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://t.co/QnBi3m7S1Z&quot;&gt;Python中Dijkstra最短路径算法&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;从GPS导航到网络链路路由，Dijkstra的算法在一些最被视为理所当然的现代服务中大放异彩。利用一些基本的数据结构，让我们了解它是做什么的，它是如何实现目标的，然后如何在&lt;code&gt;Python&lt;/code&gt;中实现（从最简单到良好的运行~）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;熟悉的算法来了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=eyKwPyOqMg4&quot;&gt;理解卷积神经网络:制作手写数字计算器&lt;/a&gt;  &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;（22min）&lt;/h4&gt;
&lt;p&gt;在本视频，我使用卷积神经网络——在用&lt;code&gt;Python&lt;/code&gt;基于&lt;code&gt;Tensorflow和Keras&lt;/code&gt;编写的——去制作了一个手写数字计算器。在此过程中，我深入研究了卷积神经网络是如何工作的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;识别不够，计算来凑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://djangostars.com/blog/rest-apis-django-development/&quot;&gt;如何使用Django REST框架开发APIS&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Mastering the basics means mastering the craft. 一步一步教你如何成功构建API。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;似曾相识~？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://zainrizvi.io/blog/jupyter-notebooks-best-practices-use-virtual-environments/&quot;&gt;Jupyter Notebooks 最佳实践: 使用虚拟环境&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;将Python社区公认的最佳实践应用到你的&lt;code&gt;Jupyter Notebooks&lt;/code&gt;中。你可以为&lt;code&gt;Jupyter Lab&lt;/code&gt;增加虚拟环境，给每个&lt;code&gt;notebook&lt;/code&gt;建立专用的虚拟环境。本篇文章详尽地解释了你如何在&lt;code&gt;Google Cloud's AI Platform Notebooks&lt;/code&gt;上为你个人的&lt;code&gt;notebooks&lt;/code&gt;增加虚拟环境。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;云上环境管理也是很重要的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://t.co/POY5bshIPf&quot;&gt;Django基于视图的权限管理&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;这篇文章解释（使用一个很简单的例子）了我们如何使用&lt;code&gt;Django和Django REST Framework&lt;/code&gt;实现了一个基于视图的权限管理系统，并试着解释我们为什么选择这样做。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;权限api，get！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://t.co/Q0Raies7D4&quot;&gt;使用Elasticsearch &amp;amp; fscrawler构建一个基础搜索引擎&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;这篇文章展示了如何使用&lt;code&gt;fscrawler,Elasticsearch,Python和Flask&lt;/code&gt;在你本机上运行一个快速并dirty（没找到合适的词，，）的搜索引擎。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;想到什么做什么~快速提升办公效率&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=MgBgMyYROTE&quot;&gt;剖析Python: 了解你的代码资源占用情况的一份介绍&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;(22min)&lt;/h4&gt;
&lt;p&gt;发现你代码中的性能瓶颈并不是一直都很简单。这篇指南将会给你介绍可用于代码分析和度量程序优化效果的工具。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;性能分析，进阶必备！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.brighttalk.com/webcast/17563/377927?utm_source=python-weekly&amp;utm_medium=sponsored&amp;utm_campaign=377927&quot;&gt;网上研讨会-提升预测准确性:调整超参数和管道&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Register now for this hands-on code webinar with Dr. Mark Fenner - Data Scientist and Book Author of Machine Learning with Python for Everyone - and Domino Data Lab. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;来自赞助商~有名人参与的网络研讨会。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.deploymachinelearning.com/&quot;&gt;用Django 部署机器学习模型&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;该教程提供了几个如何用&lt;code&gt;REST API&lt;/code&gt;构建你的ML系统代码示例。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;机器学习部署来了！快全覆盖了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://t.co/ZziDy4xCm7&quot;&gt;使用Python的矩阵分解技术概述&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;用于在线推荐系统引擎的集中不同类型的矩阵分解技术和缩放机制。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;推荐系统与矩阵分解~&lt;/p&gt;
&lt;p&gt;不过最近 Attention 比较流行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://t.co/UmPtJnyQZh&quot;&gt;用Flask处理表单的端到端指南&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;学习如何使用&lt;code&gt;Flask-WTForms&lt;/code&gt;在&lt;code&gt;Flask&lt;/code&gt;中创建表单逻辑和模版。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;全套教程应该都有了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://jacobian.org/2019/nov/11/python-environment-2020/&quot;&gt;我的Python开发环境，2020版&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Jacob Kaplan-Moss 解释他的&lt;code&gt;Python&lt;/code&gt;环境设置. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;环境有困扰？可以瞅一瞅。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.pyimagesearch.com/2019/11/11/detecting-natural-disasters-with-keras-and-deep-learning/&quot;&gt;用Keras and Deep Learning发现自然灾害&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在本教程，你将学习到如何使用&lt;code&gt;Keras,CV and 深度学习&lt;/code&gt;自动发现自然灾害（地震、洪水、山火、旋风/飓风）超过95%的准确率。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;科技造福人类。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://deepsource.io/blog/new-python-web-frameworks/&quot;&gt;11个新Python web frameworks&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在你的下一个网站项目中试试新的血液吧~&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;框架不要怕~文档在手，天下我有。&lt;/p&gt;
&lt;p&gt;看了一下大部分都脸熟，最近打算玩玩&lt;code&gt;fastapi&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://t.co/Cur6Zc94Ja&quot;&gt;不被阻挡的艺术&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;我如何使用Selenium和Python抓取Facebook和Tiktok。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;数据抓取方面感觉国外有点慢~？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://t.co/FbfkPpcheR&quot;&gt; 我们如何构建Bytebase —第一部分:使用网络套接字实时聊天 &lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;这是我们关于我们如何构建&lt;code&gt;Bytebase&lt;/code&gt;系列文章中的第一篇。本系列改编于我们在圣地亚哥举行的 2019 US DjangoCon 大会上介绍的Django实时聊天教程，我们也根据需求增加了主题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;追追追！很明显很有趣！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.sitepoint.com/keras-face-detection-recognition/&quot;&gt;用Keras实现人脸检测和识别&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本教程展示了如何在&lt;code&gt;Keras&lt;/code&gt;中使用&lt;code&gt;MTCNN模型&lt;/code&gt;检测图片中的人脸，以及如何使用&lt;code&gt;VGGFace2算法&lt;/code&gt;提取人脸特征并在不同图片中匹配他们。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;升级的人脸识别项目~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://articles.life4web.ru/python/contracts/&quot;&gt;Contract-Driven开发&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;契约驱动~微服务大展拳脚？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://t.co/hZy1K6g8Jq&quot;&gt;通过使用Python自动执行SSH和SCP任务来节省时间&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;SSH,SCP  自動達成する &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://jjmalina.github.io/posts/laziness-and-streams-pt-2/&quot;&gt;Python中的惰性和流&lt;/a&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;a href=&quot;https://lethain.com//creating-slack-app-python/&quot;&gt;在GCP上用Python创建一个Slack应用&lt;/a&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;a href=&quot;https://asthasr.github.io/posts/parsing-in-python/&quot;&gt;“Parsing” in Python&lt;/a&gt;&lt;/h4&gt;
&lt;h2&gt;有趣的项目、工具和库&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/minimaxir/stylecloud&quot;&gt;stylecloud&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Python包+命令行界面生成风格化的单词云，包括渐变和图标形状！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;wordcloud 升级版~有词云需求可以看看，使用也很简单。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/open-mmlab/mmfashion&quot;&gt;MMFashion&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;基于PyTorch的用于视觉时尚分析的开源工具箱 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;时尚分析谁来做！&lt;/p&gt;
&lt;p&gt;来自香港中文大学的多媒体实验室开发的！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/HasnainRaz/Fast-SRGAN&quot;&gt;Fast-SRGAN&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;一个快速深度学习模型，以30fps的速度将低分辨率的视频提升到高分辨率。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;重制神器呀！&lt;/p&gt;
&lt;p&gt;之前有一个 anime 4k升级，这个不限定于anime，可以 try one try。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/vinayak-mehta/conrad&quot;&gt;conrad&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在终端上跟踪会议和聚会！ &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;主要是查看订阅：  公开征集提案（CFP）的事件 &lt;/p&gt;
&lt;p&gt;当然有需求可以改成自己需要的版本~爬虫部分可定制机。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/kadnan/ScrapeGen&quot;&gt;ScrapeGen&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;一个简单的&lt;code&gt;Python&lt;/code&gt;工具，可以生成一个基于 &lt;code&gt;requests/bs4&lt;/code&gt;的爬虫。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原理很简单，可以参考一下设计思路~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/dovpanda-dev/dovpanda&quot;&gt;dovpanda&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在分析环境中和&lt;code&gt;Pandas&lt;/code&gt;叠加使用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pandas辅助来了！
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/kubapilch/PygameUI&quot;&gt;PygameUI&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;这是一个小的基础UI组件的实现，加速你的游戏项目构建。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;懒惰，使程序员变强！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/evilsocket/pwnagotchi-plugins-contrib&quot;&gt;pwnagotchi-plugins-contrib&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;用户贡献的&lt;code&gt;Pwnagotchi&lt;/code&gt; 插件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;谨慎使用。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;活动和网络研讨会日程&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/bostonpython/events/265373222/&quot;&gt;Four data-themed talks - Boston, MA&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;将会有以下话题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;D-Tale&lt;/li&gt;
&lt;li&gt;Twitter  情感分析&lt;/li&gt;
&lt;li&gt;在没有服务器的情况下，在网上提供深度学习模型。&lt;/li&gt;
&lt;li&gt;用自定义数据类型处理&lt;code&gt;DataFranes&lt;/code&gt;以外的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;种类依旧丰富～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/dcpython/events/265096630/&quot;&gt;DC Python Meetup November 2019 - Arlington, VA&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;用 &lt;code&gt;AWS and Lambda&lt;/code&gt;实现模型服务。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;咦，承接上面的 serverless？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/tripython/events/265549119/&quot;&gt;Surviving without Python - Raleigh, NC&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Python是如此受欢迎的语言是有原因的:它的原则很强大。然而，如果Python是“所有语言中第二好的语言”，那就意味着常常选择第一好的语言。噢,不!如果没有我们喜欢的语言，&lt;code&gt;Pythonistas&lt;/code&gt;怎么能在一个项目或工作场所生存下来呢?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我也这么想的！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/python-14/events/ndcfkryzpbzb/&quot;&gt;PyHou Meetup November 2019 - Houston, TX&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;设计一个&lt;code&gt;Pythonic API&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/PyData-MTL/events/266258888/&quot;&gt;PyData Montreal Meetup November 2019 - Montreal, QC&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;将会有以下话题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目标检测和定位的弱监督方法&lt;/li&gt;
&lt;li&gt;用scikit-image和Dash进行交互式图像处理&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;看来Dash还是很受欢迎的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/PyDataChi/events/266300442/&quot;&gt;Interpretable Neural Networks for Text Classification - Chicago, IL&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;将会讨论全局和局部两者可解释性的不同之处；这些概念在文本分类中意味着什么；如何使用显著性和遮挡这两种特殊的局部可解释性方法来打开神经网络的黑盒子。我们也会降到多层注意力网络，一个利用文本分类的神经网络模型，具有注意力形式的内置局部可解释性。&lt;/p&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/Ljubljana-Python-Group/events/265920194/&quot;&gt;LjPyMeetup November 2019 - Ljubljana, Slovenia&lt;/a&gt;&lt;/h4&gt;
&lt;h2&gt;Posa：&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(Posa私人无责任播报)&lt;br /&gt;
残念，暂无。:(&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;----- 分割线 -----&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你发现哪里翻译有误的话，请务与我联系！感谢！
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/python-weekly/pyw-423.html&quot;&gt;pythonista-weekly~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;改进: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/python-weekly/issue#423.md&quot;&gt;issue-422.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2019-11-19T16:44:02+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Issue 394</title>
		<link href="http://weekly.pychina.org/issue/issue-394.html"/>
		<id>tag:weekly.pychina.org,2019-11-13:/issue/issue-394.html</id>
		<updated>2019-11-13T03:42:00+00:00</updated>
		<content type="html">&lt;blockquote&gt;
&lt;p&gt;俺的 Python 开发环境 2020 版&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://pycoders.com/issues/394&quot;&gt;PyCoder's Weekly - Issue #393&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;PyCoder&quot; src=&quot;https://cdn.pycoders.com/37bdf31dc645f968ffb90196e5d38ff5&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;191106 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 42 分钟 完成快译&lt;/li&gt;
&lt;li&gt;191106 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 17 分钟 完成格式转抄.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2898/web&quot;&gt;PSF 寻求开发商以提高 pip 品质&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PYFOUND.BLOGSPOT.COM &lt;/li&gt;
&lt;li&gt;• Shared by Brian Rutledge&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Python Software Foundation Packaging Working Group is receiving funding to work on the design, implementation, and rollout of pip’s next-generation dependency resolver. Funding has been allocated to secure a senior developer and an intermediate developer, starting in December 2019 or January 2020. RFP open now through November 22.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2901/web&quot;&gt;俺的Python开发环境，2020版&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;JACOB KAPLAN-MOSS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The co-creator of Django explains his Python environment: “My setup pieces together pyenv, poetry, and pipx. It’s probably a tad more complex than is ideal for most Python users, but for the things I need, it’s perfect.” Related discussion on Hacker News.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;来了, 又来了, 每年更新最具有引战体质话题...&lt;/p&gt;
&lt;p&gt;pipenv 被弃用非常明智...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2899/web&quot;&gt;何时在Python中使用列表推导&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python list comprehensions make it easy to create lists while performing sophisticated filtering, mapping, and conditional logic on their members. In this tutorial, you’ll learn when to use a list comprehension in Python and how to create them effectively.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Comprehension&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2019-11-13-ScreenShot%202019-11-13%2011.33.25.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;最讨巧也最容易滥用的技巧...&lt;/p&gt;
&lt;p&gt;简单说:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;在应该使用时&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2889/web&quot;&gt;Python中的“解析”&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ASTHASR.GITHUB.IO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“Don’t be afraid to create new, more specific data types for your specific use cases. It’s okay to represent different data, used for different purposes, with different data structures, and makes later generalization easier!”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;毕竟 Python 内置的, 而对其它对象的分析, Python 生态中工具也是最多的...&lt;/p&gt;
&lt;p&gt;所以, 嫑怕, 放心定制自己舒服的...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2880/web&quot;&gt;使用 Keras 和深度学习发现自然灾害&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ADRIAN ROSEBROCK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial, you will learn how to automatically detect natural disasters (earthquakes, floods, wildfires, cyclones/hurricanes) with up to 95% accuracy using Keras, Computer Vision, and Deep Learning.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2905/web&quot;&gt;Python 成为 GitHub 第二受欢迎的语言&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;DEVELOPER-TECH.COM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GitHub has published its latest State of the Octoverse report which provides fascinating insights into the development industry.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;第一当然是 JAVA 了, 报告中还有其它有趣的结论:&lt;/p&gt;
&lt;p&gt;谁是增长最快的语言? 哪个编辑器最受欢迎...&lt;/p&gt;
&lt;p&gt;当然, 无论调查如何, 自己舒服的才是最好的.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2903/web&quot;&gt;简单便携式 Python 解释器的复杂路径&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GLAUBER COSTA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“We needed a Python interpreter that can be shipped everywhere. You won’t believe what happened next!”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;简单说, 用专用工具来完成...别自己乱来...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2885/web&quot;&gt;那些最为低估的 Python 软件包&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;EYAL TRABELSI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;除了 this 模块之外, 在各种领域都散落有官方一直没注意到的神奇模块,
当然, 多数都是和大数据相关的, pandas 插件, 数据清理/探索, 以及性能检测什么的...&lt;/p&gt;
&lt;p&gt;值得逐一尝试体验...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2890/web&quot;&gt;停止使用 utcnow 以及 utcfromtimestamp&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PAUL GANSSLE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;简单说 datetime 才是最好的选择.
)&lt;/p&gt;
&lt;h2&gt;讨论&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Discussions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;NIL&lt;/p&gt;
&lt;h2&gt;文章,教程和嗯哼&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Articles, Tutorials and Talks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2882/web&quot;&gt;Python Lambda 函数测验&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python lambdas are little, anonymous functions, subject to a more restrictive but more concise syntax than regular Python functions. Test your understanding on how you can use them better!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;真蟒 少见的随堂测试, 大家可以尝试一下看对 Lambda 应用场景理解的是否嗯哼&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2888/web&quot;&gt;Teaching Python 第 31 集: 2024年学校中的 Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;TEACHINGPYTHON.FM &lt;/li&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“In this episode, Kelly and Sean discuss plausible trends in machine learning, artificial intelligence, augmented and virtual reality, and data science that we may see in schools by 2024. We focus on 5 areas from microscale in the classroom to macro across the entire educational system.”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;未来的教育中, Python 应该什么样?&lt;/p&gt;
&lt;p&gt;AI 将泛滥, 工具将更加丰富, 老师将更加无力, 学生自主行为必然得到越来越大的加强&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2881/web&quot;&gt;如何在 Python 中用 Asyncio 处理协程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ERIK MARSJA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn about coroutines in Python by example. More specifically, you’ll see how to handle coroutines using asyncio.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2883/web&quot;&gt;用 Python 思考递归&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON &lt;/li&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this course, you’ll learn how to work with recursion in your Python programs by mastering concepts such as recursive functions and recursive data structures.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Recursively&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2019-11-13-ScreenShot%202019-11-13%2011.15.36.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;递归...其实, 至今见过最精巧的 Recursively 都是在 LISP 生态中...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2897/web&quot;&gt;如何用 Pandas 在 Python 中读取 Stata 文件&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ERIK MARSJA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn how to read Stata (.dta) files in Python and how to write a Stata file to CSV and Excel files.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2891/web&quot;&gt;用 Flask 和 Vue.js 开发单页应用程序&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MICHAEL HERMAN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A step-by-step walkthrough of how to set up a basic CRUD app with Vue and Flask.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Flask 的热点关联一直很专业&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2902/web&quot;&gt;现代 Web 中的 Tornado 框架&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MANADOMA.COM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Exploring a Tornado use case in low memory environment.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tornado 严格意义上并不是框架, 而是基础组件,
当然, 也可以独立使用, 所以, 在小内存环境中很得趣...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2900/web&quot;&gt;在 Python 中管理许多 extras_require 依赖关系的更好实践&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;HAN XIAO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;叕一个模块依赖管理思路...
只是, 第三方没什么好说的, 一但定型都是固定的,
工程内部自制模块的管理才是困难点吧...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2894/web&quot;&gt;Python VS Common Lisp, 工作流和生态系统&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;LISP-JOURNEY.GITLAB.IO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;等等, 这有什么好比较的? 关注方向都相反的吧...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2896/web&quot;&gt;用 Python 解开 Quantum Supremacy 基准测试&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;M. SOHAIB ALAM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2908/web&quot;&gt;11 个新 Python Web 框架&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DEEPSOURCE.IO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一半都是5年以上老框架了,,,,而且多数都是专注 RESTful API 生成的, 
并不是通用 web 应用框架&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2886/web&quot;&gt;Laziness 和 Streams&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JEREMIAH MALINA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2884/web&quot;&gt;在 GCP 上用 Python 创建 Slack 应用&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WILL LARSON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2893/web&quot;&gt;用 stylecloud 生成时尚词云&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ABDUL MAJED&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;好物&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Interesting Projects, Tools and Libraries, Projects &amp;amp; Code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2906/web&quot;&gt;SeleniumBase: 用 Python 轻松进行 Web 自动化和测试&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/SELENIUMBASE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;SeleniumBase&quot; src=&quot;https://camo.githubusercontent.com/193f6a58d5b263f9977ff69e46bb8e0eb1d891b5/68747470733a2f2f63646e322e68756273706f742e6e65742f68756266732f3130303030362f696d616765732f6d795f66697273745f746573745f6769662e676966&quot; /&gt;&lt;/p&gt;
&lt;p&gt;首先, 还是得起一个完整的 浏览器哪...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2887/web&quot;&gt;flupy: Python 和您 Shell 间流畅数据管道&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/OLIRICE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;CLI 果然是最好的界面&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2904/web&quot;&gt;rele: 易于使用的 Google Pub/Sub&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/MERCADONA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;好是好, 可惜不存在哪..&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2907/web&quot;&gt;pythran: Python -&amp;gt; C++ 转换器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/SERGE-SANS-PAILLE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这真的稳定了, 那 C++ 老司机可就惨了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2895/web&quot;&gt;pytest-quarantine: 管理预期的失败测试&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/ENERGYSAGE &lt;/li&gt;
&lt;li&gt;• Shared by Brian Rutledge&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这就叫专注... pytest 的插件,专门管理一定失败的安全带.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pytest --quarantine
&lt;span class=&quot;o&quot;&gt;======&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; session &lt;span class=&quot;nv&quot;&gt;starts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;======&lt;/span&gt;
...
collected &lt;span class=&quot;m&quot;&gt;1380&lt;/span&gt; items
added mark.xfail to &lt;span class=&quot;m&quot;&gt;661&lt;/span&gt; of &lt;span class=&quot;m&quot;&gt;661&lt;/span&gt; items from quarantine.txt

...

&lt;span class=&quot;o&quot;&gt;======&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;719&lt;/span&gt; passed, &lt;span class=&quot;m&quot;&gt;661&lt;/span&gt; xfailed in &lt;span class=&quot;m&quot;&gt;300&lt;/span&gt;.51 &lt;span class=&quot;nv&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;======&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;)&lt;/p&gt;
&lt;h2&gt;📆🐍 活动/大会&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Events, MeetUp 真的是全球线下活动组织中心&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2875/web&quot;&gt;⋅ Python Atlanta&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;November 14, 2019&lt;/li&gt;
&lt;li&gt;USA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2877/web&quot;&gt;⋅ Karlsruhe Python User Group (KaPy)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;November 15, 2019&lt;/li&gt;
&lt;li&gt;德国&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2879/web&quot;&gt;⋅ Chattanooga Python User Group&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;November 15, 2019&lt;/li&gt;
&lt;li&gt;USA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2874/web&quot;&gt;⋅ BangPypers&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;November 16, 2019&lt;/li&gt;
&lt;li&gt;印度&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2876/web&quot;&gt;⋅ PyLadies Dublin&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;November 21, 2019&lt;/li&gt;
&lt;li&gt;爱尔兰&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;DAMA&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://py.101.camp/&quot;&gt;蟒营 Python 入门班&lt;/a&gt;&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;第4期&lt;/li&gt;
&lt;li&gt;101camp4py&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第4期已上线, 为期6周;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;191124&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;报名结束&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;191201&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;正式开课&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;200112&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;按时结束&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;是也乎&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;NN 3823&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/issue/issue-394.html&quot;&gt;Issue 394 ~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;改进: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/Issue/issue-394.md&quot;&gt;issue-394.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2019-11-19T16:44:02+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">pythonista-weekly : Pyw 422</title>
		<link href="http://weekly.pychina.org/python-weekly/pyw-422.html"/>
		<id>tag:weekly.pychina.org,2019-11-10:/python-weekly/pyw-422.html</id>
		<updated>2019-11-10T07:16:00+00:00</updated>
		<content type="html">&lt;h3&gt;欢迎阅读《pythonista周刊》第422期。Let us start!&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://mailchi.mp/pythonweekly/python-weekly-issue-422&quot;&gt;https://mailchi.mp/pythonweekly/python-weekly-issue-422&lt;/a&gt;&lt;br /&gt;
翻译：Dustyposa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;来自赞助商:&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;Datadog&lt;/code&gt; 监控你的python指标，日志，集群分析。使用&lt;code&gt;Datadog&lt;/code&gt;的应用分析，可以深入任何纬度并且能找到你所需要的信息，来进行动态诊断和快速故障排除。&lt;a href=&quot;https://www.datadoghq.com/dg/apm/ts-python-tracing/?utm_source=Advertisement&amp;utm_medium=Advertisement&amp;utm_campaign=PythonWeekly-Tshirt&quot;&gt;马上跟踪你的python应用吧！免费试用14天哦！&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;熟悉的面孔。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;新闻&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://pythonweekly.us2.list-manage.com/track/click?u=e2e180baf855ac797ef407fc7&amp;id=fea677de77&amp;e=57c131a127&quot;&gt;Python 采用 12 个月的发布周期&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Python 升级固定了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://pythonweekly.us2.list-manage.com/track/click?u=e2e180baf855ac797ef407fc7&amp;id=85e5cd4508&amp;e=57c131a127&quot;&gt;在银行Python 已经取代了 Excel&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;就是在某些银行，已经只用&lt;code&gt;Python&lt;/code&gt;来处理数据了！原因其实很简单，就是&lt;code&gt;Excel&lt;/code&gt;太慢了。。想想用&lt;code&gt;Excel&lt;/code&gt;处理大型文件，内心是绝望的！&lt;/p&gt;
&lt;p&gt;该来的还是会来的！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;文章、教程与话题&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=QppWTvh7_sI&quot;&gt;&quot;Writing a PEG parser for fun and profit&quot; - Guido van Rossum&lt;/a&gt;  &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;(42 min)&lt;/h4&gt;
&lt;p&gt;解析表达文法(PEGs) 是一种新的用来描述适合自动生成高效解析器的文法的形式。我对使用 基于PEG生成器的解析器来代理在&lt;code&gt;Cython&lt;/code&gt;中使用近30年的&quot;pgen&quot;解析生成器很有兴趣。这出现了一些有趣的问题。我还想出了一种可视化解析过程的简单方法，它有助于调试文法和解析机制，并且我将使用它去解释一般的&lt;code&gt;PEG&lt;/code&gt;解析过程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;龟叔依然很忙~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://blog.ganssle.io/articles/2019/11/utcnow.html&quot;&gt;不要使用 utcnow and utcfromtimestamp&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;关于&lt;code&gt;utcnow&lt;/code&gt;和&lt;code&gt;utcfromtimestamp&lt;/code&gt;的危险以及使用其替代品的好处的公共服务公告。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;utc 的坑，国际化的Application不易呀~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://t.co/zT2Lxr3Us1&quot;&gt;JWT 认证和 DjangoREST API&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;基于 Token  的身份认证允许服务器和前端（无论是网络、本地移动设备还是其他设备）分离，并归属于不同的域名。&lt;code&gt;JSON Web Tokens(JWT)&lt;/code&gt;是基于 token 的身份认证的一种常见实现方式，在这篇文章，我们将会用它在一个基于&lt;code&gt;Django REST&lt;/code&gt;框架的notes应用中的一个API进行用户认证。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;熟悉的实践篇章&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=XGf2GcyHPhc&quot;&gt;通过做5个游戏来学习 Python&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;（6h43min）&lt;/h4&gt;
&lt;p&gt;在这个面向初学者的完整教程中学习&lt;code&gt;Python&lt;/code&gt;。这个课程使用的是以项目为基础的方法。我们一共收集了5个很好的&lt;code&gt;Python&lt;/code&gt;游戏教程，所以你可以在构建5个游戏的同时学习&lt;code&gt;Python&lt;/code&gt;。你如果是实践学习者，这个课程非常适合你！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;寓教于乐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.dataquest.io/blog/python-range-tutorial/&quot;&gt;Python range 指南：学习使用这个很有用的内置函数&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在这篇详细的指南中，我们将通过几个栗子来带你了解&lt;code&gt;range&lt;/code&gt;函数的工作原理，并探讨它的局限及解决办法。&lt;code&gt;range&lt;/code&gt;对各种各样的&lt;code&gt;Python编程任务&lt;/code&gt;来说都是很有用的，该指南最后将介绍以&lt;code&gt;range函数&lt;/code&gt;在数据科学的应用的几个栗子。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;又一篇新手推荐~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://t.co/GiXdUiDQrm&quot;&gt;通过GitHub Actions，Poetry，Black和Pytest快速实现CI&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;为&lt;code&gt;Django&lt;/code&gt;项目设置&lt;code&gt;Github Actions&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;部署上线一条龙~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://stackabuse.com/understanding-opengl-through-python/&quot;&gt;通过 Python 理解 OpenGL&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;如何使用&lt;code&gt;Spectrograms和GANs&lt;/code&gt;将爵士乐转换成古典乐&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不知道 MIKU 的音乐能不能转~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.dataquest.io/blog/python-datetime-tutorial/&quot;&gt;Python Datetime 指南: 操作 Times, Dates 和 Time Spans&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在本数据科学教程中使用&lt;code&gt;datetime和calender&lt;/code&gt;模块成为成为&lt;code&gt;Python&lt;/code&gt;中的时间和日期的大师。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;希望能操作虫洞！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://beepb00p.xyz/mypy-error-handling.html&quot;&gt;Python: 超乎想象的 typed&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;mypy&lt;/code&gt;辅助错误处理，其他语言中的异常机制，模式匹配和类型差异的乐趣。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;何以解忧，唯有&lt;code&gt;mypy&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://snarky.ca/why-you-should-use-python-m-pip/&quot;&gt;为什么你应该使用 &lt;code&gt;python -m pip&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;该文章揭示了什么是&lt;code&gt;python -m pip&lt;/code&gt;和你为什么在运行&lt;code&gt;pip&lt;/code&gt;的时候应该使用它。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;环境比较重要&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.pyimagesearch.com/2019/11/04/traffic-sign-classification-with-keras-and-deep-learning/&quot;&gt;基于Keras和深度学习的交通标志分类&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在本片指南，你讲学习到如何训练你自己的交通标志分类器/识别器，使用&lt;code&gt;Keras和深度学习&lt;/code&gt;可以使其可以达到95%以上的准确率。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;哪里不认识训练哪里！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://blog.redash.io/how-we-spotted-and-fixed-a-performance-degradation-in-our-python-code/&quot;&gt;我们如何发现并修复Python代码中的性能下降&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;实践出真理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.theseattledataguy.com/healthcare-fraud-detection-with-python/&quot;&gt;用Python进行医疗保险欺诈检测&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;人心叵测～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://t.co/vbMM7hNrJG&quot;&gt;Python标准库中一些鲜为人知的地方&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;骚操作finding！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://blog.tensorflow.org/2019/11/hugging-face-state-of-art-natural.html&quot;&gt;Hugging Face: TensorFlow 2.0使用10行代码实现最先进的nlp处理&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;适合简单了解一下～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://julien.danjou.info/finding-definitions-from-a-source-file-and-a-line-number-in-python/&quot;&gt;在 Python 中通过源码和行号找到定义&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;文法分析，语法树～最近在看的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://switowski.com/blog/you-dont-have-to-migrate-to-python3&quot;&gt;你不需要迁移至 Python 3&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;所以我是升还是不升呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;有趣的项目、工具和库&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/deezer/spleeter&quot;&gt;Spleeter&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Spleeter&lt;/code&gt;是 &lt;code&gt;Deezer&lt;/code&gt;的源分离库，有用&lt;code&gt;Python&lt;/code&gt;使用&lt;code&gt;Tensorflow&lt;/code&gt;编写的预训练模型。让训练一个源分离模型（ 假设已经有了一个隔离源的数据集 ）变得容易。并且提供了已经训练好的用于执行各种分离风格的最新模型。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;音轨分离！佳作。&lt;/p&gt;
&lt;p&gt;内置3种分离模式。可以自由选择哦！&lt;/p&gt;
&lt;p&gt;听不出自己声音的我估计是没戏了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/weclaw1/inbac&quot;&gt;inbac&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;inbac&lt;/code&gt;是一款交互式批量裁剪器，用于快速裁剪图像。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;剪裁太慢？python来凑！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/allegroai/trains-agent&quot;&gt;trains-agent&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;它是一种零配置的“一劳永逸”执行代理，与trains-server结合使用可提供完整的AI集群解决方案。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AI服务也是需要Dev-ops的，为什么？因为都是集群了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/sethblack/python-gift-exchange&quot;&gt;python-gift-exchange&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Python礼物交换选择器&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个程序员被妻子逼迫的故事！&lt;/p&gt;
&lt;p&gt;没办法，为什么自己这么强呢？（不是我！！！！！！）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/viewflow/jsonfield-schema&quot;&gt;jsonfield-schema&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;将Django JSONField数据公开为虚拟模型字段&lt;/p&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/nickjj/flask-static-digest&quot;&gt;lask-static-digest&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Flask&lt;/code&gt;扩展，通过&lt;code&gt;md5标记和gzipping&lt;/code&gt;帮助你准备好生产的静态文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;静态一条龙
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/cvxgrp/cvxpylayers&quot;&gt;cvxpylayers&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;cvxpylayers是一个Python库，用于使用CVXPY在PyTorch和TensorFlow中构造可微凸优化层。&lt;/p&gt;
&lt;h2&gt;最近更新&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.python.org/downloads/release/python-359/&quot;&gt;Python 3.5.9&lt;/a&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.djangoproject.com/weblog/2019/nov/04/django-bugfix-releases-227-2114-11126/&quot;&gt;Django bugfix releases issued: 2.2.7, 2.1.14, and 1.11.26&lt;/a&gt;&lt;/h4&gt;
&lt;h2&gt;活动和网络研讨会日程&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/nycpython/events/265386351/&quot;&gt;CPython: from code to execution - New York&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;通过快速浏览cpython 3.9解释器源代码，我们将了解一些python代码如何从熟悉的人类可读语法到解释器产生字节码结果。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;编译原理之美&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/PyDataCharlotte/events/265952190/&quot;&gt;Effortless REST W/ Flask - Charlotte, NC&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;将有以下话题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;算法如何变得有偏见？&lt;/li&gt;
&lt;li&gt;Python Severless 话题：使用Zappa无基础架构的web应用程序&lt;/li&gt;
&lt;li&gt;Tensorflow 2.0 有什么新东西？&lt;/li&gt;
&lt;li&gt;Python中最好的AI包&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;种类依旧丰富～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/phillypug/events/265657211/&quot;&gt;Philadelphia Python Meetup November 2019 - Philadelphia, PA&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Twitter的Developer Advocate-Jessica Garson将向我们展示她如何使用Python解决她在纽约的停车问题&lt;/p&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/BoulderPython/events/vcmckryzpbqb/&quot;&gt;Boulder Python Meetup November 2019 - Boulder, CO&lt;/a&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/PyLadies-Toronto/events/265218106/&quot;&gt;PyLadies Totonto November Talk Night, Totonto ON&lt;/a&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/startupedmonton/events/dtflxjyzpbpb/&quot;&gt;Edmonton Python Meetup November 2019 - Edmonton, AB&lt;/a&gt;&lt;/h4&gt;
&lt;h2&gt;Posa：&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(Posa私人无责任播报)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://realpython.com/quizzes/python-data-types/viewer/&quot;&gt;测测你的python数据类型掌握了吗！&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;一个测试~哎，有点难，可以试试，8道题，3分钟差不多。是时候展现自己真正的实力了。&lt;/p&gt;
&lt;p&gt;----- 分割线 -----&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你发现哪里翻译有误的话，请务与我联系！感谢！
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/python-weekly/pyw-422.html&quot;&gt;pythonista-weekly~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;改进: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/python-weekly/issue#422.md&quot;&gt;issue-422.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2019-11-19T16:44:02+00:00</updated>
		</source>
	</entry>

</feed>
