<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">

	<title>Planet DebugUself</title>
	<link rel="self" href="http://planet.du.zoomquiet.us/atom.xml"/>
	<link href="http://planet.du.zoomquiet.us/"/>
	<id>http://planet.du.zoomquiet.us/atom.xml</id>
	<updated>2021-08-07T08:42:51+00:00</updated>
	<generator uri="http://www.planetplanet.org/">Planet/2.0 +http://www.planetplanet.org</generator>

	<entry>
		<title type="html">钩陈/ 温总的语速…</title>
		<link href="https://blog.zoomquiet.io/oldtouch-apisix-growupupup.html"/>
		<id>tag:blog.zoomquiet.io,2021-08-07:/oldtouch-apisix-growupupup.html</id>
		<updated>2021-08-07T08:32:53+00:00</updated>
		<content type="html">&lt;h2 id=&quot;apachecon21&quot;&gt;APACHECON21亚洲上的温总&lt;a class=&quot;headerlink&quot; href=&quot;https://blog.zoomquiet.io/feeds/all.atom.xml#apachecon21&quot; title=&quot;Permanent link&quot;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;旁听侧想&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://apachecon.com/acasia2021/zh/sessions/1099.html&quot;&gt;按照 Apache Way 运作开源商业化公司，这行得通吗？ - ApacheCon Asia 2021 - Powered by &lt;span class=&quot;caps&quot;&gt;ALC&lt;/span&gt;-Beijing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;weng&quot; src=&quot;https://ipic.zoomquiet.top/2021-08-07-apachecon-asia-2021-APISIX.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;感叹万千,&amp;nbsp;只说一点:&lt;/p&gt;
&lt;p&gt;温铭, 是18年创业成立支流公司后,&amp;nbsp;在朋友圈中的戏称;&lt;/p&gt;
&lt;p&gt;认识温总是08年,
当时他刚刚入职金山,
在俺主持的日常技术分享活动上相互认识,
也一起参与过早期 &lt;span class=&quot;caps&quot;&gt;ECUG&lt;/span&gt;/Erlang China User Group(10年后, 升级为 Effective China User Group)活动;
作为工程师,
温总那时给人的感觉就是羞涩,
对技术问题愿意花时间研究,&amp;nbsp;将每个问题彻底解决;&lt;/p&gt;
&lt;p&gt;在各种场景中, 发言, 也只愿意对技术问题给出想法,
而且语速很快, 哐哐哐的, 想在被对方打断前, 先将所有关键情况都说明;&amp;nbsp;标准的程序猿气质;&lt;/p&gt;
&lt;p&gt;后来去了360,
成立 OpenResty 基金会,
接收 &lt;code&gt;锤子&lt;/code&gt;发布会捐助,
主持 OpenResty 国际化,
甚至于裸辞加入 OpenResty&amp;nbsp;团队;&lt;/p&gt;
&lt;p&gt;在各自离开金山集团后, 但是, 技术发展方向和节奏完全不同了;
幸好都在珠海生活, 每年都有各种机会碰面,&amp;nbsp;比如:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;源创汇/珠海站&lt;/li&gt;
&lt;li&gt;金山春晩&lt;/li&gt;
&lt;li&gt;开源中国珠海老爸美食团&lt;/li&gt;
&lt;li&gt;&amp;#8230;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为都有了孩子,
各种群里讨论的慢慢也出现了技术之外话题,
见面时, 虽然羞涩还有,
但更加象礼貌式客气了,
发言时, 还是习惯张大眼睛认真倾听,
然后, 不再轻易发言, 听说比例接近 2:1,
语速回到正常人水平, 开始包含一丝倔强,
愿意为达成共识,&amp;nbsp;多说几轮;&lt;/p&gt;
&lt;p&gt;又过了几年, 深刻理解应用网关这个领域后;
毅然再次裸辞, 创立 &lt;span class=&quot;caps&quot;&gt;APISIX&lt;/span&gt; 团队,
直接从开源开始,
基于 OpenResty 技术, 打造好用的企业级应用网关;
当时真,什么也没有, 包含工资,
两位创始人, 完全以有限自信为基础开始,
幸好社区给力, 最快拿到 1000星, 最快进入 &lt;span class=&quot;caps&quot;&gt;APAPCHE&lt;/span&gt; 孵化器,
最快毕业, 并拿到企业大单;&amp;nbsp;前后不到18个月.&lt;/p&gt;
&lt;p&gt;再听到公开分享, 已经在 APACHEcon21亚洲大会上了,
语速, 进一步降低, 达到部委干部级别, 每分钟420字,
比 &lt;span class=&quot;caps&quot;&gt;CCTV&lt;/span&gt; 播音员慢了将近一倍;
这就给人感觉, 已经是位承担社区未来伟大的负责人,
任何时刻公开发言, 
都自觉深思熟虑, 不愿意一时冲动为社区承诺什么不应该的事儿;
想来在家,
也习惯这样,&amp;nbsp;只干活不讨论;&lt;/p&gt;
&lt;p&gt;未来, 温总 应该随着 &lt;span class=&quot;caps&quot;&gt;APISIX&lt;/span&gt; 的发展,
影响越来越多的公司和社区,&amp;nbsp;语速也必然进一步降低,&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;惜字如金&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;沉默以对&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;负重前行&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;目思且码&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;但行好事...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;caps&quot;&gt;NN&lt;/span&gt;&amp;nbsp;4463&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;好文笔,感叹号年度配额: &lt;strong&gt;2/3&lt;/strong&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;ZoomQuiet/&lt;strong&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/N5TuRRbF485D4Q90XdDA7g&quot;&gt;大妈&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;就是四处 &lt;code&gt;是也乎,(￣▽￣)&lt;/code&gt; 的那个&lt;a href=&quot;https://mp.weixin.qq.com/s/N5TuRRbF485D4Q90XdDA7g&quot;&gt;大妈&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;私自嗯哼&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZoomQuiet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZoomQuiet42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;公开课程&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;蟒营&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mainium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;全国大会&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyChina&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyChinaOrg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;本地社区&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;GDG珠海&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GDG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ZhuHai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TFUG珠海&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZH_TFUG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;历史吐糟&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Chaos42&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PythoniCamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;</content>
		<author>
			<name>ZoomQuiet</name>
			<uri>https://blog.zoomquiet.io/</uri>
		</author>
		<source>
			<title type="html">zoom.quiet</title>
			<link rel="self" href="https://blog.zoomquiet.io/feeds/all.atom.xml"/>
			<id>https://blog.zoomquiet.io/</id>
			<updated>2021-08-07T08:42:39+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">pythonista-weekly : Pyw 510</title>
		<link href="https://weekly.pychina.org/python-weekly/pyw-510.html"/>
		<id>tag:weekly.pychina.org,2021-07-30:/python-weekly/pyw-510.html</id>
		<updated>2021-08-04T00:48:17+00:00</updated>
		<content type="html">&lt;h3&gt;欢迎阅读《pythonista周刊》第510期。Let us start!&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://mailchi.mp/pythonweekly/python-weekly-issue-510&quot;&gt;https://mailchi.mp/pythonweekly/python-weekly-issue-510&lt;/a&gt;&lt;br /&gt;
翻译：Dustyposa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;来自赞助商（PS：原文的赞助商）:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://click.linksynergy.com/link?id=x9UsEHf2tls&amp;offerid=507388.2767168&amp;type=2&amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fpython3course%2F&quot;&gt;Complete Python 3 Ethical Hacking: Beginner To Advanced!&lt;/a&gt;
In This Complete Python 3 Ethical Hacking Course You Will Learn To Code 10+ Penetration Testing Tools From Scratch!&lt;/p&gt;
&lt;h3&gt;文章、教程与话题&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://simonwillison.net/2021/Jul/28/baked-data/&quot;&gt;The Baked Data architectural pattern&lt;/a&gt;
&lt;code&gt;Baked Data&lt;/code&gt; 模式对于静态网站生成器来说有很多优点，并且可以避免大多数的限制。用 &lt;code&gt;Baked Data&lt;/code&gt; ，数据就是应用被部署时的一部分。任何时候内容改变，一个新的站点包括内容的更新就会被部署上。非常适合于以内容为导向的站点，每天内容都会更新几次内容。比如博客，文档网站，项目网站-任何内容又一小部分作者编辑的地方。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=CPViCzK7CUo&quot;&gt;Moment of Inertia For ANY 3D Object In Python&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://mcusercontent.com/e2e180baf855ac797ef407fc7/images/af76283a-6e65-436c-967a-900427cf6399.png&quot; /&gt;
学习如何用两种不同的方式找到 &lt;code&gt;3D&lt;/code&gt; 对象转动惯量。第一种技术从数学上定一个 &lt;code&gt;3D&lt;/code&gt; 对象，并且通过评估积分来获得转动惯量的张量。第二种技术通过加载一般的 &lt;code&gt;3D&lt;/code&gt; 物体的坐标来评估张量。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.co/EfZyeAsUy9&quot;&gt;A Natural Language Processing (NLP) Primer&lt;/a&gt;
使用 &lt;code&gt;Python&lt;/code&gt; 的常见 &lt;code&gt;NLP&lt;/code&gt; 任务概述。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://openai.com/blog/triton/&quot;&gt;介绍 Triton: 用于神经网络的开源 GPU 编程&lt;/a&gt;
&lt;code&gt;Triton&lt;/code&gt; 是一个开源的像 &lt;code&gt;Python&lt;/code&gt; 的编程语言，让没有 &lt;code&gt;CUDA&lt;/code&gt; 经验的研究人员编写高效的 &lt;code&gt;GPU&lt;/code&gt; 代码——大多数情况下和专家能够编写的代码达到同样的水平。&lt;code&gt;Triton&lt;/code&gt; 能够轻松的充分使用硬件的性能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pythonspeed.com/articles/pandas-string-dtype-memory/&quot;&gt;用 Pandas 1.3 的 new string dtype来节省内存&lt;/a&gt;
在 &lt;code&gt;Pandas 1.3&lt;/code&gt; 中，有一个新的选项可以在大量的字符串上也节省内存，只需要简单的改变成一个新的 &lt;code&gt;column&lt;/code&gt; 类型。让我们看看如何做到。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.co/uqQj60VeHG&quot;&gt;Python’s Operator Module 中不为人知的特性&lt;/a&gt;
在 &lt;code&gt;Python&lt;/code&gt; 不太常见的的 &lt;code&gt;operator&lt;/code&gt; 模块的帮助下，使你的代码更快、更简洁、更易读、更实用。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/prajwollamichhane11/PDF-Handling-With-Python&quot;&gt;Python PDF 处理指南&lt;/a&gt;
在这个教程中，学习用 &lt;code&gt;Python&lt;/code&gt; 在 &lt;code&gt;PDF&lt;/code&gt; 上的各种各样的操作，例如: 提取以及添加页面，文本，图片，表格，水印以及其他。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://auth0.com/blog/how-to-make-a-twitter-bot-in-python-using-tweepy/&quot;&gt;如何用 Python 和 Tweepy 制作一个Twitter Bot&lt;/a&gt;
一个 &lt;code&gt;reply-to-mention Twitter bot&lt;/code&gt; 可以在被用关键词 &lt;code&gt;mentioned&lt;/code&gt; 的情况下用自动生成的图片回复每条 &lt;code&gt;tweet&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=QCSz0j8tGmI&quot;&gt;Python's Import System&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://mcusercontent.com/e2e180baf855ac797ef407fc7/images/af76283a-6e65-436c-967a-900427cf6399.png&quot; /&gt;
这个视频展示了 &lt;code&gt;Python import&lt;/code&gt; 系统（&lt;code&gt;import protocol&lt;/code&gt;） 的细节，涉及 &lt;code&gt;models&lt;/code&gt; 和 &lt;code&gt;packages&lt;/code&gt; （常规以及命名空间 &lt;code&gt;packages&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.assemblyai.com/blog/the-definitive-guide-to-python-click&quot;&gt;Building CLIs in Python with Click&lt;/a&gt; 
在这篇指南中，你将学习如何创建你自己的可以传递上下文命令行界面，命令可以接受必传参数和可选参数，以及嵌套命令。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.co/IUbKU4ipxQ&quot;&gt;Demystifying boto3&lt;/a&gt;
How to Use Any AWS Service with Python.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.vinta.com.br/blog/2021/testing-the-diff/&quot;&gt;Testing the diff&lt;/a&gt;
好的单元测试是以最小的范围为重点，并尽可能地将功能与外部干扰隔离。在这篇文章中，我们展示了一个看似无害的测试是如何被误导的，并没有真正捕捉到你所期望的。然后我们展示如何通过 &quot;测试差异 &quot;来改进它。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.dataquest.io/blog/comical-data-visualization-in-python-using-matplotlib/&quot;&gt;Comical Data Visualization in Python Using Matplotlib&lt;/a&gt;
如何在 &lt;code&gt;Matplotlib&lt;/code&gt; 中进行好玩的可视化？使用 &lt;code&gt;Netflix&lt;/code&gt; 电影和电视节目数据集进行解释。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pganalyze.com/blog/pagination-django-postgres&quot;&gt;Django and Postgres 高效的分页&lt;/a&gt;
本文将帮助你了解 &lt;code&gt;Django&lt;/code&gt; 的分页限制，并提供三种替代方法来提高你的应用程序的性能。在此过程中，你会看到每种方法的权衡和使用情况，这样你就可以决定哪种方法最适合你的应用程序&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.anddt.com/post/streamlit-git-viz/&quot;&gt;Playing around with streamlit dashboards&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://labs.quansight.org/blog/2021/07/moving-scipy-to-meson/&quot;&gt;Moving SciPy to the Meson build system&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://webautomation.io/blog/how-to-create-price-comparison-tool-with-beautiful-soup/&quot;&gt;How to Create a Price Comparison Tool With Python BeautifulSoup&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;书籍&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Day-Code-Python-Illustrated-Beginners/dp/1735907944&quot;&gt;A Day in Code- Python&lt;/a&gt;
快速学习 &lt;code&gt;Python&lt;/code&gt; 基础知识--同时欣赏一本精美的图画书!&lt;/p&gt;
&lt;h3&gt;有趣的项目、工具和库&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/kahst/BirdNET&quot;&gt;BirdNET&lt;/a&gt;
通过声音辨别鸟类的最简单方法。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://cudatext.github.io/&quot;&gt;CudaText&lt;/a&gt; 
一个跨平台的文本编辑器。它的启动速度相当快：约0.3秒，有约30个插件，在 &lt;code&gt;Linux&lt;/code&gt; 的C &lt;code&gt;PU Intel Core i3 3GHz&lt;/code&gt;上。它可以通过 &lt;code&gt;Python&lt;/code&gt; 插件进行扩展：插件、翻译器、代码树分析器、外部工具。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/deep5050/radio-active&quot;&gt;radio-active&lt;/a&gt;
从你的终端播放超过 &lt;code&gt;30K&lt;/code&gt; 的电台。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/project-codeflare/codeflare&quot;&gt;CodeFlare&lt;/a&gt; 
&lt;code&gt;CodeFlare&lt;/code&gt; 是一个框架，用于简化云上复杂的多步骤分析和机器学习管道的整合、扩展和加速。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jorisschellekens/borb&quot;&gt;borb&lt;/a&gt;
&lt;code&gt;borb&lt;/code&gt; 是一个在 &lt;code&gt;python&lt;/code&gt; 中读取、创建和操作 &lt;code&gt;PDF&lt;/code&gt; 文件的库。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/gmso/recipys&quot;&gt;recipys&lt;/a&gt;
通过这个 &lt;code&gt;CLI&lt;/code&gt; 工具即时获得食谱。选择特定的饭菜或原料，以满足你的胃口!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/tobymao/sqlglot&quot;&gt;SQLGlot&lt;/a&gt;
Python SQL Parser and Transpiler.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/nadermx/backgroundremover&quot;&gt;backgroundremover&lt;/a&gt;
用一个简单的命令行界面从视频和图像中去除背景。&lt;/p&gt;
&lt;h3&gt;活动&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.pyohio.org/2021/&quot;&gt;Virtual: PyOhio 2021&lt;/a&gt;
它是免费参加的，欢迎任何对 &lt;code&gt;Python&lt;/code&gt; 有兴趣的人参加。内容从初级到高级不等，旨在与所有类型的 &lt;code&gt;Python&lt;/code&gt; 用户相关：学生、软件专业人员、科学家、业余爱好者，以及任何想要学习更多知识的人。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/PyData-Edinburgh/events/279576429/&quot;&gt;Virtual: PyData Edinburgh July 2021&lt;/a&gt;
将有一个讲座，机器学习及其对改善癫痫诊断的潜力。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/dfwpython/events/zjnlcsycclbhb/&quot;&gt;Virtual: DFW Pythoneers July 2021&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Posa：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(Posa私人无责任播报)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;----- 分割线 -----&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你发现哪里翻译有误的话，请务与我联系！感谢！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/python-weekly/pyw-510.html&quot;&gt;pythonista-weekly~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;改进: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/python-weekly/issue%23510.md&quot;&gt;issue-510.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>https://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="https://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>https://weekly.pychina.org/</id>
			<updated>2021-08-04T08:43:10+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Issue 484</title>
		<link href="https://weekly.pychina.org/issue/issue-484.html"/>
		<id>tag:weekly.pychina.org,2021-08-04:/issue/issue-484.html</id>
		<updated>2021-08-04T00:48:01+00:00</updated>
		<content type="html">&lt;blockquote&gt;
&lt;p&gt;Twisted 21.7.0 发布&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://pycoders.com/issues/484&quot;&gt;PyCoder's Weekly - Issue #484&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;pycoder&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-06-03-pycoder-s-weekly.png&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;210804 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 42 分钟 完成快译&lt;/li&gt;
&lt;li&gt;210804 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 37 分钟 完成格式转抄.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6802/web&quot;&gt;Python 和 REST APIs: 与Web服务交互&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial, you’ll learn how to use Python to communicate with REST APIs. You’ll learn about REST architecture and how to use the requests library to get data from a REST API. You’ll also explore different Python tools you can use to build REST APIs.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;REST&quot; src=&quot;https://ipic.zoomquiet.top/2021-08-04-ScreenShot%202021-08-04%2008.36.20.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;现代西方, 所有场景中,
不出现黑人就不政治正确,
黄色人种嘛背景中有就好...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6787/web&quot;&gt;Launchpad 现, 跑在 Python 3 上&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;COLIN WATSON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 2 was sunsetted over a year ago, but many folks still find themselves maintaining large Python 2 codebases. The Launchpad team recently finished porting their entire codebase to Python 3, and this article reflects on that process, discusses some of the difficulties they encountered, regressions that occurred, and provides a number of lessons they learned throughout the process. If you are in a position of porting a Python 2 codebase to Python 3, definitely check this out.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不易哪, 好象 PyPI 至今还在 Py2 上跑着呢?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6786/web&quot;&gt;PEP 665: 为Python项目指定安装要求&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PYTHON.ORG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There’s a new PEP in town, and this one deals with improving how installation requirements are specified in Python projects. The PEP is still in Draft status.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;30年后, Python 终于开始为项目部署时考虑了..
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6782/web&quot;&gt;Twisted 21.7.0 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;TWISTEDMATRIX.COM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ರ_ರ_&lt;/code&gt; 上古神器, 继续更新ing...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6794/web&quot;&gt;Django Bugfix : 3.2.6 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;DJANGO SOFTWARE FOUNDATION&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;探讨/吐糟&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Discussions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6801/web&quot;&gt;Do Coders 如何从文档中使用整个库?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REDDIT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How do you learn a new library? Do you start with the docs? What do you do if the documentation is lacking? Or do you first search for video lessons or written tutorials?&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;作人呢就是为了开心,
不开心时, 多读读文档就能更加不开心了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;文章/教程/嗯哼&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Articles, Tutorials and Talks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6777/web&quot;&gt;Python’s ChainMap: 有效地管理多个上下文&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this step-by-step tutorial, you’ll learn about Python’s ChainMap and how to use it to group multiple dictionaries together and manage them as a single one. ChainMap is handy when you need to manage multiple scopes and contexts and define access priorities.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;ChainMap&quot; src=&quot;https://ipic.zoomquiet.top/2021-08-04-ScreenShot%202021-08-04%2008.33.10.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6800/web&quot;&gt;用 Python＆Django 处理每秒 100 个请求&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;DAVID FISCHER&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The folks over at Ethical Ads recently broke their ads out of the codebase for Read the Docs, where it had been served from a Django app as part of the Read the Docs code line up until 2019. They decided to use Python and Django for their application since the team already knew that stack well. This article compares the performance of hosting services and explains how they stress-tested their application to ensure the best performance at the right cost.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在 100KC 时代,
Python 从 100C 重新开始?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6789/web&quot;&gt;对你的 Python 代码开始动用调试器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON &lt;/li&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Are you still sprinkling print statements throughout your code while writing it? Print statements are often clunky and offer only a limited view of the state of your code. Have you thought there must be a better way? This week on the Real Python Podcase, Nina Zakharenko discusses her conference talk titled “Goodbye Print, Hello Debugger.”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;叕来推荐 Debugger 了,
不过, print 警车依然好用.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;print&quot; src=&quot;https://ipic.zoomquiet.top/2021-08-04-ScreenShot%202021-08-04%2008.32.19.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6784/web&quot;&gt;Replit.web: 内置数据库和Auth支持的Python框架&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;SPENCER POGORZELSKI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The folks over at replit have released a new Python web framework with built-in authentication and database support and, more interestingly, hosting. In a few lines of code, you can have a Python web app connected to a database, authenticating users, and hosted on replit. This could be a great tool for quickly building and hosting prototypes or experimental projects.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;看起来就是对自己  &lt;a href=&quot;https://docs.replit.com/hosting/database-faq&quot;&gt;Repl DB&lt;/a&gt;
的广告模块...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6783/web&quot;&gt;用 Raspberry Pis 和 Prometheus 监控家中温度和湿度&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;CHRIS COLLINS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Do you enjoy collecting and analyzing data, or are you looking for a fun project to improve your data skills? Do you also enjoy tinkering with hardware? Then this project might be a fun one for you to check out! Learn how to set up a RaspberryPi using Prometheus to collect and monitor temperature sensor data.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;等等, 那个 Prometheus ?
大炮打蚊子?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6796/web&quot;&gt;使用 sleep() 来编排 Python 正常运行机组&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON &lt;/li&gt;
&lt;li&gt;course&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn how to add time delays to your Python programs. You’ll use the built-in time module to add Python sleep() calls to your code. To practice, you’ll use time.sleep() when making an uptime bot that checks whether a website is still live.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;sleep&quot; src=&quot;https://ipic.zoomquiet.top/2021-08-04-ScreenShot%202021-08-04%2008.27.54.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6781/web&quot;&gt;如何在 5分钟内停止 Django 应用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MATTHEW FREIRE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This short yet informative tutorial explains how to Dockerize a Django application. The tutorial clocks in at less than a 10 minute read, but still finds time to explain why you should consider using Docker in your Django projects.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;继续努力到 5秒, 才有吸引力...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;好物/妙品/...&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Interesting Projects, Tools and Libraries, Projects &amp;amp; Code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6788/web&quot;&gt;prometheus: Prometheus 监控系统和时间序列数据库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/PROMETHEUS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;NoSQL 之后, NEWSQL 基本都是要:
支持 SQL 以及最好时序优先...&lt;/p&gt;
&lt;p&gt;毕竟应对越来越复杂的数据之海,
只有时序是唯一不变的了...&lt;/p&gt;
&lt;p&gt;等等,时间 也是相对的哪,
人类从现在开始就自学建筑&lt;strong&gt;地球时间轴霸权&lt;/strong&gt;了?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6792/web&quot;&gt;BirdNET: Soundscape 分析与 BirdNET&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/KAHST&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6791/web&quot;&gt;python-launcher: Python Launcher for Unix&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/BRETTCANNON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cargo install python-launcher&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;嗯哼? Rust 软件仓库可以拿来干这种事儿?&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;可怜的 path 寻找..&quot; src=&quot;https://ipic.zoomquiet.top/2021-08-04-ScreenShot%202021-08-04%2008.25.07.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;这个终端效果很丰富了...&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;zsh&quot; src=&quot;https://ipic.zoomquiet.top/2021-08-04-ScreenShot%202021-08-04%2008.25.46.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6776/web&quot;&gt;connector-x: 将DB数据从加载到Rust和Python中的DataFrame/最快的库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/SFU-DB&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;以往嘦load 到 Python 就足够时尚,
后来最好同时 load 到 golang,
现在必须同时 load 到 rust 才 COOL;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;📆🐍 活动/大会&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Events, MeetUp 真的是全球线下活动组织中心&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6798/web&quot;&gt;⋅ Real Python Office Hours (Virtual)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;August 4, 2021&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6052/web&quot;&gt;⋅ PyCon India 2021&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;September 17 – 20, 2021&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;DAMA&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gruns/icecream&quot;&gt;gruns/icecream: 🍦 Never use print() to debug again.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;github&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;独创 logging + debug 模块&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://space.bilibili.com/272001170/&quot;&gt;沈崴的个人空间 -  ( ゜- ゜)つロ 乾杯~ Bilibili&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;哔哩哔哩&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;老司机开新坑, 时隔10年,
沈游侠再次开声, 值得关注:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Bilibili&quot; src=&quot;httpstp://ydlj.zoomquiet.top/ipic/2021-01-06-ScreenShot%202021-01-06%2010.14.10.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.101.camp/ts/190130-jump-into-ssl/&quot;&gt;如何持证 (SSL) 开车 — 蟒营™ 怂怼录&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;UPYUN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;私人初体验,
现在 http/https 资源混用浏览器越来越傲娇了,
最好有工具可以统一迁移...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;PS:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/issue/issue-484.html&quot;&gt;Issue 484 ~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;修订: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/Issue/issue-484.md&quot;&gt;issue-484.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;好文笔,感叹号年度配额: &lt;strong&gt;2/3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;投稿/反馈邮箱:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;askdama@googlegroups.com&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(邮件列表地址, 
当成正常邮件发送邮件就好, 不用注册, 不用翻越...)&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;ZoomQuiet/&lt;strong&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/N5TuRRbF485D4Q90XdDA7g&quot;&gt;大妈&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;就是四处 &lt;code&gt;是也乎,(￣▽￣)&lt;/code&gt; 的那个&lt;a href=&quot;https://mp.weixin.qq.com/s/N5TuRRbF485D4Q90XdDA7g&quot;&gt;大妈&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;私自嗯哼&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZoomQuiet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZoomQuiet42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;公开课程&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;蟒营&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mainium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;历史吐糟&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Chaos42&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PythoniCamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;创始组织者&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PyChina&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyChinaOrg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;本地社区&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;GDG珠海&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GDG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ZhuHai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TFUG珠海&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZH_TFUG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>https://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="https://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>https://weekly.pychina.org/</id>
			<updated>2021-08-04T08:43:10+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">呢喃s/ 20.4</title>
		<link href="https://blog.zoomquiet.io/200401-ZoomQuiet-MurMur-collection.html"/>
		<id>tag:blog.zoomquiet.io,2020-04-01:/200401-ZoomQuiet-MurMur-collection.html</id>
		<updated>2021-07-30T08:56:16+00:00</updated>
		<content type="html">&lt;h2 id=&quot;at-20204&quot;&gt;呢喃 at 2020.4&lt;a class=&quot;headerlink&quot; href=&quot;https://blog.zoomquiet.io/feeds/all.atom.xml#at-20204&quot; title=&quot;Permanent link&quot;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;不为什么,&amp;nbsp;就这么开始了日历卡连载&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt=&quot;200401&quot; src=&quot;https://ipic.zoomquiet.top/2021-07-25-zq42-today-card-2004.001.jpeg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;200402&quot; src=&quot;https://ipic.zoomquiet.top/2021-07-25-zq42-today-card-2004.002.jpeg&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;呢喃/ &lt;span class=&quot;caps&quot;&gt;NN&lt;/span&gt;&amp;nbsp;3971&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不查不知道, 今天是&amp;#8217;国际儿童图书日&amp;#8217;;
可小时候真没什么值得看的, 就记住了童话大王单人构筑出来的故事体系;
工作后有机会补课, 才发现国外有儿童图书门类以及对应艺术家群体;
不过, 怎么看都无法对抗日本漫画构造的万画世界.&amp;nbsp;儿童其实并不特殊和俺们一样.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;200403&quot; src=&quot;https://ipic.zoomquiet.top/2021-07-25-zq42-today-card-2004.003.jpeg&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;呢喃/ &lt;span class=&quot;caps&quot;&gt;NN&lt;/span&gt;&amp;nbsp;3972&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&quot;caps&quot;&gt;COVID&lt;/span&gt;-19 不可逆转的改变了整个人类社会结构;
而当年马歇尔计划则是以一国之力改变了人类社会整体结构;
差别在于, 一个只用了不到半年, 另外则用了整整20年;
正如很多SiFi中描述的,
人类不过是盖亚皮屑里的微虫,&amp;nbsp;拼力折腾能叮痒地球,后果Orz&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;200404&quot; src=&quot;https://ipic.zoomquiet.top/2021-07-25-zq42-today-card-2004.004.jpeg&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;呢喃/ &lt;span class=&quot;caps&quot;&gt;NN&lt;/span&gt;&amp;nbsp;3973&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;清明时节雨纷纷&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;路上行人谷断魂&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这两句从未如此应景; 
为表达全国各族人民
对抗击新冠肺炎疫情斗争牺牲烈士和逝世同胞的深切哀悼,&amp;nbsp;今天决定举行全国哀悼活动; &lt;/p&gt;
&lt;p&gt;最应该哀悼的, 是人类用了5千年才形成的全球化,
却瞬间断裂成孤岛式关系,&amp;nbsp;那么&amp;#8230;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;200405&quot; src=&quot;https://ipic.zoomquiet.top/2021-07-25-zq42-today-card-2004.005.jpeg&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;呢喃/ &lt;span class=&quot;caps&quot;&gt;NN&lt;/span&gt;&amp;nbsp;3974&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;鸟山明, 以一己之力改变&amp;#8217;孙悟空&amp;#8217;这一概念内涵的大师.
不过, 俺更加喜欢阿拉蕾, 企鹅岛上的故事虽然无厘头, 但是, 比永远无尽升级打怪的 七龙珠 要来的放松和有趣;
就这个有趣, 为鸟山明每年带来超过50亿日元的收入, 这在中国是无法想象的.&amp;nbsp;为什么?&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;200406&quot; src=&quot;https://ipic.zoomquiet.top/2021-07-25-zq42-today-card-2004.006.jpeg&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;呢喃/ &lt;span class=&quot;caps&quot;&gt;NN&lt;/span&gt;&amp;nbsp;3975&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Asimov 并非最喜爱的 SiFi 作家, 却是最敬佩的.
坚持每天写作一定数量文字, 半个世纪从未间断, 这真的是神级自律.
仅仅基于私人想象, 就为人类拓展出很多无法回避的前沿.
机器人学三定律/心理史学/&amp;#8230;
是 &lt;span class=&quot;caps&quot;&gt;AI&lt;/span&gt;&amp;nbsp;伦理学奠基人.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;大哉问不休&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt=&quot;200407&quot; src=&quot;https://ipic.zoomquiet.top/2021-07-25-zq42-today-card-2004.007.jpeg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;200408&quot; src=&quot;https://ipic.zoomquiet.top/2021-07-25-zq42-today-card-2004.008.jpeg&quot; /&gt;&lt;/p&gt;</content>
		<author>
			<name>ZoomQuiet</name>
			<uri>https://blog.zoomquiet.io/</uri>
		</author>
		<source>
			<title type="html">zoom.quiet</title>
			<link rel="self" href="https://blog.zoomquiet.io/feeds/all.atom.xml"/>
			<id>https://blog.zoomquiet.io/</id>
			<updated>2021-08-07T08:42:39+00:00</updated>
		</source>
	</entry>

</feed>
