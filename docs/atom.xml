<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">

	<title>Planet DebugUself</title>
	<link rel="self" href="http://planet.du.zoomquiet.us/atom.xml"/>
	<link href="http://planet.du.zoomquiet.us/"/>
	<id>http://planet.du.zoomquiet.us/atom.xml</id>
	<updated>2020-04-18T08:42:48+00:00</updated>
	<generator uri="http://www.planetplanet.org/">Planet/2.0 +http://www.planetplanet.org</generator>

	<entry>
		<title type="html">My Struggle - 我的自怼周报 2020 14-15-16w</title>
		<link href="https://bemself.github.io/%E5%BF%83%E8%B7%AF,%E5%91%A8%E6%8A%A5/DM-Weekly-141516w.html"/>
		<id>https://bemself.github.io/%E5%BF%83%E8%B7%AF,%E5%91%A8%E6%8A%A5/DM-Weekly-141516w.html</id>
		<updated>2020-04-18T08:42:48+00:00</updated>
		<content type="html">周结第 14-15-16 周, 荒废了几周, 先凌乱的记一下</content>
		<author>
			<name>My Struggle</name>
			<email>doituself@outlook.com</email>
			<uri>https://bemself.github.io</uri>
		</author>
		<source>
			<title type="html">My Struggle</title>
			<subtitle type="html">This is RSS feed for my website</subtitle>
			<link rel="self" href="https://bemself.github.io/rss.xml"/>
			<id>https://bemself.github.io/rss.xml</id>
			<updated>2020-04-18T08:42:48+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Issue 416</title>
		<link href="http://weekly.pychina.org/issue/issue-416.html"/>
		<id>tag:weekly.pychina.org,2020-04-15:/issue/issue-416.html</id>
		<updated>2020-04-15T06:42:00+00:00</updated>
		<content type="html">&lt;blockquote&gt;
&lt;p&gt;嫑再将你 Python 模块命名为 utils&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://pycoders.com/issues/416&quot;&gt;PyCoder's Weekly - Issue #416&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;PyCoder&quot; src=&quot;https://cdn.pycoders.com/37bdf31dc645f968ffb90196e5d38ff5&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;200415 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 42 分钟 完成快译&lt;/li&gt;
&lt;li&gt;200415 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 37 分钟 完成格式转抄.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3932/web&quot;&gt;用 Python 和 OpenCV 开源工具实现虚拟背景&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;BENJAMIN ELDER&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With so much of the world stuck at home thanks to the COVID-19 pandemic, more and more workplaces are using video conferencing solutions—such as Zoom—to bring work to your living room. Or kitchen. Or bedroom. Or bathroom. OK… hopefully not that last one! Why not spice up your video conferencing with some awesome, homemade virtual backgrounds built with Python and OpenCV?&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用一个简单例子来描述, 开源世界机械视觉最常见的应用...&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-15-ScreenShot%202020-04-15%2012.56.19.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3955/web&quot;&gt;继承与组成: Python OOP指南&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON &lt;/li&gt;
&lt;li&gt;course&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn about inheritance and composition in Python. You’ll improve your object-oriented programming (OOP) skills by understanding how to use inheritance and composition and how to leverage them in their design.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;OOP&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-15-ScreenShot%202020-04-15%2012.53.55.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;很多 OOP 概念都是在特殊场景中才感觉舒服的...
但是,我们学习使用却反过来, 先尝试理解各种模型,
再去撞场景...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3919/web&quot;&gt;嫑再将你 Python 模块命名为 utils&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;SEBASTIAN BUCZYŃSKI &lt;/li&gt;
&lt;li&gt;opinion&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“Do not use utils as a name for your Python module neither put it into a class name. Try to be more specific about the role of code – e.g. create a place for validators, services or factories. If the role criterion doesn’t help and you really dealing with utils, try grouping code by its theme.”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;utils 已经变成垃圾箱了...
最好给出真正有意义的模块名&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3918/web&quot;&gt;从分块到并行: 借助 Dask 加速 Pandas&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ITAMAR TURNER-TRAURING&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In a recent article, Itamar Turner-Trauring discussed how to read large datasets with Pandas using a chunking technique to reduce memory overhead. Chunking has another advantage: it enables parallelism, which can dramatically speed up processing time. Learn why and how to enable parallelism for your Pandas processing code using the Dask library.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3926/web&quot;&gt;数据科学: 现实不符合预期&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;DAN FRIEDMAN &lt;/li&gt;
&lt;li&gt;opinion&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“Seven common ways a data science role may not meet your expectations through tens of data scientist interviews and anecdotes from popular media.” Also see the related discussion on Hacker News&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3945/web&quot;&gt;如何在 pytest 中为 Django 模型提供测试装置&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this step-by-step tutorial, you’ll learn how to use fixtures to simplify your testing in pytest. If you use Django, pytest fixtures can help you write tests that are painless to update and maintain even as you make changes to your models.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3961/web&quot;&gt;PyPy 7.3.1 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PYPY BLOG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;讨论&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Discussions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3914/web&quot;&gt;可以从不等长的生成器中检索 zip() 的静默消元吗? &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;STACK OVERFLOW&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you pass two generators to zip(), then the iterator returned by zip() stops whenever the shorter of the two generators runs out of values. If the generator passed to zip() in the first position is larger than the second, then there is an “extra” value consumed from the larger generator. Why does this happen, and is it possible to retrieve the extra value consumed by zip()?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3959/web&quot;&gt;如何简化重复的 if / elif ?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;STACK OVERFLOW&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Comparing a single value against a number of conditions can result in long if/elif blocks. Is there a short and clean way to handle these comparisons?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3920/web&quot;&gt;多个 pytest 维护者离开 pytest&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REDDIT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;因为终于有资金注入了?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2&gt;文章,教程和嗯哼&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Articles, Tutorials and Talks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3952/web&quot;&gt;CuPy 在 UPU 上加速 NumPy ? 嗯哼? 竟然得 Clojure!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;DRAGAN DJURIC&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NumPy is fast, but it doesn’t play well with GPUs. For that, you can use CuPy, a drop-in NumPy replacement for GPUs developed by Nvidia. Now, what if I told you to crunch those numbers in Clojure on a GPU instead? Surely a language that compiles to Java couldn’t beat C++ optimized for CUDA, could it? Dragan Djuric, author of Numerical Linear Algebra for Programmers compares CuPy and Clojure on a GPU, with some surprising results.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;见到 Clojure 很惊讶嘛?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3931/web&quot;&gt;在 Python 中测试 S3 的3种方法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;SANJAY SIDDHANTI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Testing an application’s interaction with a third-party service can be difficult and frustrating. But sometimes a lot of business logic is wrapped up in those interactions, so testing them is important for building trust in the application. This article compares and contrasts three options for testing Amazon S3 integration using the pytest framework.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;弄S3 三法宝:
moto/boto3/Localstack&lt;/p&gt;
&lt;p&gt;其实, 还是官方给的 SDK 放心哪&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3937/web&quot;&gt;用 textX 基于 Python 快速构建领域特殊语言(DSL)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;FEDERICO TOMASSETTI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Domain-specific languages (DSL) bring the power of high-level programming to domain experts (read: non-programmers). In this article, Federico Tomassetti walks you through the process of creating a DSL with the textX Python library. As a bonus, you’ll also learn how to create syntax highlighting extension for VS Code that understands your language.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;VSCode 也纳入了自己的生态圈,
非常聪明了.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3934/web&quot;&gt;用 Python 可视化决策树&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MICHAEL GALARNYK &lt;/li&gt;
&lt;li&gt;• Shared by Michael Galarnyk&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“Decision trees are a popular supervised learning method for a variety of reasons. Benefits of decision trees include that they can be used for both regression and classification, they don’t require feature scaling, and they are relatively easy to interpret as you can visualize decision trees. This is not only a powerful way to understand your model, but also to communicate how your model works. Consequently, it would help to know how to make a visualization based on your model.”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3960/web&quot;&gt;John Conway, 生命游戏的发明者, 死于COVID-19&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ARSTECHNICA.COM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;John Horton Conway was one of the most influential mathematicians of the 20th and 21st centuries. His “Game of Life” spawned countless implementation—nearly becoming a rite of passage for programmers in any language. Sadly, the world lost this brilliant mind on April 11 due to complications from COVID-19. Renowned mathematician Terry Tao has also published a memoir in honor of John Conway on his blog.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;大家都知道了, 生命游戏创始人, 可人家真的不是电子游戏...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3916/web&quot;&gt;用 Python 建模股票投资组合&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MATT GRIERSON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After reading an article about comparing a stock portfolio to the S&amp;amp;P 500, Matt Grierson wanted to go deeper and model a portfolio’s performance by analyzing buys and sells from a CSV file and calculating the rate of return relative to an index across any specified timeframe. This turned out to be more involved than Matt first thought it would be! Fortunately, Matt decided to share his experience—and his solution.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3944/web&quot;&gt;操纵 Python AST 的历险记&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GEORGE HO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;George Ho proposed a change to PyMC4’s model specification API that he thought would help make the user experience more straightforward. Although those changes weren’t ultimately accepted by his fellow PyMC4 core developers, the process led him into some interesting explorations into Python’s abstract syntax tree.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3935/web&quot;&gt;RPP Episode #4: 通过错误学习Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON &lt;/li&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An interview with Martin Breuss on getting started with Django, and how to learn Python through errors, and how errors really are your friends. Martin talks about his work with Coding Nomads, and teaching Python around the world. He also provides some tips on debugging and writing good questions.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;podcast&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-15-real-python-logo-square.28474fda9228.png?imageView2/2/w/360&quot; /&gt;&lt;/p&gt;
&lt;p&gt;podcast 在国外一直是个稳定的交流渠道,
在中国好象因为电台专营, 长期没了这个习惯.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3951/web&quot;&gt;在 Pandas 合并数据&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this step-by-step tutorial, you’ll learn three techniques for combining data in Pandas: merge, join, and concat. Combining Series and DataFrame objects in Pandas is a powerful way to gain new insights into your data.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Pandas&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-15-ScreenShot%202020-04-15%2012.09.41.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;两个函式, 就一大篇文章, 真蟒是真用心哪&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3927/web&quot;&gt;Python 分析工具概述&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MIKE DRISCOLL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3928/web&quot;&gt;用 dis 模块深入理解你的 Python 代码&lt;/a&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FLORIAN DAHLITZ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一个友好的中间码展示工具
)&lt;/p&gt;
&lt;h2&gt;好物&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Interesting Projects, Tools and Libraries, Projects &amp;amp; Code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3948/web&quot;&gt;deltapy: 表格数据增强&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/FIRMAI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3946/web&quot;&gt;twint: 高级 Twitter 抓取和 OSINT 工具&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/TWINTPROJECT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3943/web&quot;&gt;Whole-Foods-Delivery-Slot: 自动化 Whole Foods 以及 Amazon Fresh 交易&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/PCOMPUTO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3923/web&quot;&gt;textX: 轻松进行特定领域的语言和解析器&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/TEXTX&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;创造语言的语言, 元语言, 而且提供 IDE 可视化分析...&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;textX&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-15-68747470733a2f2f696d672e796f75747562652e636f6d2f76692f484931346a6b304a4952302f302e6a7067.jpg?imageView2/2/w/360&quot; /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3940/web&quot;&gt;yfinance: 雅虎金融市场数据下载器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/RANAROUSSI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;等等, Yahoo 还活着?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3936/web&quot;&gt;chord: Python 的中的交互式 和弦图&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/SHAHINROSTAMI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;chord&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-15-1.png?imageView2/2/w/360&quot; /&gt;&lt;/p&gt;
&lt;p&gt;生成这种&lt;strong&gt;和弦图&lt;/strong&gt;, 而且能互动.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3922/web&quot;&gt;pymc4: TensorFlow 概率的高级概率编程接口&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/PYMC-DEVS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3925/web&quot;&gt;machine_learning_examples: 机器学习示例和教程集合&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/LAZYPROGRAMMER&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3949/web&quot;&gt;nimporter: 在导入时为 Python 编译 Nim Import!&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/PEBAZ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;(￣▽￣):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;叕一个 Nim 的扩展了, 
无论有什么新语言诞生, Python 总是能第一时间拓展过去...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3942/web&quot;&gt;PePy.tech: 下载 python 软件包的统计信息s&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PEPY.TECH &lt;/li&gt;
&lt;li&gt;• Shared by Petru Rares Sincraian&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3938/web&quot;&gt;Contextualise: 管理您的知识&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/BRETTKROMKAMP &lt;/li&gt;
&lt;li&gt;• Shared by Brett Kromkamp&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Contextualise&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-04-15-graph-view.png?imageView2/2/w/360&quot; /&gt;&lt;/p&gt;
&lt;p&gt;看起来功能很强大...
但是,还没到可以投入使用的阶段?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2&gt;📆🐍 活动/大会&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Events, MeetUp 真的是全球线下活动组织中心&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3929/web&quot;&gt;⋅ IndyPy Mixer Meetup: Data Structures (Virtual)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;April 14, 2020&lt;/li&gt;
&lt;li&gt;在线&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3930/web&quot;&gt;⋅ Virtual PythonCamp Cologne&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;April 25 to April 26, 2020&lt;/li&gt;
&lt;li&gt;在线&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3950/web&quot;&gt;⋅ Python Pizza Remote Conference&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;April 25, 2020&lt;/li&gt;
&lt;li&gt;在线&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3941/web&quot;&gt;⋅ EuroPython 2020 Online Conference&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;July 23 to July 26, 2020&lt;/li&gt;
&lt;li&gt;在线&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;DAMA&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;101camp7py 马上(4.21)截止报名(能开发票 ;-)&lt;/p&gt;
&lt;p&gt;参考: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tiny4voice 的推荐 &lt;a href=&quot;https://mp.weixin.qq.com/s/GiCLU-bdxY3t0jqdVQ8NIQ&quot;&gt;为什么初学编程我建议从Python开始&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;余晟以为 的推荐 &lt;a href=&quot;https://mp.weixin.qq.com/s/XznOVioOzThdFy1NzqUM-g&quot;&gt;关于在本公众号进行付费阅读的通知&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/8PDnbR0XOCDcg2xURxnDYg&quot;&gt;PyCon US 2020 来了：人生苦短，不如线上学 Python&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4 月 15 日至 23 日&lt;/li&gt;
&lt;li&gt;线上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;PS:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/issue/issue-416.html&quot;&gt;Issue 416 ~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;修订: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/Issue/issue-416.md&quot;&gt;issue-416.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;NN 3984&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;好文笔,感叹号年度配额: &lt;strong&gt;1/3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;投稿/反馈邮箱:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;askdama&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;googlegroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;ZoomQuiet/&lt;strong&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/N5TuRRbF485D4Q90XdDA7g&quot;&gt;大妈&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;就是四处 &lt;code&gt;是也乎,(￣▽￣)&lt;/code&gt; 的那个&lt;a href=&quot;https://mp.weixin.qq.com/s/N5TuRRbF485D4Q90XdDA7g&quot;&gt;大妈&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;err&quot;&gt;私自嗯哼&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZoomQuiet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZoomQuiet42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;公开课程&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;蟒营&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mainium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;历史吐糟&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Chaos42&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PythoniCamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;核心组织者&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PyChina&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyChinaOrg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;本地社区&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;GDG&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;珠海&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GDG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ZhuHai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TFUG&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;珠海&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZH_TFUG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2020-04-15T08:43:32+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">pythonista-weekly : Pyw 444</title>
		<link href="http://weekly.pychina.org/python-weekly/pyw-444.html"/>
		<id>tag:weekly.pychina.org,2020-04-12:/python-weekly/pyw-444.html</id>
		<updated>2020-04-12T06:22:00+00:00</updated>
		<content type="html">&lt;h3&gt;欢迎阅读《pythonista周刊》第444期。Let us start!&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://mailchi.mp/pythonweekly/python-weekly-issue-444&quot;&gt;https://mailchi.mp/pythonweekly/python-weekly-issue-444&lt;/a&gt;&lt;br /&gt;
翻译：Dustyposa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;来自赞助商（PS：原文的赞助商）:&lt;/strong&gt;
使用 &lt;code&gt;Datadog&lt;/code&gt; 监控你的python指标，日志，集群分析。使用&lt;code&gt;Datadog&lt;/code&gt;的应用分析，可以深入任何纬度并且能找到你所需要的信息，来进行动态诊断和快速故障排除。&lt;a href=&quot;https://www.datadoghq.com/dg/apm/ts-python-tracing/?utm_source=Advertisement&amp;utm_medium=Advertisement&amp;utm_campaign=PythonWeekly-Tshirt&quot;&gt;通过免费的Datadog APM试用版来提高应用程序性能。&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;新鲜事&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://pyfound.blogspot.com/2020/04/sponsoring-python-packaging.html&quot;&gt;宣布一项新的 Python Packaging 赞助计划&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Python&lt;/code&gt; 软件基金会的 &lt;code&gt;Packaging&lt;/code&gt; 工作组正在启动一个全新的赞助计划，来支持及改善 &lt;code&gt;Python&lt;/code&gt; 的 &lt;code&gt;packaging&lt;/code&gt; 生态。通过该计划筹集的资金将直接用于提升你的公司每天都在使用的工具，并维持 &lt;code&gt;Python Package Index&lt;/code&gt; 的持续运营。通过这个计划，我们希望那些依赖 &lt;code&gt;Python&lt;/code&gt;、封装工具生态系统以及 &lt;code&gt;PyPI&lt;/code&gt; 的公司，来帮助我们构建一个牢固的基础以继续工作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://blog.europython.eu/post/614296142774173696/europython-2020-cfp-for-the-online-event&quot;&gt;EuroPython 2020: CFP for the Online Event&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于我们之前是在举办线下会议的前提下开始举办了 &lt;code&gt;CFP&lt;/code&gt;，而现在我们吧 &lt;code&gt;EuroPython 2020&lt;/code&gt; 转为线上活动，我们将把 &lt;code&gt;CFP&lt;/code&gt; 的时间再延长两周，直到 4 月 12 日，让每一个想参加这个新形式活动的人都有机会来提交会议提案。&lt;/p&gt;
&lt;h3&gt;文章、教程与话题&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Qy8PYfYoP6s&quot;&gt;100% 声控 Halo&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;（9min）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如何通过你的麦克风来控制你的鼠标键盘，完全由音量和音高控制。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;让我想起了 八分音符酱&lt;/p&gt;
&lt;p&gt;不过这个难度就更高了，锻炼声带的时候到了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://tomaugspurger.github.io/maintaing-performance.html&quot;&gt;维持性能&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;和 &lt;code&gt;pandas&lt;/code&gt; 文档说到的一样：&lt;code&gt;pandas&lt;/code&gt; 提供了高性能的数据结构。但是我们如何验证说法是正确的？以及我们如何确保在很多版本中都是正确的？本文将介绍：1) &lt;code&gt;pandas&lt;/code&gt; 目前监控性能的设置。 2) 我个人的用于理解和修复当发生性能下降的调试策略。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.mattlayman.com/understand-django/templates-user-interfaces/&quot;&gt;用户界面的模板&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当你的 &lt;code&gt;Django&lt;/code&gt; 应用用你的用户界面返回一个响应的时候，模版就是你用来制作用户界面的工具。这篇文章介绍了什么时候模版以及如何使用模版。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://developers.redhat.com/blog/2020/04/02/how-to-write-an-abi-compliance-checker-using-libabigail/&quot;&gt;如何用 Libabigail 编写 ABI 规范性检查程序&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编写一个基于 &lt;code&gt;Python&lt;/code&gt; 应用二进制接口 (ABI) 检查器来确保在 &lt;code&gt;Linux&lt;/code&gt; 系统中共享库之间的向后兼容性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://pythonspeed.com/articles/build-secrets-docker-compose/&quot;&gt;在 Docker Compose 中构建 secrets，以安全的方式&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这篇文章演示了一种技术，可以允许你使用相同的 &lt;code&gt;Dockerfile&lt;/code&gt; 既能使用 &lt;code&gt;secrets&lt;/code&gt; 构建生产镜像又能使用 &lt;code&gt;Docker Compose&lt;/code&gt; 轻松开发。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://opensource.com/article/20/4/pyenv&quot;&gt;如何使用 pyenv 在 Mac 运行多个 Python 版本&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果你需要使用一个你没有在 &lt;code&gt;macOS&lt;/code&gt; 上安装的 &lt;code&gt;Python&lt;/code&gt; 版本来运行一个项目，试试 &lt;code&gt;pyenv&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;环境管理之痛，一把辛酸泪。&lt;/p&gt;
&lt;p&gt;工具太多太多。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://t.co/A36eU8Tb32&quot;&gt;用 Python NumPy 进行 Array Oriented&lt;/a&gt;&lt;/strong&gt; 
Goodbye Plain, Old For-loops! Hello Numpy Arrays!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://t.co/BQvNafrdOX&quot;&gt;从 PyTorch 到 PyTorch Lightning — 一份面向所有人的介绍&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这篇文章回答了关于一个最常见的问题，为什么你使用 &lt;code&gt;PyTorch&lt;/code&gt; 时你需要 &lt;code&gt;Lightning&lt;/code&gt; ？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.sanjaysiddhanti.com/2020/04/08/s3testing/&quot;&gt;用 Python 测试 S3 的 3 种方法&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;测试与外部系统（比如数据库或者 S3）交互的代码，需要付出更多的努力。然而，重要的业务逻辑经常都在这些代码中。这篇文章讲探讨 3 种在 &lt;code&gt;Python&lt;/code&gt; 中测试 &lt;code&gt;S3&lt;/code&gt; 的方法。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.blog.pythonlibrary.org/2020/04/07/python-101-working-with-strings/&quot;&gt;Python 101 – Working with Strings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://snarky.ca/what-the-heck-is-pyproject-toml&quot;&gt; pyproject.toml 到底是什么?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mattsegal.dev/django-spa-infrastructure.html&quot;&gt;用 React 前端部署 Django 后端的3种方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.pyimagesearch.com/2020/04/06/blur-and-anonymize-faces-with-opencv-and-python/&quot;&gt;使用OpenCV和Python对人脸进行模糊化和匿名化&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lwn.net/SubscriberLink/816415/74bda9c0f1d7e55b/&quot;&gt;在Python中重做StringIO的串联运算&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;有趣的项目、工具和库&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/pcomputo/Whole-Foods-Delivery-Slot&quot;&gt;Whole-Foods-Delivery-Slot&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;是的，在&lt;code&gt;COVID-19&lt;/code&gt;还在的现在，试图获得&lt;code&gt;Whole Foods&lt;/code&gt;和&lt;code&gt;Amazon Fresh&lt;/code&gt;的送货时段可能会很麻烦。为了让你摆脱不断检查空位的麻烦（几乎永远找不到空位），这个自动脚本可以通知你（是的，口头通知你，这样你就可以去执行你的任务）新的送货空位何时开放。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/xingyizhou/CenterTrack&quot;&gt;CenterTrack&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用中心点同时检测和追踪物体。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/unmade/audiomatch&quot;&gt;audiomatch&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个小巧的命令行工具，用于发现相似的音频文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/jingw222/hiitpi&quot;&gt;HIIT PI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一款健身训练器 &lt;code&gt;Dash/Flask&lt;/code&gt; 应用，通过分析来你的 &lt;code&gt;sweet Pi&lt;/code&gt; 实时的视频流用机器学习和 &lt;code&gt;Edge TPU&lt;/code&gt; 帮助追踪你的 &lt;code&gt;HIIT&lt;/code&gt; 锻炼情况。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/shenweichen/DeepMatch&quot;&gt;DeepMatch&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个用于推荐一辑广告的深度匹配模型库。可以很简单地训练模型并导出用户和 &lt;code&gt;item&lt;/code&gt; 的表示向量，并可以用于 &lt;code&gt;ANN&lt;/code&gt; 搜索。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/dhaitz/mplcyberpunk&quot;&gt;mplcyberpunk&lt;/a&gt;&lt;/strong&gt;
&quot;Cyberpunk style&quot; for matplotlib plots.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/Tesorio/django-anon&quot;&gt;django-anon&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对生产数据进行匿名化，以便在不是非常安全的环境使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/uburuntu/throttler&quot;&gt;Throttler&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;支持 &lt;code&gt;Asyncio&lt;/code&gt; 的简单调节器。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/gigamarr/smartsnek&quot;&gt;smartsnek&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Python CLI&lt;/code&gt; 工具，用于查找单词定义。&lt;/p&gt;
&lt;p&gt;Python CLI tool for looking up word definitions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/amickael/create-flask-service&quot;&gt;create-flask-service&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;简单设置 &lt;code&gt;Flask&lt;/code&gt; 微服务。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;难得的脚手架～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/yenchenlin/nerf-pytorch&quot;&gt;NeRF-pytorch&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NeRF（Neural Radiance Fields）&lt;/code&gt; 的 &lt;code&gt;PyTorch&lt;/code&gt; 实现，可以重现结果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/shahinrostami/chord&quot;&gt;chord&lt;/a&gt;&lt;/strong&gt;
围绕着 &lt;code&gt;d3-chord&lt;/code&gt; 的 &lt;code&gt;Python&lt;/code&gt; 封装器。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://gist.github.com/MineRobber9000/722a902f67bbd1a1c8c57f7ec0b5034e&quot;&gt;2fa&lt;/a&gt;&lt;/strong&gt;
用 &lt;code&gt;Python&lt;/code&gt; 开发的双因素认证终端应用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/firmai/deltapy/&quot;&gt;DeltaPy&lt;/a&gt;&lt;/strong&gt; 
表格数据增强与特征工程。&lt;/p&gt;
&lt;h3&gt;那些活动&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://remote.python.pizza/&quot;&gt;Virtual: Python Pizza Conference&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Python Pizza&lt;/code&gt; 是由 &lt;code&gt;Python&lt;/code&gt; 社区举办的微会议。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.meetup.com/The-San-Francisco-Django-Meetup-Group/events/269878541/&quot;&gt;Virtual Nationwide Django Meetup&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;旧金山 &lt;code&gt;Django Meetup&lt;/code&gt; 将与全国各地的兄弟分会合作，于美国东部时间4月15日下午5点/东部时间8点举办首次全国性的虚拟 &lt;code&gt;Django&lt;/code&gt; 聚会。我们将与纽约市和波士顿分会合作，提供引人入胜的节目。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.meetup.com/indypy/events/hwstlrybcgbsb/&quot;&gt;Virtual: IndyPy Mixer Meetup: Data Structures&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将会有一个讲座，用 &lt;code&gt;112092&lt;/code&gt; 次 &lt;code&gt;UFO&lt;/code&gt; 目击事件来理解概率数据结构。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/PyData-Madison/events/269151398/&quot;&gt;Webinar: Creating a distributable software with basic Python skills&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/startupedmonton/events/dtflxjybcgbrb/&quot;&gt;Virtual: Edmonton Python Meetup April 2020&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Posa：&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(Posa私人无责任播报)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;暂无。&lt;/p&gt;
&lt;p&gt;----- 分割线 -----&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你发现哪里翻译有误的话，请务与我联系！感谢！
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/python-weekly/pyw-444.html&quot;&gt;pythonista-weekly~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;改进: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/python-weekly/issue%23444.md&quot;&gt;issue-444.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2020-04-15T08:43:32+00:00</updated>
		</source>
	</entry>

</feed>
