<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">

	<title>Planet DebugUself</title>
	<link rel="self" href="http://planet.du.zoomquiet.us/atom.xml"/>
	<link href="http://planet.du.zoomquiet.us/"/>
	<id>http://planet.du.zoomquiet.us/atom.xml</id>
	<updated>2019-11-12T16:42:24+00:00</updated>
	<generator uri="http://www.planetplanet.org/">Planet/2.0 +http://www.planetplanet.org</generator>

	<entry>
		<title type="html">pythonista-weekly : Pyw 422</title>
		<link href="http://weekly.pychina.org/python-weekly/pyw-422.html"/>
		<id>tag:weekly.pychina.org,2019-11-10:/python-weekly/pyw-422.html</id>
		<updated>2019-11-10T07:16:00+00:00</updated>
		<content type="html">&lt;h3&gt;欢迎阅读《pythonista周刊》第422期。Let us start!&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://mailchi.mp/pythonweekly/python-weekly-issue-422&quot;&gt;https://mailchi.mp/pythonweekly/python-weekly-issue-422&lt;/a&gt;&lt;br /&gt;
翻译：Dustyposa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;来自赞助商:&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;Datadog&lt;/code&gt; 监控你的python指标，日志，集群分析。使用&lt;code&gt;Datadog&lt;/code&gt;的应用分析，可以深入任何纬度并且能找到你所需要的信息，来进行动态诊断和快速故障排除。&lt;a href=&quot;https://www.datadoghq.com/dg/apm/ts-python-tracing/?utm_source=Advertisement&amp;utm_medium=Advertisement&amp;utm_campaign=PythonWeekly-Tshirt&quot;&gt;马上跟踪你的python应用吧！免费试用14天哦！&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;熟悉的面孔。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;新闻&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://pythonweekly.us2.list-manage.com/track/click?u=e2e180baf855ac797ef407fc7&amp;id=fea677de77&amp;e=57c131a127&quot;&gt;Python 采用 12 个月的发布周期&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Python 升级固定了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://pythonweekly.us2.list-manage.com/track/click?u=e2e180baf855ac797ef407fc7&amp;id=85e5cd4508&amp;e=57c131a127&quot;&gt;在银行Python 已经取代了 Excel&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;就是在某些银行，已经只用&lt;code&gt;Python&lt;/code&gt;来处理数据了！原因其实很简单，就是&lt;code&gt;Excel&lt;/code&gt;太慢了。。想想用&lt;code&gt;Excel&lt;/code&gt;处理大型文件，内心是绝望的！&lt;/p&gt;
&lt;p&gt;该来的还是会来的！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;文章、教程与话题&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=QppWTvh7_sI&quot;&gt;&quot;Writing a PEG parser for fun and profit&quot; - Guido van Rossum&lt;/a&gt;  &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;(42 min)&lt;/h4&gt;
&lt;p&gt;解析表达文法(PEGs) 是一种新的用来描述适合自动生成高效解析器的文法的形式。我对使用 基于PEG生成器的解析器来代理在&lt;code&gt;Cython&lt;/code&gt;中使用近30年的&quot;pgen&quot;解析生成器很有兴趣。这出现了一些有趣的问题。我还想出了一种可视化解析过程的简单方法，它有助于调试文法和解析机制，并且我将使用它去解释一般的&lt;code&gt;PEG&lt;/code&gt;解析过程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;龟叔依然很忙~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://blog.ganssle.io/articles/2019/11/utcnow.html&quot;&gt;不要使用 utcnow and utcfromtimestamp&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;关于&lt;code&gt;utcnow&lt;/code&gt;和&lt;code&gt;utcfromtimestamp&lt;/code&gt;的危险以及使用其替代品的好处的公共服务公告。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;utc 的坑，国际化的Application不易呀~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://t.co/zT2Lxr3Us1&quot;&gt;JWT 认证和 DjangoREST API&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;基于 Token  的身份认证允许服务器和前端（无论是网络、本地移动设备还是其他设备）分离，并归属于不同的域名。&lt;code&gt;JSON Web Tokens(JWT)&lt;/code&gt;是基于 token 的身份认证的一种常见实现方式，在这篇文章，我们将会用它在一个基于&lt;code&gt;Django REST&lt;/code&gt;框架的notes应用中的一个API进行用户认证。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;熟悉的实践篇章&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=XGf2GcyHPhc&quot;&gt;通过做5个游戏来学习 Python&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;（6h43min）&lt;/h4&gt;
&lt;p&gt;在这个面向初学者的完整教程中学习&lt;code&gt;Python&lt;/code&gt;。这个课程使用的是以项目为基础的方法。我们一共收集了5个很好的&lt;code&gt;Python&lt;/code&gt;游戏教程，所以你可以在构建5个游戏的同时学习&lt;code&gt;Python&lt;/code&gt;。你如果是实践学习者，这个课程非常适合你！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;寓教于乐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.dataquest.io/blog/python-range-tutorial/&quot;&gt;Python range 指南：学习使用这个很有用的内置函数&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在这篇详细的指南中，我们将通过几个栗子来带你了解&lt;code&gt;range&lt;/code&gt;函数的工作原理，并探讨它的局限及解决办法。&lt;code&gt;range&lt;/code&gt;对各种各样的&lt;code&gt;Python编程任务&lt;/code&gt;来说都是很有用的，该指南最后将介绍以&lt;code&gt;range函数&lt;/code&gt;在数据科学的应用的几个栗子。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;又一篇新手推荐~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://t.co/GiXdUiDQrm&quot;&gt;通过GitHub Actions，Poetry，Black和Pytest快速实现CI&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;为&lt;code&gt;Django&lt;/code&gt;项目设置&lt;code&gt;Github Actions&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;部署上线一条龙~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://stackabuse.com/understanding-opengl-through-python/&quot;&gt;通过 Python 理解 OpenGL&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;如何使用&lt;code&gt;Spectrograms和GANs&lt;/code&gt;将爵士乐转换成古典乐&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不知道 MIKU 的音乐能不能转~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.dataquest.io/blog/python-datetime-tutorial/&quot;&gt;Python Datetime 指南: 操作 Times, Dates 和 Time Spans&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在本数据科学教程中使用&lt;code&gt;datetime和calender&lt;/code&gt;模块成为成为&lt;code&gt;Python&lt;/code&gt;中的时间和日期的大师。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;希望能操作虫洞！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://beepb00p.xyz/mypy-error-handling.html&quot;&gt;Python: 超乎想象的 typed&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;mypy&lt;/code&gt;辅助错误处理，其他语言中的异常机制，模式匹配和类型差异的乐趣。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;何以解忧，唯有&lt;code&gt;mypy&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://snarky.ca/why-you-should-use-python-m-pip/&quot;&gt;为什么你应该使用 &lt;code&gt;python -m pip&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;该文章揭示了什么是&lt;code&gt;python -m pip&lt;/code&gt;和你为什么在运行&lt;code&gt;pip&lt;/code&gt;的时候应该使用它。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;环境比较重要&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.pyimagesearch.com/2019/11/04/traffic-sign-classification-with-keras-and-deep-learning/&quot;&gt;基于Keras和深度学习的交通标志分类&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在本片指南，你讲学习到如何训练你自己的交通标志分类器/识别器，使用&lt;code&gt;Keras和深度学习&lt;/code&gt;可以使其可以达到95%以上的准确率。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;哪里不认识训练哪里！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://blog.redash.io/how-we-spotted-and-fixed-a-performance-degradation-in-our-python-code/&quot;&gt;我们如何发现并修复Python代码中的性能下降&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;实践出真理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.theseattledataguy.com/healthcare-fraud-detection-with-python/&quot;&gt;用Python进行医疗保险欺诈检测&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;人心叵测～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://t.co/vbMM7hNrJG&quot;&gt;Python标准库中一些鲜为人知的地方&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;骚操作finding！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://blog.tensorflow.org/2019/11/hugging-face-state-of-art-natural.html&quot;&gt;Hugging Face: TensorFlow 2.0使用10行代码实现最先进的nlp处理&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;适合简单了解一下～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://julien.danjou.info/finding-definitions-from-a-source-file-and-a-line-number-in-python/&quot;&gt;在 Python 中通过源码和行号找到定义&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;文法分析，语法树～最近在看的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://switowski.com/blog/you-dont-have-to-migrate-to-python3&quot;&gt;你不需要迁移至 Python 3&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;所以我是升还是不升呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;有趣的项目、工具和库&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/deezer/spleeter&quot;&gt;Spleeter&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Spleeter&lt;/code&gt;是 &lt;code&gt;Deezer&lt;/code&gt;的源分离库，有用&lt;code&gt;Python&lt;/code&gt;使用&lt;code&gt;Tensorflow&lt;/code&gt;编写的预训练模型。让训练一个源分离模型（ 假设已经有了一个隔离源的数据集 ）变得容易。并且提供了已经训练好的用于执行各种分离风格的最新模型。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;音轨分离！佳作。&lt;/p&gt;
&lt;p&gt;内置3种分离模式。可以自由选择哦！&lt;/p&gt;
&lt;p&gt;听不出自己声音的我估计是没戏了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/weclaw1/inbac&quot;&gt;inbac&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;inbac&lt;/code&gt;是一款交互式批量裁剪器，用于快速裁剪图像。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;剪裁太慢？python来凑！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/allegroai/trains-agent&quot;&gt;trains-agent&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;它是一种零配置的“一劳永逸”执行代理，与trains-server结合使用可提供完整的AI集群解决方案。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AI服务也是需要Dev-ops的，为什么？因为都是集群了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/sethblack/python-gift-exchange&quot;&gt;python-gift-exchange&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Python礼物交换选择器&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个程序员被妻子逼迫的故事！&lt;/p&gt;
&lt;p&gt;没办法，为什么自己这么强呢？（不是我！！！！！！）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/viewflow/jsonfield-schema&quot;&gt;jsonfield-schema&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;将Django JSONField数据公开为虚拟模型字段&lt;/p&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/nickjj/flask-static-digest&quot;&gt;lask-static-digest&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Flask&lt;/code&gt;扩展，通过&lt;code&gt;md5标记和gzipping&lt;/code&gt;帮助你准备好生产的静态文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;静态一条龙
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/cvxgrp/cvxpylayers&quot;&gt;cvxpylayers&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;cvxpylayers是一个Python库，用于使用CVXPY在PyTorch和TensorFlow中构造可微凸优化层。&lt;/p&gt;
&lt;h2&gt;最近更新&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.python.org/downloads/release/python-359/&quot;&gt;Python 3.5.9&lt;/a&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.djangoproject.com/weblog/2019/nov/04/django-bugfix-releases-227-2114-11126/&quot;&gt;Django bugfix releases issued: 2.2.7, 2.1.14, and 1.11.26&lt;/a&gt;&lt;/h4&gt;
&lt;h2&gt;活动和网络研讨会日程&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/nycpython/events/265386351/&quot;&gt;CPython: from code to execution - New York&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;通过快速浏览cpython 3.9解释器源代码，我们将了解一些python代码如何从熟悉的人类可读语法到解释器产生字节码结果。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;编译原理之美&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/PyDataCharlotte/events/265952190/&quot;&gt;Effortless REST W/ Flask - Charlotte, NC&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;将有以下话题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;算法如何变得有偏见？&lt;/li&gt;
&lt;li&gt;Python Severless 话题：使用Zappa无基础架构的web应用程序&lt;/li&gt;
&lt;li&gt;Tensorflow 2.0 有什么新东西？&lt;/li&gt;
&lt;li&gt;Python中最好的AI包&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;种类依旧丰富～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/phillypug/events/265657211/&quot;&gt;Philadelphia Python Meetup November 2019 - Philadelphia, PA&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Twitter的Developer Advocate-Jessica Garson将向我们展示她如何使用Python解决她在纽约的停车问题&lt;/p&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/BoulderPython/events/vcmckryzpbqb/&quot;&gt;Boulder Python Meetup November 2019 - Boulder, CO&lt;/a&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/PyLadies-Toronto/events/265218106/&quot;&gt;PyLadies Totonto November Talk Night, Totonto ON&lt;/a&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/startupedmonton/events/dtflxjyzpbpb/&quot;&gt;Edmonton Python Meetup November 2019 - Edmonton, AB&lt;/a&gt;&lt;/h4&gt;
&lt;h2&gt;Posa：&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(Posa私人无责任播报)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://realpython.com/quizzes/python-data-types/viewer/&quot;&gt;测测你的python数据类型掌握了吗！&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;一个测试~哎，有点难，可以试试，8道题，3分钟差不多。是时候展现自己真正的实力了。&lt;/p&gt;
&lt;p&gt;----- 分割线 -----&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你发现哪里翻译有误的话，请务与我联系！感谢！
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/python-weekly/pyw-422.html&quot;&gt;pythonista-weekly~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;改进: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/python-weekly/issue#422.md&quot;&gt;issue-422.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2019-11-10T08:42:53+00:00</updated>
		</source>
	</entry>

	<entry xml:lang="en-us">
		<title type="html">记一次 Firefox WebSocket debug</title>
		<link href="http://bambooom.github.io/2019/11/08/firefox-ws-debug/"/>
		<id>http://bambooom.github.io/2019/11/08/firefox-ws-debug/</id>
		<updated>2019-11-08T15:27:42+00:00</updated>
		<content type="html">&lt;p&gt;我司经常会通过 WebSocket 来向前端实时传递大量信息，之前同事一直说 Firefox 下 WebSocket 传送的数据有丢失，
造成渲染有问题，而 Chrome 没问题。
同事一直没有能完全解决，一个是不确定如何稳定复现，另一个是因为 Firefox （最新的 70）中的 WebSocket
每次传输的 frame message 在 DevTools 里是看不到的。&lt;/p&gt;

&lt;p&gt;Firefox 71 &lt;a href=&quot;https://hacks.mozilla.org/2019/10/firefoxs-new-websocket-inspector/&quot;&gt;终于要可以看到 WebSocket messages 数据了&lt;/a&gt;。
现在可以先使用 Firefox Developer 版本试用了。&lt;/p&gt;

&lt;p&gt;我在另一个项目里也遇到类似问题，但是我用打 log 的方式发现 frame message 并没有丢失，但是顺序错了。
所以下载更新了 Firefox Developer 版本后，即可查看并判断是从后端接收的数据顺序就是错的，还是前端的代码造成的。&lt;/p&gt;

&lt;p&gt;有了这个 WS inspector 之后就一眼看得出来后端传输没有问题，那只能是前端代码有问题了。（其实想想 Chrome 也并没有问题，的确不可能是后端的锅…😅）&lt;/p&gt;

&lt;p&gt;回到代码本身，我发现了一个值得怀疑的点，就是在 WS 的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onmessage&lt;/code&gt; event 中，第一步需要对获取的数据进行类型转换。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Blob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arrayBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TextDecoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;utf-8&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;首先前提是服务器返回的是二进制数据。然后在 WS 中可能获取到的是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Blob&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ArrayBuffer&lt;/code&gt;。
所以如果获取的 data 是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Blob&lt;/code&gt;, 先转换成 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ArrayBuffer&lt;/code&gt;，再统一转化成 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;也没有啥其他办法，只是多打几次 log 看输出的 pattern 后，我基本确认就是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Response.arrayBuffer&lt;/code&gt; 这一步骤出现问题。
这个函数本身返回的是 Promise，即使 await 后，会出现后一帧的数据比前一帧的数据提前完成返回的情况，并继续进行后续的数据处理所以导致渲染失败。
现在想想这个相当于异步操作，的确本来也不能保证顺序是对的。这个代码本来就写的不太对呢。&lt;/p&gt;

&lt;p&gt;那么怎么 fix 呢？我重新去翻了下有关 WS 的文档，以及搜了下 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Blob&lt;/code&gt; 转成 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ArrayBuffer&lt;/code&gt; 有什么别的方法么，能保证顺序的。
我发现以前漏掉的 WS 的一个细节是 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/binaryType&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebSocket.binaryType&lt;/code&gt;&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;也就是设置 WS 中以哪种类型返回二进制数据。原来默认是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Blob&lt;/code&gt;，可以直接设置成 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ArrayBuffer&lt;/code&gt;。
也就是说，这一步转换其实应该让浏览器帮我直接完成，我可以预期我获得的 data 一定是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ArrayBuffer&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;在创建 WS 的时候加上这个设置，并去掉前面 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Response.arrayBuffer&lt;/code&gt; 的调用后，在 Firefox 70 和 Firefox Developer 下都尝试了很多次，终于再也没有出现数据顺序错位的问题了。&lt;/p&gt;

&lt;p&gt;至于为什么在 Chrome 下一直稳定没有问题，那大概就是他们各自内部对这个函数的实现细节上的差异，而我暂时并不知道这个细节差异是什么了。&lt;/p&gt;</content>
		<author>
			<name>bambooom</name>
			<email>zhuzi.mn@gmail.com</email>
			<uri>http://bambooom.github.io</uri>
		</author>
		<source>
			<title type="html">Bambooom</title>
			<subtitle type="html">Personal Blog of Bambooom</subtitle>
			<link rel="self" href="https://bambooom.github.io/feed.xml"/>
			<id>https://bambooom.github.io/feed.xml</id>
			<updated>2019-11-08T16:42:24+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">普宁2</title>
		<link href="http://liguanghe.github.io/2019/11/06/NvPuNing2/"/>
		<id>http://liguanghe.github.io/2019/11/06/NvPuNing2/</id>
		<updated>2019-11-06T13:00:32+00:00</updated>
		<content type="html">&lt;p&gt;妻子一剑斩下来的时候，普宁只听到了血喷出来的声音，剑够快，像风声一样好听。是胳膊，他想。‘不对，是小普宁’，妻子这样回道，‘我是你的欲望与快乐，你一直讨厌的事物。你一直在阉割你自己。’‘……’真想说她说的不对啊，但确实切中要害，无法反驳。&lt;/p&gt;
&lt;p&gt;剑过于锋利，妻子自己&lt;/p&gt;</content>
		<author>
			<name>li guang he</name>
			<uri>http://liguanghe.github.io/</uri>
		</author>
		<source>
			<title type="html">Li Guanghe's blog</title>
			<link rel="self" href="https://liguanghe.github.io/rss2.xml"/>
			<id>https://liguanghe.github.io/rss2.xml</id>
			<updated>2019-11-06T16:42:22+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Issue 393</title>
		<link href="http://weekly.pychina.org/issue/issue-393.html"/>
		<id>tag:weekly.pychina.org,2019-11-06:/issue/issue-393.html</id>
		<updated>2019-11-06T03:42:00+00:00</updated>
		<content type="html">&lt;blockquote&gt;
&lt;p&gt;DROPBOX 官方致谢老爹6年贡献, 对比...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://pycoders.com/issues/393&quot;&gt;PyCoder's Weekly - Issue #393&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;PyCoder&quot; src=&quot;https://cdn.pycoders.com/37bdf31dc645f968ffb90196e5d38ff5&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;191106 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 42 分钟 完成快译&lt;/li&gt;
&lt;li&gt;191106 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 17 分钟 完成格式转抄.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2827/web&quot;&gt;Python 采用了12个月发布周期（PEP 602） (PEP 602)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;LWN.NET&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The CPython team moves to a consistent annual release schedule. More info here in PEP 602.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2808/web&quot;&gt;用 Kivy Python 框架构建移动应用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn how to build a mobile application with Python and the Kivy GUI framework. You’ll discover how to develop an application that can run on your desktop as well as your phone. Then, you’ll package your app for iOS, Android, Windows, and macOS.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;讲真, 用 QPython 更加简洁&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2826/web&quot;&gt;2019 Python 开发者调查表&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PSF BLOG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“[We] aim to identify how the Python development world looks today and how it compares to the last two years. The results of the survey will serve as a major source of knowledge about the current state of the Python community and how it is changing over the years, so we encourage you to participate and make an invaluable contribution to this community resource. The survey takes approximately 10 minutes to complete.”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;官方构建的, 想更多引发对中国程序猿的注意, 
大家多去填写吧&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2820/web&quot;&gt;您不必迁移到 Python 3&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;SEBASTIAN WITOWSKI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“Python 3 is great! But not every Python 2 project has to be migrated. There are different ways how you can prepare for the upcoming Python 2 End of Life.”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;无法同意更多, 绝大多数应用并没到只有 Py3 能承载的分儿上&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2803/web&quot;&gt;为毛要使用python -m pip&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;BRETT CANNON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Arguments for why you should always use python -m pip over pip/pip3 to control exactly which Python environment is used.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2812/web&quot;&gt;Thank You, Guido&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;DROPBOX.COM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“After six and a half years, Guido van Rossum, the creator of Python, is leaving Dropbox and heading into retirement.”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;老爹, 多谢哉.&lt;/p&gt;
&lt;p&gt;--&amp;gt; DROPBOX 官方致谢, 当然, 当年 Google 并没感谢过, 毕竟...你懂的&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2&gt;讨论&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Discussions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;NIL&lt;/p&gt;
&lt;h2&gt;文章,教程和嗯哼&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Articles, Tutorials and Talks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2819/web&quot;&gt;Python 3.8 超酷新功能&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON &lt;/li&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What does Python 3.8 bring to the table? Learn about some of the biggest changes and see you how you can best make use of them.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;3.5 开始, Python 也学习 &lt;code&gt;C#&lt;/code&gt; 开始堆新功能了... &lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2797/web&quot;&gt;Sanic 和 Elasticsearch 的实用日志查看器 &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;CRISTIAN MEDINA &lt;/li&gt;
&lt;li&gt;• Shared by Cristian Medina&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How to view log output from Docker containers in an automated CI/CD system in your GitHub pull requests, using Elasticsearch and a Python REST API built with Sanic.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2804/web&quot;&gt;Keras 和深度学习对交通标志分类&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ADRIAN ROSEBROCK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How to train your own traffic sign classifier/recognizer capable of obtaining over 95% accuracy using Keras and Deep Learning.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2796/web&quot;&gt;用 Flask, Connexion 和 SQLAlchemy 构建 Python REST API&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In Part 4 of this series, you’ll learn how to create a Single-Page Application (SPA) to interface with the REST API backend that you built in Part 3. Your SPA will use HTML, CSS, and JavaScript to present this REST API to a user as a browser-based web application.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2830/web&quot;&gt;如何发现并修复Python代码中的性能下降&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;OMER LACHISH&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A post-mortem of how Omer’s team tracked down and fixed a performance regression introduced by a switch from Celery to RQ.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;实例案例故事&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2800/web&quot;&gt;Python: 比您想象的更好的类型&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;DMITRII GERASIMOV&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MyPy assisted error handling, exception mechanisms in other languages, fun with pattern matching and type variance.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;是的, 不是飙版本号的 CPython, 而是 MyPy&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2799/web&quot;&gt;在Python 源文件和行号中查找定义&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;JULIEN DANJOU&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Considering a filename and a line number, can you tell which function, method or class a line of code belongs to?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2825/web&quot;&gt;Visual Studio Online: 基于 Web 的 IDE 和协作代码编辑器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MICROSOFT.COM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Microsoft announced Visual Studio Online, an online IDE and cloud-based development environment based on VS Code.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;VStudio 不是 VSCode 哪...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2791/web&quot;&gt;用 WhiteNoise 和 Amazon CloudFront 在 Flask 发布静态文件&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MICHAEL HERMAN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This tutorial shows how to manage static files with Flask, WhiteNoise, and Amazon CloudFront.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2831/web&quot;&gt;SQL 分析师需要了解的关于 Python 哪些知识?&amp;gt; (2016)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LIPEI WANG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2817/web&quot;&gt;建立递归下降解析器&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SUPRIYO BISWAS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2788/web&quot;&gt;Python 标准库的鲜为人知的地方&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VITOR PEREIRA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;为什么无人知晓?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2792/web&quot;&gt;生产中运行 Kafka 流的故事&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PEDRO TAVARES&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2801/web&quot;&gt;PyPortal 二十一点游戏: 使用 Sprites, Touch, Audio&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ANDY FELONG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2794/web&quot;&gt;用 Dunder 方法完善数据模型&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OLEG ŻERO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;好物&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Interesting Projects, Tools and Libraries, Projects &amp;amp; Code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/2807/web&quot;&gt;Django Admin 食谱&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;AGILIQ.COM &lt;/li&gt;
&lt;li&gt;• Shared by Python Bytes FM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Cookbook 一向是实在的经验汇集形式&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2798/web&quot;&gt;localstack: 用以测试环境的本地 AWS云Stack 模拟&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/LOCALSTACK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2805/web&quot;&gt;searx: 尊重隐私的元搜索引擎&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/ASCIIMOO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2802/web&quot;&gt;python-terminal-color: 用于打印终端颜色的嵌入式单个文件库&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/REORX &lt;/li&gt;
&lt;li&gt;• Shared by Reorx&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2824/web&quot;&gt;awesome-robotic-tooling: 使用C++ 和 Python 进行机器人开发的资源和工具&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/LY0N&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2828/web&quot;&gt;conrad: 在终端上跟踪Python会议和聚会&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/VINAYAK-MEHTA &lt;/li&gt;
&lt;li&gt;• Shared by Vinayak Mehta&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;没有什么, 不能在 CLI 中嗯哼的...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2&gt;📆🐍 活动/大会&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Events, MeetUp 真的是全球线下活动组织中心&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2829/web&quot;&gt;⋅ Canberra Python Meetup&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;November 7, 2019&lt;/li&gt;
&lt;li&gt;澳洲&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2813/web&quot;&gt;⋅ Sydney Python User Group (SyPy)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;November 7, 2019&lt;/li&gt;
&lt;li&gt;澳洲&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2816/web&quot;&gt;⋅ Python Miami&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;November 9 to November 10, 2019&lt;/li&gt;
&lt;li&gt;USA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2809/web&quot;&gt;⋅ DFW Pythoneers 2nd Saturday Teaching Meeting&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;November 9, 2019&lt;/li&gt;
&lt;li&gt;TX, USA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2832/web&quot;&gt;⋅ PyDelhi User Group Meetup&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;November 9, 2019&lt;/li&gt;
&lt;li&gt;印度&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2815/web&quot;&gt;⋅ Edmonton Python User Group&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;November 11, 2019&lt;/li&gt;
&lt;li&gt;Canada&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/2806/web&quot;&gt;⋅ PiterPy Meetup&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;November 12, 2019&lt;/li&gt;
&lt;li&gt;俄国&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;DAMA&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://py.101.camp/&quot;&gt;蟒营 Python 入门班&lt;/a&gt;&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;第4期&lt;/li&gt;
&lt;li&gt;101camp4py&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第4期已开课, 为期6周;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;191102&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;开始报名&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;191124&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;报名结束&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;191201&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;正式开课&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;200112&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;按时结束&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;是也乎&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;NN 3823&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/issue/issue-393.html&quot;&gt;Issue 393 ~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;改进: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/Issue/issue-393.md&quot;&gt;issue-393.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2019-11-10T08:42:53+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">pythonista-weekly : Pyw 421</title>
		<link href="http://weekly.pychina.org/python-weekly/pyw-421.html"/>
		<id>tag:weekly.pychina.org,2019-11-03:/python-weekly/pyw-421.html</id>
		<updated>2019-11-03T07:16:00+00:00</updated>
		<content type="html">&lt;h3&gt;欢迎阅读《pythonista周刊》第421期。Let us start!&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://mailchi.mp/pythonweekly/python-weekly-issue-421&quot;&gt;https://mailchi.mp/pythonweekly/python-weekly-issue-421&lt;/a&gt;&lt;br /&gt;
翻译：Dustyposa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;来自赞助商:&lt;/h3&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.vettery.com/tech?utm_source=newsletter&amp;utm_medium=pythonweekly&amp;utm_term=tech&amp;utm_content=grouped&amp;utm_campaign=ad-77579&quot;&gt;python开发者都需要的Vettery&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Vettery是一个招聘网站，它改变了人们应聘或者雇佣的方式。准备好换工作地方了吗？免费制作简历，你的薪资你说了算，现在就和顶级雇主的HR联系吧！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;跟上周一样，有点南。
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;新闻&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://blog.dropbox.com/topics/company/thank-you--guido&quot;&gt;龟叔，谢谢侬！&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Guido van Rossum&lt;/code&gt;从&lt;code&gt;Dropbox&lt;/code&gt;退休 。感谢&lt;code&gt;Guido&lt;/code&gt;为&lt;code&gt;Python&lt;/code&gt;社区所做的一切，退休之后也一切都好。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个 sad news。但是，python 肯定会变得越来越好！&lt;br /&gt;
:( 居然和我的私人播报重了！不管，我的播报长一些！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;文章、教程与话题&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=t1lvsmcPEcE&quot;&gt;生态系统之问：来自200+的FOSS应用经验的课程&lt;/a&gt;&lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;&lt;/h4&gt;
&lt;p&gt;该演讲围绕200个Python最成功的开源应用，从中提炼出了面向大众的构建有效软件的真实建议。从架构、测试、许可到打包和分发，这些项目有完整的生命周期和巧妙之处。等待你去学习！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个视频肯定很很很有意义，不说了，去看视频了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://engineering.grab.com/griffin&quot;&gt;Griffin,一个每天预测数亿次的反欺诈风险&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;这篇文章重点介绍了&lt;code&gt;Grab&lt;/code&gt;的高性能风险规则引擎，它可以自动创建规则，用最少的工程师去检测欺诈活动。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学习学习学习，风险相关，还是很抢手的~~什么抢手？你懂的！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://open.nytimes.com/how-the-new-york-times-is-experimenting-with-recommendation-algorithms-562f78624d26&quot;&gt;《纽约时报》是如何试水推荐算法的&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在《纽约时报》，我们的部分网站和app使用了算法策略。我们使用它去筛选人工操作效率很低或者很难的内容。比如首页的《Smarter Living》或者个性化版的《你的周刊精选》中。个性化算法被用来辅助编辑判断的，去觉得什么故事主导我们的新闻报道。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;全民AI~~今天，你AI了吗！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Dgo7F-lpyYE&quot;&gt;使用python和OpenBC获取EEG数据，创建脑机接口&lt;/a&gt;&lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;&lt;/h4&gt;
&lt;p&gt;学习如何在&lt;code&gt;Python&lt;/code&gt;中读取脑电图数据的目的是创建一个脑机接口，希望做的事情，如控制游戏中的角色及更多!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;万能python :) python万能:)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.dataquest.io/blog/python-range-tutorial/&quot;&gt;Python range 指南：学习使用这个很有用的内置函数&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在这篇详细的指南中，我们将通过几个栗子来带你了解&lt;code&gt;range&lt;/code&gt;函数的工作原理，并探讨它的局限及解决办法。&lt;code&gt;range&lt;/code&gt;对各种各样的&lt;code&gt;Python编程任务&lt;/code&gt;来说都是很有用的，该指南最后将介绍以&lt;code&gt;range函数&lt;/code&gt;在数据科学的应用的几个栗子。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;又一篇新手推荐~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.megacolorboy.com/posts/build-your-own-static-site-generator-using-python/&quot;&gt;用 Python 构建属于你的静态站点生成器&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;你想构建属于你自己的静态网站生成器（Static Site Generator）吗？在本文，你讲学习到如何使用&lt;code&gt;Python&lt;/code&gt;构建你自己的静态网站生成器,创建一个博客并免费部署到&lt;code&gt;Netlify&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;双十一服务器优惠？不!有免费！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;http://nolannicholson.com/looper.html&quot;&gt;无缝循环音乐&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;我写了&lt;code&gt;Python&lt;/code&gt;脚本，它可以自动确定循环点，让你无缝永久循环&lt;code&gt;.mp3&lt;/code&gt;文件。这意味着你现在可以重复听你喜欢的游戏音乐，永远！这听起来就像在游戏里！该篇文章对我为什么要做和如何做的给出了具体的解释。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;兴趣使人进步~主要就是利用傅里叶变换进行音频相似性检测~然后拼接音频（
好了，不一本正经的胡说八道了，如果你也有如此需求！那么！go！）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://blog.soshace.com/en/python/python-array-explained-and-visualized/&quot;&gt;Python Array 的解释与可视化&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在本指南，我们将深入探讨&lt;code&gt;Python arrays&lt;/code&gt;是如何工作的，已经它们的局限性和你如何最大化效率地使用它们。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;array 来了 dequeue 还会远吗！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://dotweak.com/2019/10/20/how-to-create-a-keylogger-for-linux-using-python-WmtRYVJ3Wm9xZmlwRkE1eWRCY05YZz09&quot;&gt;如何用Python为Linux创建Keylogger&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;你想知道黑客是如何轻易地发现有价值的数据吗？他们的秘密和工具是什么？以及最重要的是我们如何防止我们的个人隐私不被偷窃？在这篇文章中，我们重点介绍&lt;code&gt;Keylogger&lt;/code&gt;和如何用&lt;code&gt;Python&lt;/code&gt;用一种简单的方式创建它。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;入门 &lt;code&gt;Hacker&lt;/code&gt; ？记上小本本，键盘记录器，保护隐私！当然选择保护隐私！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=WSLSRrhFD6U&quot;&gt;5分钟用Python制作一个品牌二维码&lt;/a&gt;&lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;&lt;/h4&gt;
&lt;p&gt;在该视频，我们会学习如何设计你自己的二维码，并把在你的名片，宣传资料或者你的在线社交媒体之中使用它。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;视频真只有5分钟！并且只有一半时间在写代码！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://medium.com/sicara/deep-learning-memory-usage-and-pytorch-optimization-tricks-e9cab0ead93&quot;&gt;深度学习内存使用和Pytorch优化技巧&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;阐明了CUDA内存不足错误背后的原因，并举例说明如何在Pytorch中使用几行代码将内存占用减少80％。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;内存内存还是内存~内存啊，你什么时候能不要钱！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=5tWIxBcvy10&quot;&gt;异步Python指南：网页抓取之同步VS异步（能快10倍！）&lt;/a&gt;&lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt; (10min)&lt;/h4&gt;
&lt;p&gt;你是异步编程萌新吗？你已经看过了&lt;code&gt;python&lt;/code&gt;基础资料，并在寻找能增加&lt;code&gt;python&lt;/code&gt;知识和各种情况下的&lt;code&gt;python&lt;/code&gt;经验的地方？那么你来对了地方！该指南以第一篇教程中学到的&lt;code&gt;Async Python&lt;/code&gt;为基础，去编写一个同步和异步的网页爬虫。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=6kNzG0T44SI&quot;&gt;第一篇异步教程地址&lt;/a&gt;&lt;br /&gt;
异步异步来啦！使用的是 3.7.4 最新的异步教学~~最新的哦！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://t.co/OoSgXJWldi&quot;&gt;使用 Python 制定环球旅行计划？&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;如何使用&lt;code&gt;Python&lt;/code&gt;中的&lt;code&gt;Basemap&lt;/code&gt; 和 &lt;code&gt;Netwokx&lt;/code&gt;包去制定你的环球旅程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;今天你 Python 了吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://pbpython.com/currency-cleanup.html&quot;&gt;使用 Pandas 清理货币数据&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;这篇文章包含了几个使用&lt;code&gt;pandas&lt;/code&gt;清除混乱的货币数据的小技巧，这样你就可以将数据转化为数字格式用来做进一步分析。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;货币数据清理，希望我也有很多的货币数据～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.twilio.com/blog/broadcast-sms-text-messages-python-3-django&quot;&gt;如何使用Python3 Django框架发送SMS消息&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在本篇指南中我们会学习如何使用&lt;code&gt;Django&lt;/code&gt;框架构建一个能发送多条 SMS 信息的&lt;code&gt;Python3 web 应用&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;面向Django发送短信 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://hodovi.ch/blog/adding-charts-django-admin/&quot;&gt;给Django后台管理增加图表&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Django&lt;/code&gt; 为 &lt;code&gt;db&lt;/code&gt;管理提供了一套带有 CRUD 接口的开箱即用的功能管理UI。这解决了大多数的基本内容和用户管理系统的大部分需求。但是，它并没有可以显示概要或者历史数据的探索性视图，而这正是你想从后台管理仪表盘看到的。幸运的是，&lt;code&gt;Django&lt;/code&gt;后台管理是可扩展的，只要经过一些小的调整，我们就可以为后台管理增加&lt;code&gt;Javascript 图表&lt;/code&gt;接口。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;哪里不够加哪里。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.evanjones.ca/app-engine-db-serialization.html&quot;&gt;跟踪App Engine 上的 Python 性能 BUG&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;在本文中，我将讨论我们如何使用&lt;code&gt;traces 和 logging&lt;/code&gt;去发现这个问题，之后用&lt;code&gt;Google&lt;/code&gt;的代码作为猴子补丁去修复这个 BUG。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;BUG修了吗～如何跟踪并查找BUG&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://tech.marksblogg.com/faster-zip-decompression-unzip-deflate-zlib-crc32-adler32-7zip-archiver.html&quot;&gt;更快的 ZIP 解压&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;这篇文章介绍了作者能够找到的最快的解压ZIP文件的方法之路。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;硅谷？ 谷硅？Pied Piper？ Piper Pied？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://siujoeng-lau.com/2019/09/dns-over-https/#more-1016&quot;&gt;使用 DNS-OVER-HTTPS 保护你的隐私: 介绍及Python实现&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;保护隐私～从 Python 做起&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-build-a-django-and-gunicorn-application-with-docker&quot;&gt;如何使用 Docker 构建一个 Django 和 Gunicorn 应用&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Django 部署教学&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://medium.com/@alex.wauters/5-learnings-from-making-a-chatbot-count-free-parking-spots-through-cameras-f80a7af4f579&quot;&gt;让聊天机器人通过摄像头找出免费停车位的5条经验&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;程序员的变懒之路～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://thoughts.willcipriano.com/weird-python-tricks/&quot;&gt;一些在Python中你可以做但是不应该做的奇怪的操作&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;一些底层接口&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.pyimagesearch.com/2019/10/28/3-ways-to-create-a-keras-model-with-tensorflow-2-0-sequential-functional-and-model-subclassing/&quot;&gt;用 TensorFlow 2.0 创建 Keras 模型的 3 种方式&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;2.0教程来了，3.0还会远吗&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://gist.github.com/shakna-israel/03172c2c06e1f6622764541dc8b4246b&quot;&gt;Python混淆&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;我被混淆了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;书籍&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/#python-opengl-for-scientific-visualization&quot;&gt;Python &amp;amp; OpenGL for Scientific Visualization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;该书的目标是让&lt;code&gt;Python&lt;/code&gt;程序员上手&lt;code&gt;OpenGL&lt;/code&gt;,提供了最新的&lt;code&gt;OpenGL&lt;/code&gt;介绍及一系列基础和进阶的技术，以实现快速、可伸缩性和漂亮的科学可视化。&lt;/p&gt;
&lt;h2&gt;有趣的项目、工具和库&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/kovidgoyal/kitty&quot;&gt;kitty&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;一个跨平台，快速，全功能的基于&lt;code&gt;GPU&lt;/code&gt;的终端模拟器。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;终端爱好者的胜利&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/joelbarmettlerUZH/auto-tinder&quot;&gt;Auto-Tinder&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;为你训练一个自动完成 tinder 的人工智能。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;自动 tinner，最为致命&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/evildmp/BrachioGraph&quot;&gt;BrachioGraph&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;BrachioGraph 是一个非常便宜（总材料花费：€14）的绘图仪，用很少的技能就能构建。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不想画画？ &lt;code&gt;Python&lt;/code&gt; 来凑&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/instaloader/instaloader&quot;&gt;instaloader&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;从 &lt;code&gt;Instagram&lt;/code&gt;下载图片（或者视频）及他们的标题以及元数据。&lt;a href=&quot;https://github.com/rodartha/ColorPalette/&quot;&gt;ColorPalette&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/rodartha/ColorPalette/&quot;&gt;ColorPalette&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;从任何图片查找主色调。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;之前在 trending 看到过，百宝箱。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/facebookresearch/SlowFast&quot;&gt;PySlowFast&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;PySlowFast&lt;/code&gt; 是一个来自&lt;code&gt;FAIR&lt;/code&gt;开源的视频理解代码库。它提供了最先进的视频分类模型，包括了论文&lt;code&gt;SlowFast Networks for Video Recognition&lt;/code&gt; 和 &lt;code&gt;Non-local Neural Networks.&lt;/code&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学术+工业？&lt;/p&gt;
&lt;p&gt;如图，看一看前沿的操作：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;421ava_demo.gif&quot; src=&quot;https://i.loli.net/2019/11/03/xgYCfMuZI6o5TGy.gif&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/apryor6/flask_api_example&quot;&gt;flask_api_example&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;大型&lt;code&gt;Flask API&lt;/code&gt;项目的最佳实践演示。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;别犹豫了，你们要的来了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/skamieniarz/pypong&quot;&gt;PyPong&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;用&lt;code&gt;Python&lt;/code&gt;和&lt;code&gt;pyxel&lt;/code&gt;实现的稍作修改的克隆版，经典的&lt;code&gt;Pong&lt;/code&gt;游戏。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;复古与回忆～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/napari/napari&quot;&gt;napari&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;用&lt;code&gt;Python&lt;/code&gt;实现的一个快速，可交互的多维图片查看器。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;还在 alpha 阶段，还是一张图了解一下（什么不好用就造什么！）～&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;421screenshot-add-image.png&quot; src=&quot;https://i.loli.net/2019/11/03/5J6xLwNAgrlV8KU.png&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://github.com/DerRiedi/WhatsApp_emoji_ranker&quot;&gt;WhatsApp_emoji_ranker&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;一个简单的程序，可以解析从&lt;code&gt;Whatsapp&lt;/code&gt;导出的&lt;code&gt;.txt&lt;/code&gt;文件，并且提取&lt;code&gt;emojis&lt;/code&gt;并根据其频率生产条形图（使用的：&lt;code&gt;matplotlib&lt;/code&gt;）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一张图快速了解～&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;421emoji_hist.png&quot; src=&quot;https://i.loli.net/2019/11/03/VSmNHwBW9ru8pOc.png&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;活动和网络研讨会日程&lt;/h2&gt;
&lt;h4&gt;&lt;a href=&quot;https://2019.pycon.ca/&quot;&gt;PyCon Canada 2019&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;想让你自己沉迷于两天的精彩演讲、特别的主题演讲，不可思议的赞助商，以及其他兴趣相似的&lt;code&gt;Pythonista&lt;/code&gt;吗？&lt;/p&gt;
&lt;p&gt;想要了解更多？加入我们周一和周二（11月 18-19）的开发&lt;code&gt;sprints&lt;/code&gt;，一个你和你的&lt;code&gt;Python&lt;/code&gt;小伙伴可以在有趣的团队氛围中参与开源的个人项目的地方。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;心动不如心动！踏上 2019 的末班车～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://www.meetup.com/PyDataCharlotte/events/265952190/&quot;&gt;Effortless REST W/ Flask - Charlotte, NC&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;你是&lt;code&gt;Python&lt;/code&gt;新手，并想自己构建一些很酷的东西吗？你想知道构建真实为生产环境准备的&lt;code&gt;API&lt;/code&gt;需要什么吗？你对如何通过&lt;code&gt;API&lt;/code&gt;实现你最新的想法有疑问吗？你想在45分钟实现吗？如果是的，这次的&lt;code&gt;talk&lt;/code&gt;就是为你准备的！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;教练！我想做&lt;code&gt;API&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Posa：&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(Posa私人无责任播报)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a href=&quot;https://blog.dropbox.com/topics/company/thank-you--guido&quot;&gt;Guido 从 Dropbox 退休了&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;10月29日，Dropbox 发了该文章。&lt;code&gt;Guido&lt;/code&gt;也正式退休了（辛苦啦,当然只是工作退休~依然会在社区活跃！）。文章简介了&lt;code&gt;Dropbox 与 Guido 高的相遇。到 Guido 参与 mypy 的的开发，最后到帮助女性工程师提升社区地位。&lt;/code&gt;大家有兴趣可以读一读。&lt;br /&gt;
We wish him the best in his retirement. Thank you, Guido! &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;引用一下文章结尾~千言万语，汇成一句话。感谢 Guido ，您辛苦啦！ &lt;br /&gt;
让我们大声地说出: &lt;strong&gt;Life is short, you need Python!&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;----- 分割线 -----&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你发现哪里翻译有误的话，请务与我联系！感谢！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/python-weekly/pyw-420.html&quot;&gt;pythonista-weekly~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;改进: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/python-weekly/issue#421.md&quot;&gt;issue-392.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2019-11-10T08:42:53+00:00</updated>
		</source>
	</entry>

</feed>
