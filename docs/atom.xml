<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">

	<title>Planet DebugUself</title>
	<link rel="self" href="http://planet.du.zoomquiet.us/atom.xml"/>
	<link href="http://planet.du.zoomquiet.us/"/>
	<id>http://planet.du.zoomquiet.us/atom.xml</id>
	<updated>2021-04-27T08:42:38+00:00</updated>
	<generator uri="http://www.planetplanet.org/">Planet/2.0 +http://www.planetplanet.org</generator>

	<entry>
		<title type="html">慢慢走出对岭的迷恋</title>
		<link href="https://ericazhan.github.io/210425word_of_honor.html"/>
		<id>https://ericazhan.github.io/210425word_of_honor.html</id>
		<updated>2021-04-25T00:00:00+00:00</updated>
		<content type="html">&lt;p&gt;其实下山的路很简单：放下手机，和爱人去阳光下走走。&lt;/p&gt;</content>
		<author>
			<name>erica</name>
			<uri>https://ericazhan.github.io</uri>
		</author>
		<source>
			<title type="html">erica</title>
			<subtitle type="html">未来从现实生长.</subtitle>
			<link rel="self" href="https://zhanluyan.com/rss.xml"/>
			<id>https://zhanluyan.com/rss.xml</id>
			<updated>2021-04-25T00:42:34+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Issue 469</title>
		<link href="https://weekly.pychina.org/issue/issue-469.html"/>
		<id>tag:weekly.pychina.org,2021-04-21:/issue/issue-469.html</id>
		<updated>2021-04-21T01:53:19+00:00</updated>
		<content type="html">&lt;blockquote&gt;
&lt;p&gt;200 行 Python 检验基本音乐理论&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://pycoders.com/issues/469&quot;&gt;PyCoder's Weekly - Issue #469&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;pycoder&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-06-03-pycoder-s-weekly.png&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;210421 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 42 分钟 完成快译&lt;/li&gt;
&lt;li&gt;210421 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 37 分钟 完成格式转抄.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6145/web&quot;&gt;通过阅读代码进行学习: Python 标准库设计决策解释&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ADRIAN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Along your Python learning journey, someone may have told you that a great way to level up your skills is to read code written by other people. That’s definitely true, but it’s not easy to find good sources of code to read and study. Python offers some advantages here because not only is the code open source, but the discussion surrounding design decisions is public, too.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;阅读代码?
其实, 就是用经验在运行代码.
如果经验不足以理解,
那就应该第一时间真实运行起来...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6141/web&quot;&gt;用 Python 和 Keras 学习文本分类&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON &lt;/li&gt;
&lt;li&gt;course&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn about Python text classification with Keras. Work your way from a bag-of-words model with logistic regression to more advanced methods leading to convolutional neural networks. See why word embeddings are useful and how you can use pretrained word embeddings. Use hyperparameter optimization to squeeze more performance out of your model.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Keras&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2021-04-21-ScreenShot%202021-04-21%2008.55.20.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;纱翁总是逃不了的,
只是在中国, 很少有团队拿毛选来作分析数据...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6146/web&quot;&gt;流利的Django: 应该知道的 8个 Django 模板标签&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GIRL THAT LOVES TO CODE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Django template language has some powerful features that can simplify your templates and solve a number of problems. Learn about eight template tags that you might not have heard of in this listicle that’s full of practical examples.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;从终极 -&amp;gt; 精通 -&amp;gt; 流畅 -&amp;gt; ...&lt;/p&gt;
&lt;p&gt;技术界的用词总是一阵阵儿的...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6135/web&quot;&gt;Python 3.10 将包含改进的错误消息&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;TWITTER.COM/PYBLOGSAL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you mistype an attribute name, you’ll get suggestions from existing attributes!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6158/web&quot;&gt;PSF 正在招聘 Python 打包项目经理!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PYTHON SOFTWARE FOUNDATION&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;总&lt;strong&gt;包&lt;/strong&gt;工头&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6136/web&quot;&gt;Flask 2.0 即将推出/已可进行测试&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;REDDIT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6134/web&quot;&gt;Google 成为 PSF 的第一个有远见的赞助商&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TWITTER.COM/THEPSF&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;探讨/吐糟&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Discussions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6153/web&quot;&gt;PEP 563, PEP 649, 和 pytantic 的未来&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/SAMUELCOLVIN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 3.7 introduced postponed evaluation of type annotations behind the from future import &lt;strong&gt;annotations&lt;/strong&gt; switch, a feature originally proposed in PEP 563. Libraries like pydantic, used extensively in the popular FastAPI framework, have found it difficult to support PEP 563, which is set to become the default in Python 3.10. A new PEP aims to alleviate some of the issues, but sentiment is mixed.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;无论 Python 怎么升级,
Py2.7.10 总是好用的.&lt;/p&gt;
&lt;p&gt;嘦 老爹不死, 总是可以号称 Pythonic 的...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6144/web&quot;&gt;为毛 Python 返回 [15] 当 [0xfor x in (1, 2, 3)] ?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;STACK OVERFLOW&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you thought this unusual expression would return an error, you’re not alone. There’s actually a lot of nuance to how this works, and would probably trip up even experienced Python devs. See this tweet from Ned Batchelder for even more discussion.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这类为毛系统质问, JS 世界最多...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;文章/教程/嗯哼&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Articles, Tutorials and Talks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6138/web&quot;&gt;200 行 Python 代码检验基本音乐理论&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MANOHAR VANGA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Music has always had a close relationship with mathematics and makes heavy use of repeated patterns and formulas. These characteristics make music ripe for investigation with code. This article covers some of the basics of Western music theory with examples in Python. The article is quite accessible — no knowledge of reading sheet music needed! After you’ve read the article, check out the discussion on Hacker News.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;有趣...&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Aeolian'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Eb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'F'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'G'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Ab'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Bb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;s1&quot;&gt;'Dorian'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Eb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'F'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'G'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Bb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;s1&quot;&gt;'Ionian'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'E'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'F'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'G'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;s1&quot;&gt;'Locrian'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Db'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Eb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'F'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Gb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Ab'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Bb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;s1&quot;&gt;'Lydian'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'E'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'F#'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'G'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;s1&quot;&gt;'Mixolydian'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'E'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'F'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'G'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Bb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;s1&quot;&gt;'Phrygian'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Db'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Eb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'F'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'G'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Ab'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Bb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;用程序自动生成和弦?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6168/web&quot;&gt;Python vs Java 中 OrderedDict 与 dict 以及面向对象的编程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON &lt;/li&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Are you looking for a bit of order when working with dictionaries in Python? Are you aware that the Python dict has changed over the last several versions and now keeps items in order? Could you learn more about object-oriented programming in Python by comparing it to another language? Find out more in this week’s installment of the Real Python Podcast.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;56&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2021-04-21-ScreenShot%202021-04-21%2008.49.03.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;毫无感觉就到56期了,
自怼圈也是,
这周6已经是第210次直播了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6163/web&quot;&gt;用 Python 理解和生成 UPC-A 条形码&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;YASOOB KHALID&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have you ever wondered how the barcodes you see on products work? Did you know that the first barcodes originated from Morse code? This article teaches you how UPC-A barcodes, one of the current barcode standards, work and how you can create them from scratch using Python.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Barcode&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2021-04-21-ScreenShot%202021-04-21%2008.50.24.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;这是一个大家族...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6142/web&quot;&gt;用 Heroku 部署 Python Flask 应用示例&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this step-by-step tutorial, you’ll learn how to create a Python Flask example web application and deploy it using Heroku. You’ll also learn how to set up Heroku Pipelines to create a deployment workflow with staging and production environments.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Heroku&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2021-04-21-ScreenShot%202021-04-21%2008.46.26.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Heroku 的确是个令人愉快的游乐场,
但是, 真心不是一个可作生产环境的地方...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6152/web&quot;&gt;在命令行构建 Python 的目录树生成器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this step-by-step project, you’ll create a Python directory tree generator application for your command line. You’ll code the command-line interface with argparse and traverse the file system using pathlib.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Directory&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2021-04-21-ScreenShot%202021-04-21%2008.44.24.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;tree 指令的山寨过程...&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;CLI&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2021-04-21-ScreenShot%202021-04-21%2008.45.31.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;好物/妙品/...&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Interesting Projects, Tools and Libraries, Projects &amp;amp; Code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6157/web&quot;&gt;splitflap: DIY Split-Flap 式显示&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/SCOTTBEZ1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Split-Flap&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2021-04-21-ScreenShot%202021-04-21%2008.43.13.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Hard core, 没用任何公板,
从0设计制造.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6164/web&quot;&gt;TTS: 用于语音合成的深度学习工具包&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/COQUI-AI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6133/web&quot;&gt;PyCall.jl: 从 Julia 语言调用 Python 函数&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/JULIAPY&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Julia 想说: &lt;strong&gt;やめて&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6137/web&quot;&gt;collie_recs: PyTorch 中的深度学习混合推荐系统&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/SHOPRUNNER &lt;/li&gt;
&lt;li&gt;• Shared by Nathan Jones&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6148/web&quot;&gt;bodywork-core: 将机器学习项目部署到 Kubernetes 的 MLOps 工具&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/BODYWORK-ML&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;K8s 的复杂, 促进了工具市场的嗯哼...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6147/web&quot;&gt;simplematch: 最小/超级可读的字符串模式匹配&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/TFELDMANN &lt;/li&gt;
&lt;li&gt;• Shared by Thomas Feldmann&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;simplematch&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sm&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mood_convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;smiley&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;moods&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;:)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;good&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;:(&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bad&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;:/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sceptic&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;smiley&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;register_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;smiley&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;:[\)\(\/]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mood_convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;I'm feeling {mood:smiley} *&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;I'm feeling :) today!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;mood&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;good&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;怎么也学习不会正则表达式的福音...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;📆🐍 活动/大会&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Events, MeetUp 真的是全球线下活动组织中心&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/6140/web&quot;&gt;⋅ Real Python Office Hours (Virtual)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;March 31, 2020&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;即便是线上的, 一样收费.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;p&gt;-&lt;a href=&quot;https://pycoders.com/link/6119/web&quot;&gt;⋅ GeoPython 2021&lt;/a&gt;
    + April 22 – 24, 2021&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/5809/web&quot;&gt;⋅ PyCon Israel 2021 (Virtual)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;May 2 – 3, 2021&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;以色列, 全球创新热点地区...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/5590/web&quot;&gt;⋅ PyCon 2021 (Virtual)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;May 12 – 18, 2021&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;反正很早都上 油管了, 随时可以 review,
当然, 这个随时, 随时了很多年都没刷光.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/5680/web&quot;&gt;⋅ DjangoCon Europe 2021&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;June 2 – 6, 2021&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/6052/web&quot;&gt;⋅ PyCon India 2021&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;September 17 – 20, 2021&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;DAMA&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gruns/icecream&quot;&gt;gruns/icecream: 🍦 Never use print() to debug again.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;github&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;独创 logging + debug 模块&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://space.bilibili.com/272001170/&quot;&gt;沈崴的个人空间 -  ( ゜- ゜)つロ 乾杯~ Bilibili&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;哔哩哔哩&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;老司机开新坑, 时隔10年,
沈游侠再次开声, 值得关注:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Bilibili&quot; src=&quot;httpstp://ydlj.zoomquiet.top/ipic/2021-01-06-ScreenShot%202021-01-06%2010.14.10.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.101.camp/ts/190130-jump-into-ssl/&quot;&gt;如何持证 (SSL) 开车 — 蟒营™ 怂怼录&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;UPYUN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;私人初体验,
现在 http/https 资源混用浏览器越来越傲娇了,
最好有工具可以统一迁移...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;PS:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/issue/issue-469.html&quot;&gt;Issue 469 ~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;修订: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/Issue/issue-469.md&quot;&gt;issue-469.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;好文笔,感叹号年度配额: &lt;strong&gt;2/3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;投稿/反馈邮箱:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;askdama@googlegroups.com&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(邮件列表地址, 
当成正常邮件发送邮件就好, 不用注册, 不用翻越...)&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;ZoomQuiet/&lt;strong&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/N5TuRRbF485D4Q90XdDA7g&quot;&gt;大妈&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;就是四处 &lt;code&gt;是也乎,(￣▽￣)&lt;/code&gt; 的那个&lt;a href=&quot;https://mp.weixin.qq.com/s/N5TuRRbF485D4Q90XdDA7g&quot;&gt;大妈&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;私自嗯哼&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZoomQuiet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZoomQuiet42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;公开课程&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;蟒营&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mainium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;历史吐糟&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Chaos42&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PythoniCamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;创始组织者&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PyChina&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyChinaOrg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;本地社区&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;GDG珠海&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GDG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ZhuHai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TFUG珠海&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;订阅号&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ZH_TFUG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;NN 4341&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt=&quot;RPP&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-05-13-real-python-logo-square.28474fda9228.png?imageView2/2/w/469&quot; /&gt;&lt;/p&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>https://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="https://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>https://weekly.pychina.org/</id>
			<updated>2021-04-21T08:43:08+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">pythonista-weekly : Pyw 495</title>
		<link href="https://weekly.pychina.org/python-weekly/pyw-495.html"/>
		<id>tag:weekly.pychina.org,2021-04-16:/python-weekly/pyw-495.html</id>
		<updated>2021-04-18T02:25:03+00:00</updated>
		<content type="html">&lt;h3&gt;欢迎阅读《pythonista周刊》第495期。Let us start!&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://mailchi.mp/pythonweekly/python-weekly-issue-495&quot;&gt;https://mailchi.mp/pythonweekly/python-weekly-issue-495&lt;/a&gt;&lt;br /&gt;
翻译：Dustyposa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;来自赞助商（PS：原文的赞助商）:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://click.linksynergy.com/link?id=x9UsEHf2tls&amp;offerid=507388.970600&amp;type=2&amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Frest-api-flask-and-python%2F&quot;&gt;REST APIs with Flask and Python&lt;/a&gt;
Build professional REST APIs with Python, Flask, Flask-RESTful, and Flask-SQLAlchemy&lt;/p&gt;
&lt;h3&gt;新闻&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://pyfound.blogspot.com/2021/04/the-psf-is-hiring-python-packaging.html&quot;&gt;The PSF is hiring a Python Packaging Project Manager!&lt;/a&gt;
Thanks to a two-year grant commitment from Bloomberg, our second 2021 Visionary Sponsor and a long term committed supporter of the Python ecosystem, The Python Software Foundation (PSF) is hiring a full-time project and community manager for the Python Packaging ecosystem, with a specific focus on the Python Package Index (PyPI).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.nvidia.com/blog/unifying-the-cuda-python-ecosystem/&quot;&gt;Unifying the CUDA Python Ecosystem&lt;/a&gt;
到目前为止，通过 &lt;code&gt;Python&lt;/code&gt; 访问 &lt;code&gt;CUDA&lt;/code&gt; 和 &lt;code&gt;NVIDIA GPU&lt;/code&gt; 只能通过第三方软件来实现，例如 &lt;code&gt;Numba、CuPy、Scikit-CUDA、RAPIDS、PyCUDA、PyTorch&lt;/code&gt; 或 &lt;code&gt;TensorFlow&lt;/code&gt; 等等。每个人都在 &lt;code&gt;CUDA API&lt;/code&gt; 和 &lt;code&gt;Python&lt;/code&gt; 之间写了自己的互操作层。通过发布 &lt;code&gt;CUDA  Python&lt;/code&gt;，英伟达让这些平台提供商能够专注于自己的增值产品和服务。英伟达还希望降低其他 &lt;code&gt;Python&lt;/code&gt; 开发者使用英伟达 &lt;code&gt;GPU&lt;/code&gt; 的准入门槛。&lt;/p&gt;
&lt;h3&gt;文章、教程与话题&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://anthonynsimon.com/blog/one-man-saas-architecture/&quot;&gt;一个人科技创业公司背后的架构&lt;/a&gt;
非常棒的一篇文章，从负载均衡刀任务监控及订阅，完全剖析了 &lt;code&gt;SaaS&lt;/code&gt; 的背后。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.emilwallner.com/p/ml-rig&quot;&gt;How I built a €25K Machine Learning Rig&lt;/a&gt;
如何规划、购买、构建和存储你的2-10台 &lt;code&gt;GPU&lt;/code&gt; 机器学习服务器和 &lt;code&gt;PC&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://simonwillison.net/2021/Apr/12/porting-vaccinateca-to-django/&quot;&gt;Porting VaccinateCA to Django&lt;/a&gt;
最初，&lt;code&gt;VaccinateCA&lt;/code&gt; 是由一个严重定制的 &lt;code&gt;Airtable&lt;/code&gt; 实例驱动的，伴随着一个定制的 &lt;code&gt;JavaScript&lt;/code&gt; 应用程序的调用者，通过一些 &lt;code&gt;Netlify&lt;/code&gt; 函数与 &lt;code&gt;Airtable API&lt;/code&gt; 通信。了解它是如何被移植到一个新的自定义 &lt;code&gt;Django&lt;/code&gt; 后端，运行在 &lt;code&gt;PostgreSQL&lt;/code&gt; 之上。 &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hackernoon.com/how-to-use-a-fastapi-abstraction-to-query-aws-data-lake-4k3m35uq&quot;&gt;如何使用FastAPI抽象来查询AWS数据湖&lt;/a&gt;
数据湖提供了无数的好处。它们是不可知的数据，不需要你预先定义一个模式。然而，如果没有一个合适的结构，要找到你需要的数据可能会很困难。在本文中，我们将通过创建一个 &lt;code&gt;FastAPI&lt;/code&gt; 抽象来解决这个问题，使我们能够查询 &lt;code&gt;AWS Glue&lt;/code&gt; 元数据目录。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=vBH6GRJ1REM&quot;&gt;Python的dataclasses将为你节省时间，还具有attrs的特点&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://mcusercontent.com/e2e180baf855ac797ef407fc7/images/af76283a-6e65-436c-967a-900427cf6399.png&quot; /&gt;
在这个视频中，我们了解了数据类以及如何使用它们，以及数据类所基于的相关 &lt;code&gt;attrs&lt;/code&gt; 库。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.co/zLx6DyRmMb&quot;&gt;Python Typing with mypy&lt;/a&gt;
大型代码库上的渐进式类型检查。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cs.rpi.edu/~milanova/docs/dls2020.pdf&quot;&gt;Python 3 Types in the Wild: A Tale of Two Type Systems&lt;/a&gt;
本文探讨了开发者如何使用这些类型注释，类型检查和推理工具提供的类型系统语义，以及这些工具的性能。我们在 &lt;code&gt;GitHub&lt;/code&gt; 公共仓库的语料库上评估了这些类型和工具。我们回顾了 &lt;code&gt;MyPy&lt;/code&gt; 和 &lt;code&gt;PyType&lt;/code&gt; 这两个典型的静态类型检查和推理工具，以及它们不同的类型分析方法。然后，我们讨论了三个研究问题。(i) 开发者使用 &lt;code&gt;Python 3&lt;/code&gt; 类型的频率和方式是什么？(ii) 开发者会犯哪些类型错误？(三) 不同工具的类型错误如何比较？&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.vortexa.com/insight/integrating-rust-into-python&quot;&gt;Integrating Rust into Python&lt;/a&gt;
这篇文章详细介绍了将 &lt;code&gt;Rust&lt;/code&gt; 与 &lt;code&gt;Python&lt;/code&gt; 集成的具体机制，以提高性能，而且不费吹灰之力。 &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tanelp.github.io/posts/a-bug-that-plagues-thousands-of-open-source-ml-projects/&quot;&gt;Using PyTorch + NumPy? You're making a mistake.&lt;/a&gt;
一个困扰着成千上万的开源 &lt;code&gt;ML&lt;/code&gt; 项目的 &lt;code&gt;bug&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://rachitsingh.com/deep-learning-model-compression/&quot;&gt;深度学习模型压缩&lt;/a&gt;
这篇文章涵盖了从2021年3月开始在广度和深度上的模型推理优化或压缩。这包括像模型量化和二值化这样的工程主题，像知识提炼这样的更面向研究的主题，以及众所周知的小技巧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.co/SSCIDe3qhI&quot;&gt;如何使用Python创建像3Blue1Brown这样的数学动画&lt;/a&gt;
利用你的 &lt;code&gt;Python&lt;/code&gt; 技能来创建美丽的数学动画。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL0dOL8Z7pG3L4hi2SLJqojxshXNtsJQ_r&quot;&gt;Python + AWS Lambda&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://mcusercontent.com/e2e180baf855ac797ef407fc7/images/af76283a-6e65-436c-967a-900427cf6399.png&quot; /&gt;
该系列将涵盖。编写一个 &lt;code&gt;Python&lt;/code&gt; 脚本，从 &lt;code&gt;API&lt;/code&gt; 中提取当前一天的天气情况，将脚本打包到 &lt;code&gt;Docker&lt;/code&gt; 容器中，使用 &lt;code&gt;CI/CD&lt;/code&gt; 自动将 &lt;code&gt;Docker&lt;/code&gt; 容器推送到 &lt;code&gt;AWS&lt;/code&gt; 上，在 &lt;code&gt;AWS Lambda&lt;/code&gt; 上运行，安排 &lt;code&gt;AWS Lambda&lt;/code&gt; 函数自动运行，编写基础设施 &lt;code&gt;YAML&lt;/code&gt; 文件自动创建组件。 &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lifewithdata.com/2021/04/02/how-to-build-machine-learning-pipeline-with-scikit-learn-and-why-is-it-essential/&quot;&gt;如何用Scikit-Learn构建机器学习流水线？又为何必不可少？&lt;/a&gt;
在这篇文章中，你将了解什么是管道，如何使用 &lt;code&gt;scikit-learn&lt;/code&gt; 管道？如何用流水线进行网格搜索和特征选择？如何用流水线进行列式变换？&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.makeuseof.com/getting-started-micropython-raspberry-pi-pico/&quot;&gt;Raspberry Pi Pico上的MicroPython入门指南&lt;/a&gt;
&lt;code&gt;Pi&lt;/code&gt; 基金会的第一个微控制器来了! 学习如何使用 &lt;code&gt;MicroPython&lt;/code&gt; 对它进行编程。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=FYfX9Wn76_E&quot;&gt;如何用Python和Telegram烹饪&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://mcusercontent.com/e2e180baf855ac797ef407fc7/images/af76283a-6e65-436c-967a-900427cf6399.png&quot; /&gt;
冰箱里有一些材料，但不知道做什么？有心情来一杯新的、有趣的鸡尾酒？我们将在这个手把手的 &lt;code&gt;python&lt;/code&gt; 教程中把这些都构建成一个 &lt;code&gt;telegram&lt;/code&gt; 机器人。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://rk.edu.pl/en/scripting-machine-vision-and-astronomical-cameras-python/&quot;&gt;在Python中编写机器视觉和天文相机的脚本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;https://emasquil.github.io/posts/multithreading-boto3/&quot;&gt;用多线程和Boto3从S3下载文件&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.kchung.co/faster-python-with-go-shared-objects/&quot;&gt;用Go共享对象实现更快的Python (简单的方法)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.co/OtU9TOnihS&quot;&gt;A Bot that Bird Watches so You Don’t Have To&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://death.andgravity.com/stdlib&quot;&gt;通过阅读代码学习。Python标准库设计决策解读(适合高级初学者)&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;有趣的项目、工具和库&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Granulate/gprofiler&quot;&gt;gProfiler&lt;/a&gt;
&lt;code&gt;gProfiler&lt;/code&gt; 结合了多个采样剖析器，以统一的可视化方式显示 &lt;code&gt;CPU&lt;/code&gt; 所花费的时间，显示本地程序、 &lt;code&gt;Java&lt;/code&gt; 和 &lt;code&gt;Python&lt;/code&gt; 运行时和内 核例程的进程堆栈记录。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/open-mmlab/mmocr&quot;&gt;MMOCR&lt;/a&gt; 
基于 &lt;code&gt;PyTorch&lt;/code&gt; 和 &lt;code&gt;mmdetection&lt;/code&gt; 的工具箱，用于文本检测、文本识别以及相应的下游任务，包括关键信息提取。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/vijishmadhavan/SkinDeep&quot;&gt;SkinDeep&lt;/a&gt;
使用深度学习去除纹身。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://logica.dev/&quot;&gt;Logica&lt;/a&gt; 
&lt;code&gt;Logica&lt;/code&gt; 是一种逻辑编程语言，可以编译成 &lt;code&gt;StandardSQL&lt;/code&gt;，并在 &lt;code&gt;Google BigQuery&lt;/code&gt; 上运行。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/MatthiasValvekens/certomancer&quot;&gt;certomancer&lt;/a&gt;
使用简单的声明式配置快速构建、模拟和部署 &lt;code&gt;PKI&lt;/code&gt; 测试配置，包括 &lt;code&gt;CRL、OCSP&lt;/code&gt; 和时间戳服务配置。包括 &lt;code&gt;CRL、OCSP&lt;/code&gt; 和时间戳服务供应。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HarshCasper/Rotten-Scripts&quot;&gt;Rotten-Scripts&lt;/a&gt;
&lt;code&gt;Rotten Scripts&lt;/code&gt; 包含了用 &lt;code&gt;Python&lt;/code&gt;、&lt;code&gt;JavaScript&lt;/code&gt;、&lt;code&gt;Bash&lt;/code&gt;、&lt;code&gt;Powershell&lt;/code&gt; 等编写的令人惊奇和赞叹的脚本。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/authorizon/opal&quot;&gt;opal&lt;/a&gt;
&lt;code&gt;OPAL&lt;/code&gt; 是开放策略代理（&lt;code&gt;OPA&lt;/code&gt;）的管理层，实时检测策略和策略数据的变化，并向代理推送实时更新。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/heartexlabs/label-studio&quot;&gt;label-studio&lt;/a&gt;
&lt;code&gt;Label Studio&lt;/code&gt; 是一个开源的数据标签工具。它可以让你用简单直接的用户界面为音频、文本、图像、视频和时间序列等数据类型打上标签，并导出为各种模型格式。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/PythonOT/POT&quot;&gt;POT&lt;/a&gt;
一个为信号、图像处理和机器学习的最优传输相关优化问题提供若干解的库。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Layout-Parser/layout-parser&quot;&gt;layout-parser&lt;/a&gt;
一个用于文档布局理解的 &lt;code&gt;Python&lt;/code&gt; 库。 &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/patrick-kidger/torchtyping&quot;&gt;torchtyping&lt;/a&gt;
&lt;code&gt;PyTorch Tensors&lt;/code&gt; 的形状、&lt;code&gt;dtype&lt;/code&gt; 等运行时类型注释。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/snovvcrash/DivideAndScan&quot;&gt;DivideAndScan&lt;/a&gt; 
分割全端口扫描结果，并将其用于有针对性的 &lt;code&gt;Nmap&lt;/code&gt; 运行。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/mattogodoy/omni&quot;&gt;omni&lt;/a&gt;
一个非常轻量级的监控系统，用于运行 &lt;code&gt;Kubernetes&lt;/code&gt; 的 &lt;code&gt;Raspberry Pi&lt;/code&gt; 集群。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/breuleux/jurigged&quot;&gt;jurigged&lt;/a&gt;
对 &lt;code&gt;Python&lt;/code&gt; 进行热重载&lt;/p&gt;
&lt;h3&gt;最近更新&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.pypy.org/posts/2021/04/pypy-v734-release-of-python-27-and-37.html&quot;&gt;PyPy v7.3.4: release of Python 2.7 and 3.7&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;活动&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/PyBerlin/events/277541034/&quot;&gt;Virtual: PyBerlin 28&lt;/a&gt; 
将会有一个讲座，&lt;code&gt;Retro Gamedev&lt;/code&gt;：用 &lt;code&gt;Python&lt;/code&gt; 制作自己的 &lt;code&gt;NES&lt;/code&gt; 编译语言。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/PyLadiesDublin/events/276397145/&quot;&gt;Virtual: PyLadies Dublin Meetup April 2021&lt;/a&gt;
将会有以下话题:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NLP&lt;/code&gt; 中的偏见：利用语言学和计算机科学来提高 &lt;code&gt;AI/ML&lt;/code&gt; 的公平性。&lt;/li&gt;
&lt;li&gt;用 &lt;code&gt;Python&lt;/code&gt; 和 &lt;code&gt;Mako&lt;/code&gt; 自动化社交媒体内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/PyData-Berlin/events/277549703/&quot;&gt;Virtual: PyData Berlin Meetup April 2021&lt;/a&gt;
将会有以下话题:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How we task satellites to take pictures&lt;/li&gt;
&lt;li&gt;如何检测ML模型中的沉默故障&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/PyData-MTL/events/277244278/&quot;&gt;Virtual: PyData Montreal Meetup April 2021&lt;/a&gt;
将会有以下话题:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Pandas&lt;/code&gt; 的文本扩展&lt;/li&gt;
&lt;li&gt;Introducing Elyra: Extending JupyterLab for AI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Posa：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(Posa私人无责任播报)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;----- 分割线 -----&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你发现哪里翻译有误的话，请务与我联系！感谢！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/python-weekly/pyw-495.html&quot;&gt;pythonista-weekly~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;改进: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/python-weekly/issue%23495.md&quot;&gt;issue-495.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>https://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="https://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>https://weekly.pychina.org/</id>
			<updated>2021-04-21T08:43:08+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">pythonista-weekly : Pyw 494</title>
		<link href="https://weekly.pychina.org/python-weekly/pyw-494.html"/>
		<id>tag:weekly.pychina.org,2021-04-09:/python-weekly/pyw-494.html</id>
		<updated>2021-04-18T02:25:03+00:00</updated>
		<content type="html">&lt;h3&gt;欢迎阅读《pythonista周刊》第494期。Let us start!&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://mailchi.mp/pythonweekly/python-weekly-issue-494&quot;&gt;https://mailchi.mp/pythonweekly/python-weekly-issue-494&lt;/a&gt;&lt;br /&gt;
翻译：Dustyposa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;来自赞助商（PS：原文的赞助商）:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.programmerweekly.com/?utm_source=pwad&amp;utm_medium=newsletter&quot;&gt;Get Your Weekly Dose of Programming&lt;/a&gt; A weekly newsletter featuring the best hand curated news, articles, tutorials, talks, tools and libraries etc for programmers. &lt;a href=&quot;https://www.programmerweekly.com/?utm_source=pwad&amp;utm_medium=newsletter&quot;&gt;Join For Free&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;文章、教程与话题&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://the-stack-overflow-podcast.simplecast.com/episodes/anvil-python-web-programming-meredydd-luff-JxhSvP49&quot;&gt;Web programming with nothing but Python&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://mcusercontent.com/e2e180baf855ac797ef407fc7/images/9a9a57d0-eb4b-47f8-8af4-55ba50e8c350.png&quot; /&gt;
与 &lt;code&gt;Anvil&lt;/code&gt;  的 &lt;code&gt;CEO Meredydd Luff&lt;/code&gt; 聊了聊，他认为为什么。&lt;code&gt;Web&lt;/code&gt; 编程已经变得过于复杂。如果你想用  &lt;code&gt;Python&lt;/code&gt; 构建一个 &lt;code&gt;Web&lt;/code&gt; 应用，而不用担心数据库、服务器端代码或网页设计，是时候给  &lt;code&gt;Anvil&lt;/code&gt; 一个机会了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tenthousandmeters.com/blog/python-behind-the-scenes-10-how-python-dictionaries-work/&quot;&gt;Python behind the scenes #10: how Python dictionaries work&lt;/a&gt;
在本篇文章的第一部分，我们将设计一个简单的全功能哈希表，讨论它的能力和局限性，并概述设计一个在实践中运行良好的哈希表的一般方法。在第二部分中，我们将关注 &lt;code&gt;CPython&lt;/code&gt; 的具体实现，最后看看 &lt;code&gt;Python&lt;/code&gt; 字典在背后是如何工作的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://engineertodeveloper.com/dam-monitoring-dashboard-django/&quot;&gt;Big Bay Dam Monitoring Dashboard&lt;/a&gt;
在这个系列中，我们将使用 &lt;code&gt;Django&lt;/code&gt; 和第三方图表库构建一个水坝监测仪表盘。你将学习到：&lt;code&gt;Django&lt;/code&gt; 认证系统的基础知识，如何将 &lt;code&gt;Bokeh&lt;/code&gt; 与 &lt;code&gt;Django&lt;/code&gt; 集成到交互式绘图中，如何使用 &lt;code&gt;Leaflet&lt;/code&gt; 添加交互式地图，将 &lt;code&gt;Django REST&lt;/code&gt; 框架集成到现有的 &lt;code&gt;Django&lt;/code&gt; 项目中，以及如何将其整合到一起创建一个仪表盘。查看 &lt;a href=&quot;https://engineertodeveloper.com/big-bay-dam-monitoring-dashboard-part-2-project-setup/&quot;&gt;Part 2&lt;/a&gt;, &lt;a href=&quot;https://engineertodeveloper.com/big-bay-dam-monitoring-dashboard-part-3-dashboard-app-models/&quot;&gt;Part 3&lt;/a&gt; and &lt;a href=&quot;https://engineertodeveloper.com/big-bay-dam-monitoring-dashboard-part-4-views-and-basic-template-structure/&quot;&gt;Part 4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_5T70cAXDJ0&amp;t=1s&quot;&gt;C++ in Python the Easy Way!&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://mcusercontent.com/e2e180baf855ac797ef407fc7/images/af76283a-6e65-436c-967a-900427cf6399.png&quot; /&gt;
你可能需要知道的一切，都是为了编写 &lt;code&gt;Python&lt;/code&gt; 接口到 &lt;code&gt;C++&lt;/code&gt; 代码。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fluhus.github.io/snopher/&quot;&gt;snopher&lt;/a&gt;
关于使用 &lt;code&gt;ctypes&lt;/code&gt; 从 &lt;code&gt;Python&lt;/code&gt; 调用  &lt;code&gt;Go&lt;/code&gt; 的实用指南。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.miguelgrinberg.com/post/how-to-write-unit-tests-in-python-part-2-game-of-life&quot;&gt;How to Write Unit Tests in Python, Part 2: Game of Life&lt;/a&gt;
In this article I will introduce you to Conway's Game of Life, an interesting simulation that plays animated patterns on a grid. You will learn about Test parametrization, Building test matrices, Basic mocking and Testing Python exceptions.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://healeycodes.com/computer-vision-and-embroidery/&quot;&gt;Computer Vision and Embroidery&lt;/a&gt;
了解如何通过 &lt;code&gt;Python&lt;/code&gt; 使用计算机视觉来识别绣花框图像中使用了哪些  &lt;code&gt;DMC&lt;/code&gt; 线。 &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jessewarden.com/2021/04/errors-as-values.html&quot;&gt;Errors as Values&lt;/a&gt;
从意外的运行时异常中解脱出来 &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=alNU9AVWkQk&quot;&gt;从零开始 Pytthon 的区块链&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://mcusercontent.com/e2e180baf855ac797ef407fc7/images/af76283a-6e65-436c-967a-900427cf6399.png&quot; /&gt;
学习如何 &lt;code&gt;Python&lt;/code&gt; 从头开始构建一个简单的区块链，这样你就可以从更基础的层面了解它的工作原理。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://superlou.github.io/action-planning-in-python/&quot;&gt;Action Planning in Python&lt;/a&gt;
自动规划是人工智能技术的一个领域，用于确定如何将世界从初始状态转化为目标状态。本指南实现了经典规划的一种形式，我们将问题域表示为一组状态变量，这些状态变量通过采取的每一个行动进行修改。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.paulox.net/2021/04/06/django-32-news-on-compressed-fixtures-and-fixtures-compression/&quot;&gt;Django 3.2 - News on compressed fixtures and fixtures compression&lt;/a&gt;
The Django 3.2 version has new features related to compressed fixtures and fixtures compression. This article explores the topic and provides some sample benchmarks.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.co/FGUmaJ5nJQ&quot;&gt;Interoperable Python and SQL in Jupyter Notebooks&lt;/a&gt;
在  &lt;code&gt;Pandas、Spark&lt;/code&gt; 和 &lt;code&gt;Dask&lt;/code&gt; 的基础上使用 &lt;code&gt;SQL&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://machinelearningmastery.com/neural-network-for-cancer-survival-dataset/&quot;&gt;癌症生存数据集的神经网络开发&lt;/a&gt;
在本教程中，你将发现如何为癌症生存二元分类数据集开发多层感知器神经网络模型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://arpitbhayani.me/blogs/the-weird-walrus&quot;&gt;The Weird Walrus&lt;/a&gt;
在这篇文章中，我们改变了。&lt;code&gt;Python&lt;/code&gt; 语法，并允许它运行没有任何括号的  &lt;code&gt;Assignment Expressions&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://kalebujordan.dev/basics-of-embedded-and-iot-development-with-python/&quot;&gt;用Python进行嵌入式和物联网开发的基础知识&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.wrighters.io/using-autoreload-to-speed-up-ipython-and-jupyter-work/&quot;&gt;使用自动加载来加快IPython和Jupyter的工作速度&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pythonspeed.com/articles/pandas-sql-chunking/&quot;&gt;在不耗尽内存的情况下将SQL数据加载到Pandas中&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;有趣的项目、工具和库&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://datahut.ai/&quot;&gt;datahut.ai&lt;/a&gt;
一个新的免费网站，提供最流行的数据科学和数据工程项目的统计和分析。它涵盖了100多个项目，包括这个领域最流行的Python项目，如  &lt;code&gt;Sklearn&lt;/code&gt;、 &lt;code&gt;Pandas&lt;/code&gt;、 &lt;code&gt;PyTorch&lt;/code&gt;、&lt;code&gt;TensorFlow&lt;/code&gt; 和 &lt;code&gt;Dask&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/BenAAndrew/Voice-Cloning-App&quot;&gt;Voice-Cloning-App&lt;/a&gt;
一个  &lt;code&gt;Python/Pytorch&lt;/code&gt; 应用程序，用于轻松合成人类的声音。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/bexxmodd/vizex&quot;&gt;vizex&lt;/a&gt;
在你的 &lt;code&gt;UNIX/Linux&lt;/code&gt; 终端中可视化磁盘空间和磁盘使用情况。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/juliotrigo/sqlalchemy-filters&quot;&gt;sqlalchemy-filters&lt;/a&gt;
对 &lt;code&gt;SQLAlchemy&lt;/code&gt;。查询对象进行过滤、排序和分页。是在 &lt;code&gt;REST API&lt;/code&gt; 上公开这些操作的理想选择。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/uniton-dev/uniton&quot;&gt;Uniton&lt;/a&gt; 
&lt;code&gt;Uniton&lt;/code&gt; 可以让你从。&lt;code&gt;Python&lt;/code&gt; 中控制 &lt;code&gt;Unity&lt;/code&gt; 游戏引擎。它的目的是将 &lt;code&gt;Unity&lt;/code&gt; 工具化，使其在非游戏应用中更加有用。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/allegroai/clearml&quot;&gt;ClearML&lt;/a&gt;
&lt;code&gt;Auto-Magical&lt;/code&gt; 工具套件可简化你的 &lt;code&gt;ML&lt;/code&gt; 工作流程。实验管理器、&lt;code&gt;ML-Ops&lt;/code&gt; 和数据管理。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/MarkusH/django-migrations-formatter&quot;&gt;django-migrations-formatter&lt;/a&gt;
这个 &lt;code&gt;Django&lt;/code&gt; 库将使用 &lt;code&gt;black&lt;/code&gt; 和 &lt;code&gt;isort&lt;/code&gt; 格式化 &lt;code&gt;Django&lt;/code&gt; 迁移。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/aahnik/telewater&quot;&gt;telewater&lt;/a&gt;
A telegram bot that applies watermark on images, gifs, and videos.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/nickjj/docker-django-example&quot;&gt;docker-django-example&lt;/a&gt;
一个使用 &lt;code&gt;Docker&lt;/code&gt; 和 &lt;code&gt;Docker Compose&lt;/code&gt; 的生产就绪的 &lt;code&gt;Django&lt;/code&gt; 应用实例。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/EleutherAI/gpt-neox&quot;&gt;gpt-neox&lt;/a&gt;
基于 &lt;code&gt;DeepSpeed&lt;/code&gt; 库，在 &lt;code&gt;GPU&lt;/code&gt; 上实现类似 &lt;code&gt;GPT-3&lt;/code&gt; 的模型并行。设计为能够训练千亿参数或更大的模型。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/vladkol/azure-debug-relay&quot;&gt;azure-debug-relay&lt;/a&gt;
分布式跨网络远程调试 &lt;code&gt;Python&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;最近更新&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.python.org/2021/04/python-394-hotfix-is-now-available.html&quot;&gt;Python 3.9.4 hotfix is now available&lt;/a&gt;
Python 3.9.3 was released two days ago on Friday, April 2nd. It contains important security content listed below for reference. Unfortunately, it also introduced an unintentional ABI incompatibility, making some C extensions built with Python 3.9.0 - 3.9.2 crash with Python 3.9.3 on 32-bit systems. To minimize disruption, I decided to recall 3.9.3 and introduce this hotfix release: 3.9.4.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.djangoproject.com/weblog/2021/apr/06/django-32-released/&quot;&gt;Django 3.2&lt;/a&gt; 
This version has been designated as a long-term support (LTS) release, which means that security and data loss fixes will be applied for at least the next three years. It will also receive fixes for crashing bugs, major functionality bugs in newly-introduced features, and regressions from older versions of Django for the next eight months until December 2021.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.djangoproject.com/weblog/2021/apr/06/security-releases/&quot;&gt;Django security releases issued: 3.1.8, 3.0.14, and 2.2.20&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pythoninsider.blogspot.com/2021/04/python-3100a7-is-now-available-for.html&quot;&gt;Python 3.10.0a7&lt;/a&gt;https://matplotlib.org/3.4.0/users/whats_new.html)&lt;/p&gt;
&lt;h3&gt;活动&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/indypy/events/mbwlbsyccgbrb/&quot;&gt;Virtual: IndyPy: Dangers of the Python Standard Library&lt;/a&gt;
本讲座将介绍一些这些潜在的、太容易犯的安全错误。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/austinpython/events/lgrbmqyccgbsb/&quot;&gt;Virtual: Austin Python Meetup April 2021&lt;/a&gt;
将会有以下话题:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据科学志愿服务于刑事司法&lt;/li&gt;
&lt;li&gt;基于 &lt;code&gt;Python&lt;/code&gt; 的声明式监控应用程序&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/phillypug/events/277378078/&quot;&gt;Virtual: Philadelphia Python Meetup April 2021&lt;/a&gt;
将会有以下话题:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Autonomous Object Detection&lt;/li&gt;
&lt;li&gt;了解 &lt;code&gt;SHAP&lt;/code&gt; 值以更好地解释模型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/Cleveland-Area-Python-Interest-Group/events/fhqrtryccgbqb/&quot;&gt;Virtual: Cleveland Python Meetup April 2021&lt;/a&gt;
将会有以下话题:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Idiomatic Pandas - 5 tricks for writing better pandas code&lt;/li&gt;
&lt;li&gt;Module of the Month: Scrapy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/PyLadiesLondon/events/277277308/&quot;&gt;Virtual: Graph QL - The What, The Why, The How&lt;/a&gt;
Ever wondered what all the hype around GraphQL is about? Is it the estranged sibling of SQL? What is its obsession with graphs anyway? This talk will walk through the what, the why and the how of GraphQL. By the end of this presentation we will have a working GraphQL server in Python that you can build and deploy at home!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/PyData-Cyprus/events/277318447/&quot;&gt;Virtual: PyData Cyprus April 2021&lt;/a&gt;
将会有以下话题:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Forecasting challenges and the contributions of the M competitions&lt;/li&gt;
&lt;li&gt;MIY: Model it Yourself with ML Legobricks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Posa：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(Posa私人无责任播报)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;----- 分割线 -----&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你发现哪里翻译有误的话，请务与我联系！感谢！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/python-weekly/pyw-494.html&quot;&gt;pythonista-weekly~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;改进: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/python-weekly/issue%23494.md&quot;&gt;issue-494.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>https://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="https://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>https://weekly.pychina.org/</id>
			<updated>2021-04-21T08:43:08+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">关于健康（包括减脂）这件事</title>
		<link href="http://liguanghe.github.io/2021/04/18/LsLosingweight/"/>
		<id>http://liguanghe.github.io/2021/04/18/LsLosingweight/</id>
		<updated>2021-04-17T23:35:32+00:00</updated>
		<content type="html">&lt;p&gt;近2个半月减脂10斤，免疫力增加，不生病，入睡容易，起床轻松。&lt;/p&gt;
&lt;p&gt;健康大于减脂。最先不是从饮食，而是从运动开始的。加入一项运动，成本低可持续有兴趣有同伴。心情舒畅，就不那么需要碳水和饱腹来提供快乐。接着会不自觉的控制饮食。再之后注意睡眠，不在饭后午睡，而是早睡早&lt;/p&gt;</content>
		<author>
			<name>li guang he</name>
			<uri>http://liguanghe.github.io/</uri>
		</author>
		<source>
			<title type="html">Li Guanghe's blog</title>
			<link rel="self" href="https://liguanghe.github.io/rss2.xml"/>
			<id>https://liguanghe.github.io/rss2.xml</id>
			<updated>2021-04-18T00:42:52+00:00</updated>
		</source>
	</entry>

</feed>
