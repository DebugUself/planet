<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">

	<title>Planet DebugUself</title>
	<link rel="self" href="http://planet.du.zoomquiet.us/atom.xml"/>
	<link href="http://planet.du.zoomquiet.us/"/>
	<id>http://planet.du.zoomquiet.us/atom.xml</id>
	<updated>2020-01-07T16:43:16+00:00</updated>
	<generator uri="http://www.planetplanet.org/">Planet/2.0 +http://www.planetplanet.org</generator>

	<entry>
		<title type="html">写代码 Log 也要认真点么?</title>
		<link href="https://bemself.github.io/python/Python-Log.html"/>
		<id>https://bemself.github.io/python/Python-Log.html</id>
		<updated>2020-01-05T00:00:00+00:00</updated>
		<content type="html">Log自然是需要的, 尤其是正式的产品; 但如果只是自己或内部用用的小工具, 也需要认真点吗?</content>
		<author>
			<name>My Struggle</name>
			<email>doituself@outlook.com</email>
			<uri>https://bemself.github.io</uri>
		</author>
		<source>
			<title type="html">My Struggle</title>
			<subtitle type="html">This is RSS feed for my website</subtitle>
			<link rel="self" href="https://bemself.github.io/rss.xml"/>
			<id>https://bemself.github.io/rss.xml</id>
			<updated>2020-01-05T16:43:02+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">My Struggle - 我的自怼周刊 2020 00w</title>
		<link href="https://bemself.github.io/%E5%BF%83%E8%B7%AF/DM-Weekly-00W.html"/>
		<id>https://bemself.github.io/%E5%BF%83%E8%B7%AF/DM-Weekly-00W.html</id>
		<updated>2020-01-05T00:00:00+00:00</updated>
		<content type="html">周结，看看能坚持多久~</content>
		<author>
			<name>My Struggle</name>
			<email>doituself@outlook.com</email>
			<uri>https://bemself.github.io</uri>
		</author>
		<source>
			<title type="html">My Struggle</title>
			<subtitle type="html">This is RSS feed for my website</subtitle>
			<link rel="self" href="https://bemself.github.io/rss.xml"/>
			<id>https://bemself.github.io/rss.xml</id>
			<updated>2020-01-05T16:43:02+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">pythonista-weekly : Pyw 430</title>
		<link href="http://weekly.pychina.org/python-weekly/pyw-430.html"/>
		<id>tag:weekly.pychina.org,2020-01-04:/python-weekly/pyw-430.html</id>
		<updated>2020-01-04T07:16:00+00:00</updated>
		<content type="html">&lt;h3&gt;欢迎阅读《pythonista周刊》第430期。Let us start!&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://mailchi.mp/pythonweekly/python-weekly-issue-430&quot;&gt;https://mailchi.mp/pythonweekly/python-weekly-issue-430&lt;/a&gt;&lt;br /&gt;
翻译：Dustyposa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;来自赞助商（PS：原文的赞助商）:&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.vettery.com/tech?utm_source=newsletter&amp;utm_medium=pythonweekly&amp;utm_term=tech&amp;utm_content=grouped&amp;utm_campaign=ad-77579&quot;&gt;python开发者都需要的Vettery&lt;/a&gt;&lt;br /&gt;
Vettery是一个招聘网站，它改变了人们应聘或者雇佣的方式。准备好换工作地方了吗？免费制作简历，你的薪资你说了算，现在就和顶级雇主的HR联系吧！&lt;/p&gt;
&lt;h2&gt;文章、教程与话题&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://martinheinz.dev/blog/13&quot;&gt;Making Python Programs Blazingly Fast&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Python&lt;/code&gt;厌恶者总是说他们不想使用&lt;code&gt;Python&lt;/code&gt;的理由之一就是太慢了。是的，对于特定的程序（无论使用何种编程语言），快或者慢都是非常依赖编写它的开发者自身编写优秀和快速代码和的技能和能力。所以，让我们证明某些人的错误观点并让他们看看我们可以如何提升我们的&lt;code&gt;Python&lt;/code&gt;程序的性能，让它变得飞快！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;性能提升第一弹！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=x58W9A2lnQc&quot;&gt;Numba makes Python 1000x faster!&lt;/a&gt;&lt;/strong&gt; &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;&lt;em&gt;(20min)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;在此视频中，我介绍了你需要了解的有关&lt;code&gt;Numba&lt;/code&gt;的绝对最低要求，&lt;code&gt;Numba&lt;/code&gt;是针对&lt;code&gt;Python&lt;/code&gt;和&lt;code&gt;Numpy&lt;/code&gt;子集的即时编译器。前半段的视频是一些基本介绍和强调了一些人们使用&lt;code&gt;Numba&lt;/code&gt;时经常犯的错误。视频的剩余部分呈现了一个真实世界的模拟问题，在单和多线程的情况下使用&lt;code&gt;Numba&lt;/code&gt;速度提升都达1000倍以上，最后以一个能够学习更多关于&lt;code&gt;Numba&lt;/code&gt;知识的&lt;code&gt;&quot;阅读清单&quot;&lt;/code&gt;结束。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第二弹！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://iximiuz.com/en/posts/flask-gevent-tutorial&quot;&gt;如何一起使用 gevent(uWSGI 和 Gunicorn版本) 和 Flask&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;创建一个异步的&lt;code&gt;Flask&lt;/code&gt;应用并在反向代理&lt;code&gt;Nginx&lt;/code&gt;之后用&lt;code&gt;uWSGI 或者 Gunicorn&lt;/code&gt;运行它。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Flask&lt;/code&gt; 异步之旅。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://florimond.dev/blog/articles/2019/08/introduction-to-asgi-async-python-web/&quot;&gt;ASGI介绍: 异步Python Web生态系统的出现&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在在&lt;code&gt;Python web&lt;/code&gt;开发生态系统中有一些激动人心的事情在发生——这项工作的主要驱动力之一是异步标准网关接口&lt;code&gt;ASGI&lt;/code&gt;。这篇文章面向的对&lt;code&gt;Python&lt;/code&gt;网络开发的最新趋势感兴趣的人。将会用导航带着你了解什么是&lt;code&gt;ASGI&lt;/code&gt;，对现代的&lt;code&gt;Python web&lt;/code&gt;开发意味着什么？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一浪高过一浪。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://machinelearningmastery.com/how-to-develop-an-intuition-skewed-class-distributions/&quot;&gt;为严重倾斜的类别分布培养直觉&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不平衡分类问题涉及到预测一个类标签，其中类标签在训练数据集中的分布是不相等的。不平衡分类问题中类分布的差异会影响数据准备和建模算法的选择。因此，对于不同的类分布的含义，实践者开发一种直觉是至关重要的。在本教程中，您将了解如何为不平衡和高度倾斜的类分布开发实践直觉。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;经验的传授？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://t.co/xe5GAgWia4&quot;&gt;用 Jupyter 开发机器人&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这篇文章展示了在&lt;code&gt;Jupyter&lt;/code&gt;生态系统使用&lt;code&gt;Voilá&lt;/code&gt;在&lt;code&gt;Jupyter Notebooks&lt;/code&gt;和独立的网络应用中构建高级的可视化，以及如何部署这些&lt;code&gt;app&lt;/code&gt;到&lt;code&gt;robotics cloud&lt;/code&gt;中。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Jupyter 抢占开发？&lt;/p&gt;
&lt;p&gt;Not easy.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://nicholasfarrow.com/Creating-a-Moon-Animation-Using-NASA-Images-and-Python/&quot;&gt;使用 NASA 图片和 Python 制作一个月亮动画&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里是我们可以如何仅仅使用几行&lt;code&gt;Python&lt;/code&gt;代码创作一个月亮视频。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;代表月亮...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=kEVXjrt3LfA&quot;&gt;使用Python &amp;amp; Tableau实现内部销售仪表板自动化|第2部分:收集实时库存数据&lt;/a&gt;&lt;/strong&gt; &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;&lt;em&gt;（36min）&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;在这一部分，我们使用&lt;code&gt;pandas&lt;/code&gt;数据读取器来位我们的内部交易仪表板收集实时的库存数据。这里有很多有用的东西，比如使用&lt;code&gt;pandas&lt;/code&gt;来计算移动平均线和读取&lt;code&gt;html&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pandas 进阶之路&lt;/p&gt;
&lt;p&gt;不过实战记忆效率高，不亏！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.freecodecamp.org/news/python-dictionaries-detailed-visual-introduction/&quot;&gt;Python字典101: 详细的可视化介绍&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;异常详细！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://lucumr.pocoo.org/2020/1/1/async-pressure/&quot;&gt;我没有感觉到异步压力&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我也希望没有压力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://igor.mp/blog/2019/12/31/tfidf-python.html&quot;&gt;用tf-idf和Python进行单词搜索&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.pyimagesearch.com/2019/12/30/label-smoothing-with-keras-tensorflow-and-deep-learning/&quot;&gt;Label smoothing with Keras, TensorFlow, and Deep Learning&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://orbifold.xyz/zen-of-python.html&quot;&gt;Meditations on the Zen of Python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.marsja.se/how-to-use-pandas-get_dummies-to-create-dummy-variables-in-python&quot;&gt;如何在Python中使用Pandas的get_dummies 去创建虚拟变量&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;有趣的项目、工具和库&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/tiangolo/typer&quot;&gt;Typer&lt;/a&gt;&lt;/strong&gt;
&lt;code&gt;Typer&lt;/code&gt;，可以构建出色的&lt;code&gt;CLIs&lt;/code&gt;。 易于编码。 基于&lt;code&gt;Python&lt;/code&gt;类型提示。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;正在寻找合适的，瞅一瞅。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/neeru1207/AI_Sudoku&quot;&gt;AI_Sudoku&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基于&lt;code&gt;GUI&lt;/code&gt;的智能数独解题器，试着从一张图片中提取数独题并解决它。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;数独怎么解？肉眼一看就能解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/knowsuchagency/klaxon&quot;&gt;klaxon&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;来自&lt;code&gt;Python&lt;/code&gt;的&lt;code&gt;Mac OS&lt;/code&gt;通知。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/ericls/django-simple-task&quot;&gt;django-simple-task&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用于&lt;code&gt;Django 3&lt;/code&gt;的简单的后台任务。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;新鲜的后台任务来了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/kkroening/ffmpeg-python&quot;&gt;ffmpeg-python&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用于&lt;code&gt;FFmpeg&lt;/code&gt;的&lt;code&gt;Python&lt;/code&gt;绑定函数——具有复杂的过滤支持。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无限调用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/anmspro/Traffic-Signal-Violation-Detection-System&quot;&gt;Traffic-Signal-Violation-Detection-System&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;YOLO3 &amp;amp; Tkinter&lt;/code&gt;及基于视频片段的计算机视觉的交通信号违章检测系统。（包括GUI）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/PydPiper/pylightxl&quot;&gt;pylightxl&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个轻量级、零依赖、轻量级功能的&lt;code&gt;excel&lt;/code&gt;读/写的&lt;code&gt;Python&lt;/code&gt;库。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/haroonawanofficial/XSS-Finder&quot;&gt;XSS-Finder&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;重量级高级跨站点脚本扫描仪。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/Sanseer/Robatim&quot;&gt;Robatim&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Robatim&lt;/code&gt;是一个基于常见的练习曲模式的伪随机音乐生成器。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;练习曲的春天？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;活动和网络研讨会日程&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.meetup.com/austinpython/events/lgrbmqybccblb/&quot;&gt;Austin Python Meetup January 2020 - Austin, TX&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Jupyter notebooks&lt;/code&gt;非常适合用来探索，尤其是分析和可视化。然而，当用于开发一个库或者自包含代码的时候，我们可以发现我们自己会复制和粘贴到我们喜欢的文本编辑器或者&lt;code&gt;IDE&lt;/code&gt;。在本次演讲中，&lt;code&gt;Leanne Fitzpatrick&lt;/code&gt;将介绍&lt;code&gt;nbdev&lt;/code&gt;，这是&lt;code&gt;fast.ai&lt;/code&gt;开发的解决此问题优雅的解决方案。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.meetup.com/PyRVAUserGroup/events/kktcmrybccblb/&quot;&gt;CI/CD for Python on AWS - Glen Allen, VA&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们将会演示：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如何为&lt;code&gt;Python&lt;/code&gt;应用设置持续集成管道。&lt;/li&gt;
&lt;li&gt;如何用&lt;code&gt;Python/Boto3&lt;/code&gt;在&lt;code&gt;AWS&lt;/code&gt;上实现持续部署。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/PyMNtos-Twin-Cities-Python-User-Group/events/267385506/&quot;&gt;PyMNtos Python Presentation Night #80 - Minneapolis, MN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/sfpython/events/xkwxvqybccblb/&quot;&gt;San Francisco Python Meetup January 2020 - San Francisco, CA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/python-atlanta/events/xzzgcrybccbmb/&quot;&gt;PyAtl Meetup January 2020 - Atlanta, GA&lt;/a&gt;https://morepypy.blogspot.com/2019/12/pypy-730-released.html)&lt;/p&gt;
&lt;h2&gt;Posa：&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(Posa私人无责任播报)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;热腾腾的协程翻译: &lt;strong&gt;&lt;a href=&quot;https://github.com/Dustyposa/goSpider/blob/master/python_advance/%E7%BF%BB%E8%AF%91%E8%AE%A1%E5%88%92/%E5%BC%82%E6%AD%A5%E7%88%AC%E8%99%AB&quot;&gt;异步爬虫&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;初次翻译，多多指教，发现问题请提提提出来！！谢谢各位大佬了。&lt;/p&gt;
&lt;p&gt;----- 分割线 -----&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你发现哪里翻译有误的话，请务与我联系！感谢！
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/python-weekly/pyw-430.html&quot;&gt;pythonista-weekly~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;改进: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/python-weekly/issue#430.md&quot;&gt;issue-430.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2020-01-07T00:44:43+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Python 线性回归（Linear Regression) - 到底什么是 regression？</title>
		<link href="https://bemself.github.io/python/Python-Linear-Regression-Concept.html"/>
		<id>https://bemself.github.io/python/Python-Linear-Regression-Concept.html</id>
		<updated>2020-01-03T00:00:00+00:00</updated>
		<content type="html">了解线性回归前，先看看 Regression 的由来</content>
		<author>
			<name>My Struggle</name>
			<email>doituself@outlook.com</email>
			<uri>https://bemself.github.io</uri>
		</author>
		<source>
			<title type="html">My Struggle</title>
			<subtitle type="html">This is RSS feed for my website</subtitle>
			<link rel="self" href="https://bemself.github.io/rss.xml"/>
			<id>https://bemself.github.io/rss.xml</id>
			<updated>2020-01-05T16:43:02+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">怼圈年会:珠海小聚, 开启你的 2020</title>
		<link href="https://du.101.camp/2020-01/ZH4DUmeeting2020/"/>
		<id>https://du.101.camp/2020-01/ZH4DUmeeting2020</id>
		<updated>2020-01-03T00:00:00+00:00</updated>
		<content type="html">&lt;p&gt;2017年12月3日,两岸6城多国怼友突汇珠海刷DAMA -&amp;gt; &lt;a href=&quot;https://du.101.camp/2017-12/lgh-ZHmeeting/&quot;&gt;20171203 珠海探大妈聚会 ~ DebugUself with DAMA ;-)&lt;/a&gt;;
2020年1年18日风云再起,DU圈发起末日嗯哼,再聚珠海🐽🌊.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;0-怼友分享&quot;&gt;0. 怼友分享&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;每位怼友&lt;strong&gt;分享 1 个或几个过去一年中的自怼故事&lt;/strong&gt;,以及自怼过程中的困难/疑惑.&lt;/li&gt;
  &lt;li&gt;Slides/Keynote/Pdf 辅助分享更佳.&lt;/li&gt;
  &lt;li&gt;5 分钟以内更佳.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/01/02/GM286Auda7eXOqP.png&quot; alt=&quot;LivingwithCoding&quot; /&gt;
Living with Coding&lt;/p&gt;

&lt;h2 id=&quot;1-主题分享&quot;&gt;1. 主题分享&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;怼圈嘉宾主题分享:
    &lt;ul&gt;
      &lt;li&gt;@DAMA 待补…&lt;/li&gt;
      &lt;li&gt;@待补…&lt;/li&gt;
      &lt;li&gt;@待补…&lt;/li&gt;
      &lt;li&gt;@熊本 葛饰北斋的数学魅力&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;主题分享 FAQ :
    &lt;ul&gt;
      &lt;li&gt;怼友可就分享主题与嘉宾&lt;strong&gt;互动交流&lt;/strong&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/01/02/ZnxhWQqY6tG1Aa7.png&quot; alt=&quot;Katsushika Hokusai in His Seventies&quot; /&gt;
Katsushika Hokusai in His Seventies&lt;/p&gt;

&lt;h2 id=&quot;2-抽奖礼物&quot;&gt;2. 抽奖礼物&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;有兴趣的怼友可提前准备一份&lt;strong&gt;走心或者觉得有意思的礼物&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;介绍自己准备的礼物.&lt;/li&gt;
  &lt;li&gt;随机抽取到场怼友 github id, 送出礼物.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/01/02/dVuWY4lwrfIcgHm.jpg&quot; alt=&quot;Interesting Gift&quot; /&gt;
Interesting Gift&lt;/p&gt;

&lt;h2 id=&quot;4-聚会信息&quot;&gt;4. 聚会信息&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;时间: 2020 年 1 月 18 日 (星期六) 13:42-15:42&lt;/li&gt;
  &lt;li&gt;地点: 珠海市 (具体地址报名后可获得)&lt;/li&gt;
  &lt;li&gt;费用: 待补…&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;活动报名&quot;&gt;活动报名&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;扫描下方二维码&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/01/03/qy8u3M1Qm47RdoI.jpg&quot; alt=&quot;报名&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/01/02/kCY6pbvOhBEsRcW.png&quot; alt=&quot;自怼圈,伴你享受被动节奏外韵律.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;自怼圈,伴你享受被动节奏外韵律.&lt;/p&gt;</content>
		<author>
			<name>自怼圈</name>
			<uri>https://du.101.camp/</uri>
		</author>
		<source>
			<title type="html">自怼圈</title>
			<link rel="self" href="https://du.101.camp/atom.xml"/>
			<id>http://du.101.camp</id>
			<updated>2020-01-03T08:42:11+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Python 统计基础</title>
		<link href="https://bemself.github.io/python/Python-%E7%BB%9F%E8%AE%A1%E5%9F%BA%E7%A1%80.html"/>
		<id>https://bemself.github.io/python/Python-%E7%BB%9F%E8%AE%A1%E5%9F%BA%E7%A1%80.html</id>
		<updated>2020-01-02T00:00:00+00:00</updated>
		<content type="html">几个统计相关的 python 模块工具，以及可视化。</content>
		<author>
			<name>My Struggle</name>
			<email>doituself@outlook.com</email>
			<uri>https://bemself.github.io</uri>
		</author>
		<source>
			<title type="html">My Struggle</title>
			<subtitle type="html">This is RSS feed for my website</subtitle>
			<link rel="self" href="https://bemself.github.io/rss.xml"/>
			<id>https://bemself.github.io/rss.xml</id>
			<updated>2020-01-05T16:43:02+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">Issue 401</title>
		<link href="http://weekly.pychina.org/issue/issue-401.html"/>
		<id>tag:weekly.pychina.org,2020-01-01:/issue/issue-401.html</id>
		<updated>2020-01-01T09:42:00+00:00</updated>
		<content type="html">&lt;blockquote&gt;
&lt;p&gt;Python 2.7 今天正式退休&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://pycoders.com/issues/401&quot;&gt;PyCoder's Weekly - Issue #401&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;PyCoder&quot; src=&quot;https://cdn.pycoders.com/37bdf31dc645f968ffb90196e5d38ff5&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;200101 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 42 分钟 完成快译&lt;/li&gt;
&lt;li&gt;200101 &lt;a href=&quot;http://zoomquiet.io/&quot;&gt;Zoom.Quiet&lt;/a&gt;(大妈) 用时 17 分钟 完成格式转抄.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3187/web&quot;&gt;Python 2.7 Retires Today&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PYTHONCLOCK.ORG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 2.7 will not be maintained past Jan 1st, 2020. So long Python 2, and thank you for your years of faithful service. Python 3, your time is now!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当然, 海量 Py2.7 兼容代码, 将继续在非官方支持下良好运行到永远...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3194/web&quot;&gt;对 Python之禅 的冥想&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MOSHE ZADKA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“The Zen of Python is not ‘the rules of Python’ or ‘guidelines of Python’. It is full of contradiction and allusion. It is not intended to be followed: it is intended to be meditated upon. In this spirit, I offer this series of meditations on the Zen of Python.”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;蟒之禅 的原义就是引发沉思,而不是终止之...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3191/web&quot;&gt;Python 计时器功能: 监视代码的三种方法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn how to use Python timer functions to monitor how fast your programs are running. You’ll use classes, context managers, and decorators to measure your program’s running time. You’ll learn the benefits of each method and which to use given the situation.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Timer&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-01-01-ScreenShot%202020-01-01%2017.33.52.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;总之: &lt;a href=&quot;https://pypi.org/project/codetiming/&quot;&gt;codetiming&lt;/a&gt; 内置计时器;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.perf_counter&quot;&gt;time.perf_counter()&lt;/a&gt; 提供精确计时;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/library/timeit.html&quot;&gt;timeit&lt;/a&gt; 专用运行时计时;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/library/profile.html&quot;&gt;cProfile&lt;/a&gt; 专用性能分析器;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/library/profile.html#pstats.Stats&quot;&gt;pstats&lt;/a&gt; CLI 性能分析工具;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://kcachegrind.github.io/&quot;&gt;KCachegrind&lt;/a&gt; GUI 工具来观察性能分析数据;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;KcgShot3Small.gif (GIF Image, 260 × 218 pixels)&quot; src=&quot;https://kcachegrind.github.io/images/KcgShot3Small.gif&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rkern/line_profiler&quot;&gt;line_profiler&lt;/a&gt; 单行代码性能监察;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pypi.org/project/memory-profiler/&quot;&gt;memory-profiler&lt;/a&gt; 内存监察工具.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3196/web&quot;&gt;开源移民情绪困扰&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ARMIN RONACHER&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The creator of Flask reflects on the Python 2 to 3 migration and how the Python community handled the transition. Interesting read!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;和 &lt;code&gt;数字游民&lt;/code&gt; 不同, 移民指就基础运行平台的迁移, 
不象 Python 1.x -&amp;gt; 2.x 的迁移, 亳无压力,
因为, 当年根本就没什么成规模的 1.x 工程.&lt;/p&gt;
&lt;p&gt;所以, 技术工程迁移, 多数阻力不在技术, 而在情绪, 就象人月神话,以及其它真实软件工程心理学著作中论及的...&lt;/p&gt;
&lt;p&gt;代码相处时间久了, 一样有感情的, 被迫迁移到完全无感觉的新平台中, 就象改嫁...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3183/web&quot;&gt;Python  REPL和Shell集成技巧&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;JOHN D. COOK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some good tips and ways to minimize the context interruption when moving between the shell and a Python session.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;厨子说的总是有用的....
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3197/web&quot;&gt;俺名片能运行 Linux+MicroPython&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GEORGE HILLIARD&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Embedded systems engineer builds a card-sized computer that boots Linux and runs MicroPython. Cool!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;网红事件了...&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;MicroPython&quot; src=&quot;https://www.thirtythreeforty.net/posts/2019/12/my-business-card-runs-linux/businesscard-top_huad90566bef925e8b01048d4355f78bd6_6751801_1024x1024_fit_q80_box.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;已经有人准备将之复制并配置为实体 BTC 銭包了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3190/web&quot;&gt;PyPy 7.3.0 发布&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;PYPY BLOG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;讨论&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Discussions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;NIL &lt;/p&gt;
&lt;h2&gt;文章,教程和嗯哼&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Articles, Tutorials and Talks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3186/web&quot;&gt;Python Packaging 生态&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;NICK COGHLAN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“[It] seems worthwhile for me to write-up my perspective as one of the lead architects for that ecosystem on how I characterize the overall problem space of software publication and distribution, where I think we are at the moment, and where I’d like to see us go in the future.”&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;简单的说, 还在春秋战国时代, 远没有稳定下来&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3198/web&quot;&gt;2019十大真蟒文章&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;TALK PYTHON &lt;/li&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I was a guest on Mike Kennedy’s Talk Python podcast and we discussed a shortlist of 10 interesting tutorials published on Real Python in 2019. So if you’re looking to expand your year-end reading list you’ll find some inspiration there. It’s always a treat to be on Mike’s show—definitely check out his podcast!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;果然, 每年必须的 top1 文章/问题/讨论都是相同的:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;err&quot;&gt;如何运行你的&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Python&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;脚本&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这其实, 也展示出了编程和非编程世界的根本差异.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3181/web&quot;&gt;用 Python 对数据排序&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REAL PYTHON &lt;/li&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this step-by-step course, you’ll learn how to sort in Python. You’ll know how to sort various types of data in different data structures, customize the order, and work with two different ways of sorting in Python.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Sorting&quot; src=&quot;http://ydlj.zoomquiet.top/ipic/2020-01-01-ScreenShot%202020-01-01%2017.23.45.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Python 丰富的数据类型, 也就意味着有丰富的排序技巧...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3200/web&quot;&gt;批量训练: 如何拆分数据?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;OLEG ŻERO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Creating data batches for model training evaluated in context of loading data using Python generators, HDF5 files and NumPy using a sound processing machine-learning model as an example.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3195/web&quot;&gt;如何使用 Pandas get_dummies 在 Python 中创建虚拟变量&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ERIK MARSJA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dummy variables (or binary/indicator variables) are often used in statistical analyses as well as in more simple descriptive statistics.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3199/web&quot;&gt;Python 类型提示和 MyPy 教程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GUILHERME KUNIGAMI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This post covers mypy in general terms as well many examples demonstrating the syntax and capabilities of this type checker.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3201/web&quot;&gt;Pipx: 在虚拟环境中安装/卸载和升级 Python 软件包&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ERIK MARSJA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here you will learn how to install, uninstall, &amp;amp; upgrade Python packages using the pipx tool.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Pipx&quot; src=&quot;https://www.marsja.se/wp-content/uploads/2019/12/using_pipx_to_run_a_python_app_temporary.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;---w&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3188/web&quot;&gt;魔法-虫洞: 将嗯哼从一台计算机安全地转移到另一台计算机&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;MAGIC-WORMHOLE.READTHEDOCS.IO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一本免费魔法书...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3182/web&quot;&gt;Python 进行堆排序&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;OLIVERA POPOVIĆ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;好物&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Interesting Projects, Tools and Libraries, Projects &amp;amp; Code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3179/web&quot;&gt;drf_dynamics: 用于 Django REST 框架的动态查询集和序列化程序设置&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;GITHUB.COM/IMBOKOV &lt;/li&gt;
&lt;li&gt;• Shared by Ilya Bokov&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Handles the hassle of handling the amount of fields to be serialized and queryset changes for each request for you.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3192/web&quot;&gt;Astropy: Python 天文学&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ASTROPY.ORG&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Astropy -&amp;gt; 熵, 好词儿
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3193/web&quot;&gt;AI_Sudoku: 从照片中提取数独谜题并解决&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/NEERU1207&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3180/web&quot;&gt;ffmpeg-python: FFmpeg的Python绑定&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/KKROENING&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;formula&quot; src=&quot;https://raw.githubusercontent.com/kkroening/ffmpeg-python/master/doc/formula.png&quot; /&gt;
其实, FFmpeg 本身的控制界面足够稳了...&lt;/p&gt;
&lt;p&gt;只是能将:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;ffmpeg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;overlay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;png&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter_complex&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;[0]trim=start_frame=10:end_frame=20[v0];\&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;[0]trim=start_frame=30:end_frame=40[v1];\&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;[v0][v1]concat=n=2[v2];[1]hflip[v3];\&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;[v2][v3]overlay=eof_action=repeat[v4];\&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;[v4]drawbox=50:50:120:120:red:t=5[v5]&amp;quot;&lt;/span&gt;\
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;变成:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ffmpeg&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;in_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ffmpeg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp4&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;overlay_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ffmpeg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;overlay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;png&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ffmpeg&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;in_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_frame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end_frame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;in_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_frame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end_frame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;overlay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;overlay_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hflip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drawbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thickness&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp4&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;还是值得的...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3188/web&quot;&gt;Magic-Wormhole: 将嗯哼从一台计算机安全地转移到另一台计算机&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MAGIC-WORMHOLE.READTHEDOCS.IO&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3184/web&quot;&gt;pyopengl: 适用于 Python 的 OpenGL 绑定&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GITHUB.COM/MCFLETCH&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;C++ 专属领域终于也被入侵了...
)&lt;/p&gt;
&lt;h2&gt;📆🐍 活动/大会&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Events, MeetUp 真的是全球线下活动组织中心&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3177/web&quot;&gt;⋅ PyDelhi User Group Meetup&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 4, 2020&lt;/li&gt;
&lt;li&gt;印度&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3176/web&quot;&gt;⋅ Melbourne Python Users Group, 澳洲&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 6, 2020&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3169/web&quot;&gt;⋅ Dominican Republic Python User Group&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 7, 2020&lt;/li&gt;
&lt;li&gt;中美洲&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3170/web&quot;&gt;⋅ Heidelberg Python Meetup&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 8, 2020&lt;/li&gt;
&lt;li&gt;德国&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3172/web&quot;&gt;⋅ Python North East&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 8, 2020&lt;/li&gt;
&lt;li&gt;英国&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3166/web&quot;&gt;⋅ PyStaDa&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 8, 2020&lt;/li&gt;
&lt;li&gt;??&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3168/web&quot;&gt;⋅ pyCologne User Group Treffen&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 8, 2020&lt;/li&gt;
&lt;li&gt;404&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3174/web&quot;&gt;⋅ Santa Cruz Python Meetup&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 8, 2020&lt;/li&gt;
&lt;li&gt;USA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3167/web&quot;&gt;⋅ PyMNTos&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 9, 2020&lt;/li&gt;
&lt;li&gt;USA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://pycoders.com/link/3171/web&quot;&gt;⋅ Python Atlanta&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;January 9, 2020&lt;/li&gt;
&lt;li&gt;USA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;DAMA&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://py.101.camp/&quot;&gt;蟒营 Python 入门班&lt;/a&gt;&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;4py :-}&lt;/li&gt;
&lt;li&gt;5py ;-)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;(￣▽￣)&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;第4期已开始, 为期6周;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;err&quot;&gt;当前&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch2&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;200112&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;按时结束&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;年后第5期就来:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;mi&quot;&gt;200203&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;值得上线&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pycoders.com/link/3100/web&quot;&gt;从1965年到2019年，最受欢迎的编程语言 (动画)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;TWITTER.COM/MARCUSBORBA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;网红小视频也出现了...&lt;/p&gt;
&lt;p&gt;最后3秒, Python 疯狂反转一切.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h1&gt;是也乎&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;NN 3879&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/issue/issue-401.html&quot;&gt;Issue 401 ~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;修订: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/Issue/issue-401.md&quot;&gt;issue-401.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2020-01-07T00:44:43+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">2019 的尾巴</title>
		<link href="https://bemself.github.io/%E5%BF%83%E8%B7%AF/2019-summary.html"/>
		<id>https://bemself.github.io/%E5%BF%83%E8%B7%AF/2019-summary.html</id>
		<updated>2019-12-31T00:00:00+00:00</updated>
		<content type="html">过去的已去，未来的未来。抓着 2019 的尾巴，记一下过去。</content>
		<author>
			<name>My Struggle</name>
			<email>doituself@outlook.com</email>
			<uri>https://bemself.github.io</uri>
		</author>
		<source>
			<title type="html">My Struggle</title>
			<subtitle type="html">This is RSS feed for my website</subtitle>
			<link rel="self" href="https://bemself.github.io/rss.xml"/>
			<id>https://bemself.github.io/rss.xml</id>
			<updated>2020-01-05T16:43:02+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">180 度平摊控</title>
		<link href="https://bemself.github.io/%E5%BF%83%E8%B7%AF/180-fans.html"/>
		<id>https://bemself.github.io/%E5%BF%83%E8%B7%AF/180-fans.html</id>
		<updated>2019-12-30T00:00:00+00:00</updated>
		<content type="html">现在买书买本有点不管是否需要，第一感觉看是否 180 度平摊了~</content>
		<author>
			<name>My Struggle</name>
			<email>doituself@outlook.com</email>
			<uri>https://bemself.github.io</uri>
		</author>
		<source>
			<title type="html">My Struggle</title>
			<subtitle type="html">This is RSS feed for my website</subtitle>
			<link rel="self" href="https://bemself.github.io/rss.xml"/>
			<id>https://bemself.github.io/rss.xml</id>
			<updated>2020-01-05T16:43:02+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">pythonista-weekly : Pyw 429</title>
		<link href="http://weekly.pychina.org/python-weekly/pyw-429.html"/>
		<id>tag:weekly.pychina.org,2019-12-28:/python-weekly/pyw-429.html</id>
		<updated>2019-12-28T07:16:00+00:00</updated>
		<content type="html">&lt;h3&gt;欢迎阅读《pythonista周刊》第429期。Let us start!&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;原文: &lt;a href=&quot;https://mailchi.mp/pythonweekly/python-weekly-issue-429&quot;&gt;https://mailchi.mp/pythonweekly/python-weekly-issue-429&lt;/a&gt;&lt;br /&gt;
翻译：Dustyposa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://click.linksynergy.com/link?id=x9UsEHf2tls&amp;offerid=507388.1527300&amp;type=2&amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Flearn-python-and-ethical-hacking-from-scratch%2F&quot;&gt;Learn Python &amp;amp; Ethical Hacking From Scratch&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从零开始&amp;amp;通过编写20多个黑客程序从头开始同时学习这两个主题&lt;/p&gt;
&lt;h2&gt;文章、教程与话题&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://sausheong.github.io/posts/pi4-dev-ipadpro/&quot;&gt;把树莓派4设置为你的iPad Pro的开发机器&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一篇相当酷的文章，向你展示了你可以如何使用&lt;code&gt;树莓派4&lt;/code&gt;作为一个USB设备来使用&lt;code&gt;iPad Pro&lt;/code&gt;进行软件开发。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;就差一个 iPad Pro了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://techscience.org/a/2019121801/&quot;&gt;Deepfake机器人向联邦公共评论网站提交的内容与人类提交的内容无法区分&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;联邦公众评论网站目前无法在提交后检测到&lt;code&gt;Deepfake Text&lt;/code&gt;。 哈佛大学的一个本科生创建了一个计算机程序（机器人程序），该程序生成并向联邦公众评论网站提交了有关医疗补助改革豁免的1,001条深层假评论，并在这些评论占所有已提交评论的一半以上时停止提交。 然后，他正式撤回了对该机器人的评论。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.pluralsight.com/tech-blog/porting-flask-to-fastapi-for-ml-model-serving/&quot;&gt;将Flask移植到FastAPI用于ML模型服务&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于其便利性，&lt;code&gt;Flask&lt;/code&gt;成为了用于在&lt;code&gt;Python&lt;/code&gt;中构建&lt;code&gt;REST API&lt;/code&gt;的一个&lt;code&gt;web&lt;/code&gt;框架——尤其是用于服务机器学习模型。在本篇文章中，我们讲学习如何迁移到一个较新的&lt;code&gt;FastAPI&lt;/code&gt;框架中，来利用类型检查和异步编程的优势。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;长江后浪推前浪。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://neptune.ml/blog/evaluation-metrics-binary-classification&quot;&gt;24 个二元分类器的评价指标(以及什么时候使用它们)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不确定你应该为你的二元分类器问题选哪种评价指标？在阅读这篇文章之后，你应该有一个很好的想法。你将学习关于一些常见和不太常见的评价指标和图表，以理解如何为你的问题选择模型性能指标。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;二分评价也不容易啊。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=lbbNoCFSBV4&quot;&gt;用Python在你的Terminal中创建一颗动画圣诞树&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;(9min)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;做了一个小的圣诞特别编程项目，制作了一个运行在你的终端的动画圣诞树。有时候编程很有趣，这就是其中的一次。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://hatem-hassan.com/blog/fullstack-nlp-building-and-deploying-end-to-end-fake-news-classifier&quot;&gt;全栈 NLP: 构建和部署端到端虚假新闻分类器&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是一个构建&lt;code&gt;NLP文本分类web应用的API+UI&lt;/code&gt;教程，并在部署在生产环境中。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;全栈变大了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://tryexceptpass.org/article/distributing-python-applications/&quot;&gt;2020年发布Python应用程序的12个选择趋势&lt;/a&gt;&lt;/strong&gt;
无论交付的是可执行文件、虚拟环境、打包的代码还是完整的应用程序，这个列表都包括了标准系统和一些我们进入2020年要记住的新事物。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;紧跟潮流&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://t.co/HrDzllWYtJ&quot;&gt;视频搜索引擎 — 我的计算机视觉之旅&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;创制作视频很简单，但谁有时间看完呢?我提出了一个视频搜索引起来寻找相关的片段（包括原型）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://pbpython.com/interactive-dashboards.html&quot;&gt;用Jupyter Notebooks构建交互式的Dashboards&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这篇文章探讨了如何去构建一个交互式的&lt;code&gt;dashborad&lt;/code&gt;用于分析&lt;code&gt;reddit&lt;/code&gt;内容，并使用&lt;code&gt;Voilà&lt;/code&gt;展示交互式的结果图。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Jupyter应用范围也越来越广&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://blog.pepy.tech/python/patterns/2019/12/21/dependency-injection-with-pinject.html&quot;&gt;使用Pinject在Python中进行依赖注入&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在这篇文章，你将学习到依赖注入的原理以及如何在&lt;code&gt;Python&lt;/code&gt;中用&lt;code&gt;Pinject&lt;/code&gt;库实现。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;值得一读。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=KVZjGFJcUic&quot;&gt;使用Python和Tableau实现内部销售仪表板自动化|第1部分:使用硒进行网页抓取&lt;/a&gt; &lt;img alt=&quot;img&quot; src=&quot;https://gallery.mailchimp.com/e2e180baf855ac797ef407fc7/images/8def3887-e9e9-4a48-95e0-74045a6a23fc.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://t.co/XZsRmvaFOw&quot;&gt;Python更安全简单的5个建议&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.jonlu.ca/posts/aa-tracker&quot;&gt;Flight stats, entertainment, and trying to crack Widevine&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.janestreet.com/using-python-and-ocaml-in-the-same-jupyter-notebook/&quot;&gt;Python和OCaml在同一个Jupyter notebook上&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;集成操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://stackabuse.com/working-with-redis-in-python-with-django/&quot;&gt;Working with Redis in Python with Django&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;有趣的项目、工具和库&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/wkentaro/labelme&quot;&gt;labelme&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用Python的图像多边形注释（多边形，矩形，圆形，直线，点和图像级标记注释）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;目标识别新玩法？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/bridgecrewio/checkov&quot;&gt;Checkov&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Checkov&lt;/code&gt;是一个用于&lt;code&gt;infrastructure-as-code&lt;/code&gt;的静态代码分析工具。它扫描使用Terraform提供的云基础设施，并检测安全性和遵从性错误配置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;部署检查步骤自动化。。。。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/skamieniarz/newspie&quot;&gt;NewsPie&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个极简主义的新闻聚合器，用&lt;code&gt;Flask&lt;/code&gt;构建，由&lt;code&gt;News API&lt;/code&gt;驱动。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/awslabs/aws-data-wrangler&quot;&gt;aws-data-wrangler&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在AWS上处理数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/LeviBorodenko/spectrographic&quot;&gt;SpectroGraphic&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将图像转换成声音，其声谱图与图像相似。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大佬们的新玩法。。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/joelibaceta/pix-to-xls&quot;&gt;pix-to-xls&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;一个简单的工具，用&lt;code&gt;excel&lt;/code&gt;颜色格从图片提取生成&lt;code&gt;ascii&lt;/code&gt;艺术图。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;图片转excel。。越来越能玩了。。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/nanassito/SharedVault&quot;&gt;SharedVault&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SharedVault&lt;/code&gt;是一个小的应用，可让你定义需要多个人才能解锁的秘密。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;私钥有点多哦。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/f-prime/arcanevm&quot;&gt;ArcaneVM&lt;/a&gt;&lt;/strong&gt;
A Fully Homomorphic Encryption Brainf**k virtual machine.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/s0md3v/Silver&quot;&gt;Silver&lt;/a&gt;&lt;/strong&gt; 
masscan速度快，nmap 可以扫描指纹软件和vulners是一个巨大的漏洞数据库。Silver是一个前端程序，它允许通过解析数据、生成并行进程、缓存漏洞数据来实现对这些程序的完全利用，从而提高扫描速度。&lt;/p&gt;
&lt;h2&gt;最近更新&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.python.org/2019/12/python-381-376-3610-and-390a2-are-now.html&quot;&gt;Python 3.8.1, 3.7.6, 3.6.10, and 3.9.0a2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://morepypy.blogspot.com/2019/12/pypy-730-released.html&quot;&gt;PyPy 7.3.0 released&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Posa：&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️ Happy Pythonic ;-(Posa私人无责任播报)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;----- 分割线 -----&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你发现哪里翻译有误的话，请务与我联系！感谢！
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首发: &lt;a href=&quot;http://weekly.pychina.org/python-weekly/pyw-429.html&quot;&gt;pythonista-weekly~蠎周刊 ~汇集全球蠎事儿 ;-)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;改进: &lt;a href=&quot;https://github.com/PyChina/weekly/blob/master/content/python-weekly/issue#429.md&quot;&gt;issue-429.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
		<author>
			<name>Pythoneerm</name>
			<uri>http://weekly.pychina.org/</uri>
		</author>
		<source>
			<title type="html">蠎周刊</title>
			<link rel="self" href="http://weekly.pychina.org/feeds/all.atom.xml"/>
			<id>http://weekly.pychina.org/</id>
			<updated>2020-01-07T00:44:43+00:00</updated>
		</source>
	</entry>

	<entry>
		<title type="html">抽象，抽象，抽象</title>
		<link href="https://bemself.github.io/%E5%BF%83%E8%B7%AF/Java-Abstract.html"/>
		<id>https://bemself.github.io/%E5%BF%83%E8%B7%AF/Java-Abstract.html</id>
		<updated>2019-12-28T00:00:00+00:00</updated>
		<content type="html">遭遇性能问题，经同事一点拨，发现问题不仅在于我不会调优（其实是缺乏常识），更是欠缺抽象能力。</content>
		<author>
			<name>My Struggle</name>
			<email>doituself@outlook.com</email>
			<uri>https://bemself.github.io</uri>
		</author>
		<source>
			<title type="html">My Struggle</title>
			<subtitle type="html">This is RSS feed for my website</subtitle>
			<link rel="self" href="https://bemself.github.io/rss.xml"/>
			<id>https://bemself.github.io/rss.xml</id>
			<updated>2020-01-05T16:43:02+00:00</updated>
		</source>
	</entry>

</feed>
