<?xml version="1.0"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">

<channel>
	<title>Planet DebugUself</title>
	<link>http://planet.du.zoomquiet.us/</link>
	<language>en</language>
	<description>Planet DebugUself - http://planet.du.zoomquiet.us/</description>

<item>
	<title>junyu: 给博客穿件外套</title>
	<guid>http://blog.junyu.io/posts/0016-cover-page-config.html</guid>
	<link>http://blog.junyu.io/posts/0016-cover-page-config.html</link>
	<description>&lt;blockquote class=&quot;blockquote-center&quot;&gt;你的博客，你的使用手册&lt;/blockquote&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;这是我一直以来想做的一件事情，在博客的外面加上个人主页，我们散落在互联网上的痕迹越来越多，也越来越凌乱。甚至对作者本身搞清楚自己到底有多少网上的“作品”都是很复杂的一件事情。这时候增加一个个人主页显得尤为重要。&lt;/p&gt;
&lt;p&gt;有趣的事情是在Google学术信息时，现代重要的学术大拿几乎人人都有个人主页，不一定会写博客，但是一定会把自己的作品、联系方式、论文、研究方向等统统放出来，供大家使用。而&lt;a href=&quot;http://zoomquiet.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Zoom.Quite&lt;/a&gt;的主页极富一个有趣的极客灵魂感。内容之多也是印象深刻。&lt;/p&gt;
&lt;p&gt;我之前做过几次尝试，但是效果都不是很理想，也没有找到特别好的办法，今天再次尝试，终于一鼓作气先完成了一个可用的及格版本，写一写，留个纪念。&lt;/p&gt;
&lt;h2 id=&quot;Github-Pages&quot;&gt;&lt;a href=&quot;http://blog.junyu.io/atom.xml#Github-Pages&quot; class=&quot;headerlink&quot; title=&quot;Github Pages&quot;&gt;&lt;/a&gt;Github Pages&lt;/h2&gt;&lt;p&gt;Github Pages 是Github 的一个项目，通过在Github托管代码的方式把静态页面组装成可以展示的页面。&lt;a href=&quot;https://github.com/showcases/github-pages-examples&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;有大量的示例。&lt;br /&gt;&lt;a href=&quot;https://pages.github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;主页&lt;/a&gt;的视频一目了然，不再赘述。&lt;br /&gt;我的主页就是通过Github Pages生成的，使用的是默认的模版，如果不做过多的定制化，仅仅是在主页修改文字的话，内容非常非常的简单。参考我的&lt;a href=&quot;https://github.com/Wangjunyu/Leon.junyu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;仓库&lt;/a&gt;。对于这个主题，自己现在还是很满意的。&lt;/p&gt;
&lt;h2 id=&quot;域名设置&quot;&gt;&lt;a href=&quot;http://blog.junyu.io/atom.xml#域名设置&quot; class=&quot;headerlink&quot; title=&quot;域名设置&quot;&gt;&lt;/a&gt;域名设置&lt;/h2&gt;&lt;p&gt;以往二级域名的设置已经驾轻就熟。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以blog.junyu.io的设置为例，在域名服务解析的服务页面修改模式为CNAME，把指向的地址修改为：wangjunyu.gitub.io. ，保存即可。如果还无法连接，回到Github查看设置，一般的做法是增加CNAME文件，修改默认分支为gh-pages。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这一次设置的是一级域名以及开头为www 的跳转，按照之前的方式设置始终无法生效。之后从官方文档的&lt;a href=&quot;https://help.github.com/articles/using-a-custom-domain-with-github-pages/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Using a custom domain with GitHub Pages
&lt;/a&gt;开始一页一页的找，终于在&lt;a href=&quot;https://help.github.com/articles/about-supported-custom-domains/#apex-domains&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;About supported custom domains
&lt;/a&gt;找到了端倪：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An apex domain is usually configured with an A, ALIAS, or ANAME record through your DNS provider.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于一级域名的设置，一般是在填写二级域名的地方写上&lt;code&gt;@&lt;/code&gt;，选择A 或者ALIAS 模式，跳转的地址需要使用ip，在上面提到的文档中有提到。修改之后，还可以用文档中提到的’dig’ 命令进行测试。貌似一级域名的调整需要一些时间，不过一般来说十几分钟也就够了。&lt;/p&gt;
&lt;p&gt;最后，展示一下我的&lt;a href=&quot;http://junyu.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;主页&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Reference&quot;&gt;&lt;a href=&quot;http://blog.junyu.io/atom.xml#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/setting-up-an-apex-domain/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Setting up an apex domain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/setting-up-an-apex-domain-and-www-subdomain/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Setting up an apex domain and www subdomain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/about-supported-custom-domains/#www-subdomains&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;About supported custom domains
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;a href=&quot;http://blog.junyu.pro&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;完&lt;/a&gt;&lt;/blockquote&gt;


&lt;h2 id=&quot;ChangeLog&quot;&gt;&lt;a href=&quot;http://blog.junyu.io/atom.xml#ChangeLog&quot; class=&quot;headerlink&quot; title=&quot;ChangeLog&quot;&gt;&lt;/a&gt;ChangeLog&lt;/h2&gt;&lt;p&gt;170820 新建&lt;/p&gt;</description>
	<pubDate>Sun, 20 Aug 2017 12:03:00 +0000</pubDate>
</item>
<item>
	<title>li guang he: 丑照何时曝, 当然变美时 —— 运动follower 招募</title>
	<guid>http://liguanghe.github.io/2017/08/16/KeepTogether/</guid>
	<link>http://liguanghe.github.io/2017/08/16/KeepTogether/</link>
	<description>&lt;p&gt;&lt;a href=&quot;https://www.lizhi.fm/2040956/2618588406176141318&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【dunedin keep hit together】在线收听&lt;em&gt;李广鹤&lt;/em&gt;荔枝FM&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Tue, 15 Aug 2017 21:35:32 +0000</pubDate>
</item>
<item>
	<title>Debug Uself grp.: Aoi-初始化</title>
	<guid>http://du.zoomquiet.io/2017-08/aoi-init/</guid>
	<link>http://du.zoomquiet.io/2017-08/aoi-init/</link>
	<description>&lt;h1 id=&quot;是也乎&quot;&gt;是也乎,(￣▽￣)&lt;/h1&gt;

&lt;p&gt;就是要折腾…所以,来一台 miniPC 吧&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;背景&quot;&gt;背景&lt;/h2&gt;
&lt;p&gt;海外主机解决了科学上网的问题,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;但是, 带宽/CPU/内存/硬盘IP/… 什么都要銭,&lt;/li&gt;
  &lt;li&gt;而且远程登录控制响应也很难受&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;所以, 想临时测试, 或是部署一些周期性的自动化私人任务总是要有个&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;home server
家庭服务器
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;来长期运行, 内网使用&lt;/p&gt;

&lt;h2 id=&quot;硬件&quot;&gt;硬件&lt;/h2&gt;
&lt;p&gt;~ 根据预算暂时选定&lt;/p&gt;

&lt;p&gt;工控机形式, 可以长期在家运行,节能…最后决定采购的是类似以下的配置:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i2/3035203165/TB2aYpfXZtnpuFjSZFvXXbcTpXa_!!3035203165.jpg_q90.jpg&quot; alt=&quot;TB2aYpfXZtnpuFjSZFvXXbcTpXa_!!3035203165.jpg_q90.jpg（JPEG 图像，777x818 像素）&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;系统&quot;&gt;系统&lt;/h2&gt;
&lt;p&gt;~ 必须是稳健的 Linux 了&lt;/p&gt;

&lt;p&gt;只是以往长期用过 Ubuntu 系统, 而且从用户群看, Ubuntu 支持的硬件范围也最广,
果然和店家商量, 人家预装的就是 LST 版本的 Ubuntu…&lt;/p&gt;

&lt;h3 id=&quot;bash&quot;&gt;bash&lt;/h3&gt;

&lt;p&gt;拿到手, 用初始管理员帐号进入后, 习惯性的配置顺序是:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;创建自己习惯的帐号&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo su 
# useradd -s /bin/bash -G sudo,root zoomq
# chown -R zoomq:zoomq /home/zoomq
# passwd zoomq
&amp;lt;-- 新的强力临时口令
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;更换/关闭原先的帐号&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo su 
# passwd admin
&amp;lt;-- 新的强力口令
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;配置 /etc/sudoers&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  # Allow members of group sudo to execute any command
  #%sudo  ALL=(ALL:ALL) ALL
  %sudo ALL=(ALL) NOPASSWD:ALL
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;接入网络 ~ 使用图形化工具即可&lt;/li&gt;
  &lt;li&gt;升级系统软件 ~ 得先用图形工具, 选择合适的软件源仓库&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt update
$ sudo apt upgrade
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;安装常用工具:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt install htop vim
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;配置 SSH&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;先安装 SSH 服务:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt install openssh-server
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;再配置允许 SSH 登录:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo vim /etc/ssh/sshd_config
...

#Port 22
Port 9122

...

PermitRootLogin yes
StrictModes yes

RSAAuthentication yes
PubkeyAuthentication yes
...

#PasswordAuthentication yes

$ sudo service ssh restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;部署私匙, 进行远程登录&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后部署私人公匙:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir -p /home/zoomq/.ssh
$ touch /home/spawnris/.ssh/authorized_keys
$ chmod 600 /home/spawnris/.ssh/authorized_keys
从本地 ~/.ssh/id_rsa.pub 复制公匙到 authorized_keys 中
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;从本地 macOS 桌面中,配置 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.ssh/config&lt;/code&gt; 追加:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host aoi
    User zoomq
    port 9122
    ForwardAgent yes
    HostName 192.168.1.17
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后, 就可以从本地终端中使用如下指令随时登录主机了:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ssh aoi
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;配置惯用的 bash 环境
    &lt;ul&gt;
      &lt;li&gt;配置 ~/&lt;a href=&quot;https://github.com/zoom-quiet/scm/blob/master/bash/.inputrc&quot;&gt;.inputrc&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;配置 ~/&lt;a href=&quot;https://github.com/zoom-quiet/scm/blob/master/bash/.bashrc&quot;&gt;.bashrc&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;才获得习惯的终端命令行前缀形式/颜色, 以及使用上下键能快速选择对应的历史指令了&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;screen&quot;&gt;screen&lt;/h3&gt;
&lt;p&gt;~ 但是, 想真正自在的随时进入工作组终端, 还得继续…&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt install screen
$ screen -S zoomq # 创建名为 zoomq 的终端组
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;screen….常用操作&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Ctrl+a+c 新终端
Ctrl+a+w 列出所有终端
Ctrl+a+a 回到前一个终端
Ctrl+a+d 挂起并后台保持 screen

Ctrl+a+0 进入 id 为 0 的终端
Ctrl+a+1 进入 id 为 1 的终端
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;现在就可以一键从本地进入远程的终端组了:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ssh -t aoi screen -r zoomq
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;而且, 随时使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;ctrl+a+d&lt;/code&gt; 断开连接, 回到本地, 
却对远程主机中的终端组,以及各个终端中的状态都完成了自动保存,
任何时候回来都可以继续上次的嗯哼…&lt;/p&gt;

&lt;h2 id=&quot;远程配置&quot;&gt;远程配置&lt;/h2&gt;
&lt;p&gt;~ 在远程使用 vim 来编辑各种脚本/配置, 还是没有在 mac 中用 sublime text 3 来的嗯哼&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;所以, 要有机制可以在本地编辑, 自动部署到远程主机中&lt;/li&gt;
  &lt;li&gt;自然的, 想到了版本管理系统&lt;/li&gt;
  &lt;li&gt;以往折腾过稳定的自动化部署&lt;/li&gt;
  &lt;li&gt;基于 hg (&lt;a href=&quot;https://www.mercurial-scm.org/&quot;&gt;Mercurial&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;整体文件提交/部署的关系是:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;            +- .hg -&amp;gt; hooks -+
            |                |
        + /opt &amp;lt;-------------+ (自动化同步更新工作复本)
        |   ^
        V   |
    [home server]
        |   |
        |   |
    [macOS local]
        |   ^  $ hg push
        |   |
        +- path/2/local/work/path
            +- .hg &amp;lt;- 本地仓库
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;创建主机上的仓库:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd /opt
$ hg init .
$ vim .hg/hgrc

[web]
push_ssl=False
[hooks]
changegroup=/opt/cfg/hg/hooks/autoup-opt-up.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;部署自动更新 hook -&amp;gt; &lt;a href=&quot;https://github.com/zoom-quiet/scm/blob/master/hg/hooks/autoup-opt-up.sh&quot;&gt;autoup-opt-up.sh&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;创建对应目录 &lt;code class=&quot;highlighter-rouge&quot;&gt;/opt/cfg/hg/hooks&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;放置对应脚本&lt;/li&gt;
  &lt;li&gt;并设置为可执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;chmod +x autoup-opt-up.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;回到 macOS 本地, 创建合理的本地复本环境:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;配置 ~/&lt;a href=&quot;https://github.com/zoom-quiet/scm/blob/master/hg/.hgrc&quot;&gt;.hgrc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;注意其中有关配置的来源:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://bitbucket.org/sjl/mercurial-cli-templates/src&quot;&gt;sjl / mercurial-cli-templates / source / — Bitbucket&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://bitbucket.org/sjl/hg-prompt/src&quot;&gt;sjl / hg-prompt / source / — Bitbucket&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;效果:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://stevelosh.com/media/images/projects/hg-prompt/prompt.png&quot; alt=&quot;prompt&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;至此, 在本地对应工作目录中创建/修订/增补有关配置/脚本, 通过 hg 命令完成版本记录后&lt;/li&gt;
  &lt;li&gt;嘦简单的进行 &lt;code class=&quot;highlighter-rouge&quot;&gt;hg pu&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;在远程主机, 就自动化的完成了相同的版本收录, 并更新到对应目录中的文件&lt;/li&gt;
  &lt;li&gt;节省大量重复性操作&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;用时&quot;&gt;用时&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;.5h 开机配置&lt;/li&gt;
  &lt;li&gt;1.h 系统升级&lt;/li&gt;
  &lt;li&gt;.5h bash 常用配置&lt;/li&gt;
  &lt;li&gt;1.h 回忆并部署 hg&lt;/li&gt;
&lt;/ul&gt;</description>
	<pubDate>Tue, 15 Aug 2017 00:00:00 +0000</pubDate>
</item>
<item>
	<title>li guang he: Weekend 周末小憩</title>
	<guid>http://liguanghe.github.io/2017/08/12/DunedinWeekend/</guid>
	<link>http://liguanghe.github.io/2017/08/12/DunedinWeekend/</link>
	<description>&lt;p&gt;Today I have a Dunedin day. I went to traditional market after programing, there are many local food there, fresh and unique. Musicians p&lt;/p&gt;</description>
	<pubDate>Sat, 12 Aug 2017 11:35:32 +0000</pubDate>
</item>
<item>
	<title>junyu: 深夜放毒后的嗯哼</title>
	<guid>http://blog.junyu.io/posts/1003-zq-2th-meetup.html</guid>
	<link>http://blog.junyu.io/posts/1003-zq-2th-meetup.html</link>
	<description>&lt;blockquote class=&quot;blockquote-center&quot;&gt;Py103 -&amp;gt; Py104，Zoom Quite.again&lt;/blockquote&gt;


&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;再见到大妈真身，俨然小半年过去了。乡音难改，单口继续，笑声爽朗，收获多多。&lt;/p&gt;
&lt;h2 id=&quot;ZoomQuiet-offline-refresh&quot;&gt;&lt;a href=&quot;http://blog.junyu.io/atom.xml#ZoomQuiet-offline-refresh&quot; class=&quot;headerlink&quot; title=&quot;ZoomQuiet.offline.refresh&quot;&gt;&lt;/a&gt;ZoomQuiet.offline.refresh&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;自带BGM出场的男人&lt;/li&gt;
&lt;li&gt;全程自带BGM的男人&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Python-Python-in-my-eye&quot;&gt;&lt;a href=&quot;http://blog.junyu.io/atom.xml#Python-Python-in-my-eye&quot; class=&quot;headerlink&quot; title=&quot;Python != Python in my eye&quot;&gt;&lt;/a&gt;Python != Python in my eye&lt;/h2&gt;&lt;p&gt;大家问了很多问题，刚开始接触编程，太多的不确定性带来的未知的恐惧感渗透在一个又一个问题里。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;编程恐惧&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发展路径是怎样的？&lt;/li&gt;
&lt;li&gt;好奇你和Python的第一次相遇？&lt;/li&gt;
&lt;li&gt;……&lt;br /&gt;突破这种心理的最简单的方式是：编程。认真的编程，认真的思考，编程会变成一个又一个具体的问题or挑战，所以其实会变成克服一个又一个挑战的过程。挑战一个又一个的越变越大，越变越复杂，再被不断拆分，不断分解。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Google? Google!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;能不能用Google，你懂的原因&lt;/li&gt;
&lt;li&gt;是否知道Google的搜索规则&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://support.google.com/websearch/#topic=3378866&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方-&amp;gt;使用Google 搜索帮助中心&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://support.google.com/websearch/answer/2466433?hl=zh-Hans&amp;ref_topic=3081620&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方-&amp;gt;优化网页搜索&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/20161362&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知乎-&amp;gt;如何用好谷歌等搜索引擎？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Youtube也是Google的一部分呢。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;关键词的调整、搜索套路的调整&lt;/li&gt;
&lt;li&gt;搜索的韧性，复杂问题大妈需要上百次的搜索尝试，是也乎～&lt;/li&gt;
&lt;li&gt;更重要的是问题的拆解、定位&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;信息检索和信息品味在阳志平老师的《工作谈》中有提到～试试看Google之。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Extreme Programming.Pair Programming&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解锁新姿势，做全新尝试&lt;/li&gt;
&lt;li&gt;立马有了组织线下活动的动力，继续更新我的活动&lt;a href=&quot;https://meetup.junyu.pro/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;记录&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Practise * 10000…. -&amp;gt; expert&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先动手，再提问&lt;/li&gt;
&lt;li&gt;持续动手，一天不Coding，浑身痒痒&lt;/li&gt;
&lt;li&gt;代码量上来了，一切都好谈&lt;/li&gt;
&lt;li&gt;还可以多看代码，看得多了，也就会写了&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Docstring &amp;amp; Comment&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To do: docstring&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下是开学典礼后深夜放毒夹带的私货……&lt;/p&gt;
&lt;h2 id=&quot;Error-Http-404&quot;&gt;&lt;a href=&quot;http://blog.junyu.io/atom.xml#Error-Http-404&quot; class=&quot;headerlink&quot; title=&quot;Error Http 404&quot;&gt;&lt;/a&gt;Error Http 404&lt;/h2&gt;&lt;p&gt;在去串店的路上，大妈放出了来自互联网远古时代的呐喊，20年收集宫崎骏和久石让动画的心路历程。&lt;br /&gt;信息饥渴 -&amp;gt; 信息存储 -&amp;gt; 信息爆炸 -&amp;gt; 信息质量&lt;/p&gt;
&lt;p&gt;作为后互联网远古时代的原住民，曾经也有过数百张光盘刻录、硬盘存储的相似经历，不过由于懒，后来放弃了……看到了大妈的&lt;a href=&quot;http://zoomquiet.io/collection.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Collection&lt;/a&gt;，心中的干柴终于遇到了烈火。继续搞起～&lt;/p&gt;
&lt;h2 id=&quot;Moinmoin&quot;&gt;&lt;a href=&quot;http://blog.junyu.io/atom.xml#Moinmoin&quot; class=&quot;headerlink&quot; title=&quot;Moinmoin&quot;&gt;&lt;/a&gt;Moinmoin&lt;/h2&gt;&lt;p&gt;Wiki还是那个wiki，写完&lt;a href=&quot;http://blog.junyu.io/posts/0602-wiki-user-guide.html&quot;&gt;Wiki上车指南&lt;/a&gt;，经历了这几个月的实践，也算是一个有故事的人了，大妈又给了更多的嗯哼：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前期的混乱很正常&lt;/li&gt;
&lt;li&gt;好好架构&lt;/li&gt;
&lt;li&gt;内容丰富了会有变化&lt;/li&gt;
&lt;li&gt;自己写插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Debug-Uself&quot;&gt;&lt;a href=&quot;http://blog.junyu.io/atom.xml#Debug-Uself&quot; class=&quot;headerlink&quot; title=&quot;Debug Uself&quot;&gt;&lt;/a&gt;Debug Uself&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;深以为然&lt;/li&gt;
&lt;li&gt;兴趣&lt;/li&gt;
&lt;li&gt;实用+需求出发&lt;/li&gt;
&lt;li&gt;Keep Moving&lt;br /&gt;这部分纯私货～&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Reference&quot;&gt;&lt;a href=&quot;http://blog.junyu.io/atom.xml#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ZhangCici/python/issues/9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ZhangCici的记录&lt;/a&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;a href=&quot;http://blog.junyu.pro&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;完&lt;/a&gt;&lt;/blockquote&gt;


&lt;h2 id=&quot;ChangeLog&quot;&gt;&lt;a href=&quot;http://blog.junyu.io/atom.xml#ChangeLog&quot; class=&quot;headerlink&quot; title=&quot;ChangeLog&quot;&gt;&lt;/a&gt;ChangeLog&lt;/h2&gt;&lt;p&gt;170811 新建&lt;/p&gt;</description>
	<pubDate>Fri, 11 Aug 2017 09:19:33 +0000</pubDate>
</item>

</channel>
</rss>
